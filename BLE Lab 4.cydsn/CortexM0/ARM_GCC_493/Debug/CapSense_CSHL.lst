ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,10,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 10
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	10
  24      00000000 
  24      0000
  25              		.global	CapSense_sensorBaselineLow
  26 000a 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 5
  29              	CapSense_sensorBaselineLow:
  30 000c 00000000 		.space	5
  30      00
  31              		.global	CapSense_sensorSignal
  32 0011 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 5
  35              	CapSense_sensorSignal:
  36 0014 00000000 		.space	5
  36      00
  37              		.global	CapSense_sensorOnMask
  38 0019 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 001c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,5,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 5
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 2


  54 0004 1E       		.byte	30
  55              		.global	CapSense_enableRawFilters
  56              		.type	CapSense_enableRawFilters, %object
  57              		.size	CapSense_enableRawFilters, 1
  58              	CapSense_enableRawFilters:
  59 0005 01       		.byte	1
  60              		.comm	CapSense_fingerThreshold,1,4
  61              		.comm	CapSense_noiseThreshold,1,4
  62              		.comm	CapSense_negativeNoiseThreshold,1,4
  63              		.comm	CapSense_hysteresis,1,4
  64              		.global	CapSense_debounce
  65 0006 0000     		.align	2
  66              		.type	CapSense_debounce, %object
  67              		.size	CapSense_debounce, 1
  68              	CapSense_debounce:
  69 0008 01       		.byte	1
  70              		.global	CapSense_rawDataIndex
  71              		.section	.rodata
  72              		.align	2
  73              		.type	CapSense_rawDataIndex, %object
  74              		.size	CapSense_rawDataIndex, 1
  75              	CapSense_rawDataIndex:
  76 0000 00       		.space	1
  77              		.global	CapSense_numberOfSensors
  78 0001 000000   		.align	2
  79              		.type	CapSense_numberOfSensors, %object
  80              		.size	CapSense_numberOfSensors, 1
  81              	CapSense_numberOfSensors:
  82 0004 05       		.byte	5
  83 0005 000000   		.align	2
  84              		.type	CapSense_centroidMult, %object
  85              		.size	CapSense_centroidMult, 2
  86              	CapSense_centroidMult:
  87 0008 0019     		.short	6400
  88 000a 0000     		.data
  89 0009 000000   		.align	2
  90              		.type	CapSense_posFiltersMask, %object
  91              		.size	CapSense_posFiltersMask, 1
  92              	CapSense_posFiltersMask:
  93 000c 08       		.byte	8
  94 000d 000000   		.align	2
  95              		.type	CapSense_posFiltersData, %object
  96              		.size	CapSense_posFiltersData, 3
  97              	CapSense_posFiltersData:
  98 0010 01       		.byte	1
  99 0011 00       		.byte	0
 100 0012 00       		.byte	0
 101 0013 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 102              		.align	2
 103              		.global	CapSense_BaseInit
 104              		.code	16
 105              		.thumb_func
 106              		.type	CapSense_BaseInit, %function
 107              	CapSense_BaseInit:
 108              	.LFB36:
 109              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 3


   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 4


  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0x8u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 5


 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 110              		.loc 1 143 0
 111              		.cfi_startproc
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 82B0     		sub	sp, sp, #8
 117              		.cfi_def_cfa_offset 16
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 121              		.loc 1 160 0
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 6


 122 0008 0E4B     		ldr	r3, .L2
 123 000a 7A68     		ldr	r2, [r7, #4]
 124 000c 5200     		lsl	r2, r2, #1
 125 000e D15A     		ldrh	r1, [r2, r3]
 126 0010 0D4B     		ldr	r3, .L2+4
 127 0012 7A68     		ldr	r2, [r7, #4]
 128 0014 5200     		lsl	r2, r2, #1
 129 0016 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 130              		.loc 1 161 0
 131 0018 0C4A     		ldr	r2, .L2+8
 132 001a 7B68     		ldr	r3, [r7, #4]
 133 001c D318     		add	r3, r2, r3
 134 001e 0022     		mov	r2, #0
 135 0020 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 136              		.loc 1 162 0
 137 0022 0B4A     		ldr	r2, .L2+12
 138 0024 7B68     		ldr	r3, [r7, #4]
 139 0026 D318     		add	r3, r2, r3
 140 0028 0022     		mov	r2, #0
 141 002a 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 142              		.loc 1 178 0
 143 002c 054B     		ldr	r3, .L2
 144 002e 7A68     		ldr	r2, [r7, #4]
 145 0030 5200     		lsl	r2, r2, #1
 146 0032 D15A     		ldrh	r1, [r2, r3]
 147 0034 074B     		ldr	r3, .L2+16
 148 0036 7A68     		ldr	r2, [r7, #4]
 149 0038 5200     		lsl	r2, r2, #1
 150 003a D152     		strh	r1, [r2, r3]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 7


 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 151              		.loc 1 190 0
 152 003c BD46     		mov	sp, r7
 153 003e 02B0     		add	sp, sp, #8
 154              		@ sp needed
 155 0040 80BD     		pop	{r7, pc}
 156              	.L3:
 157 0042 C046     		.align	2
 158              	.L2:
 159 0044 00000000 		.word	CapSense_sensorRaw
 160 0048 00000000 		.word	CapSense_sensorBaseline
 161 004c 00000000 		.word	CapSense_sensorBaselineLow
 162 0050 00000000 		.word	CapSense_sensorSignal
 163 0054 00000000 		.word	CapSense_rawFilterData1
 164              		.cfi_endproc
 165              	.LFE36:
 166              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 167              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_InitializeSensorBaseline
 170              		.code	16
 171              		.thumb_func
 172              		.type	CapSense_InitializeSensorBaseline, %function
 173              	CapSense_InitializeSensorBaseline:
 174              	.LFB37:
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 175              		.loc 1 218 0
 176              		.cfi_startproc
 177 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 8


 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 82B0     		sub	sp, sp, #8
 182              		.cfi_def_cfa_offset 16
 183 0004 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 185 0006 7860     		str	r0, [r7, #4]
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 186              		.loc 1 220 0
 187 0008 7B68     		ldr	r3, [r7, #4]
 188 000a 181C     		mov	r0, r3
 189 000c FFF7FEFF 		bl	CapSense_ScanSensor
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 190              		.loc 1 221 0
 191 0010 C046     		mov	r8, r8
 192              	.L5:
 193              		.loc 1 221 0 is_stmt 0 discriminator 1
 194 0012 FFF7FEFF 		bl	CapSense_IsBusy
 195 0016 031E     		sub	r3, r0, #0
 196 0018 FBD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 197              		.loc 1 227 0 is_stmt 1
 198 001a 7B68     		ldr	r3, [r7, #4]
 199 001c 181C     		mov	r0, r3
 200 001e FFF7FEFF 		bl	CapSense_BaseInit
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 201              		.loc 1 228 0
 202 0022 BD46     		mov	sp, r7
 203 0024 02B0     		add	sp, sp, #8
 204              		@ sp needed
 205 0026 80BD     		pop	{r7, pc}
 206              		.cfi_endproc
 207              	.LFE37:
 208              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 209              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 210              		.align	2
 211              		.global	CapSense_InitializeAllBaselines
 212              		.code	16
 213              		.thumb_func
 214              		.type	CapSense_InitializeAllBaselines, %function
 215              	CapSense_InitializeAllBaselines:
 216              	.LFB38:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 9


 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 217              		.loc 1 255 0
 218              		.cfi_startproc
 219 0000 80B5     		push	{r7, lr}
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 82B0     		sub	sp, sp, #8
 224              		.cfi_def_cfa_offset 16
 225 0004 00AF     		add	r7, sp, #0
 226              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 227              		.loc 1 258 0
 228 0006 0023     		mov	r3, #0
 229 0008 7B60     		str	r3, [r7, #4]
 230 000a 06E0     		b	.L7
 231              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 232              		.loc 1 260 0 discriminator 3
 233 000c 7B68     		ldr	r3, [r7, #4]
 234 000e 181C     		mov	r0, r3
 235 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 236              		.loc 1 258 0 discriminator 3
 237 0014 7B68     		ldr	r3, [r7, #4]
 238 0016 0133     		add	r3, r3, #1
 239 0018 7B60     		str	r3, [r7, #4]
 240              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 241              		.loc 1 258 0 is_stmt 0 discriminator 1
 242 001a 7B68     		ldr	r3, [r7, #4]
 243 001c 042B     		cmp	r3, #4
 244 001e F5D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 245              		.loc 1 262 0 is_stmt 1
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 10


 246 0020 BD46     		mov	sp, r7
 247 0022 02B0     		add	sp, sp, #8
 248              		@ sp needed
 249 0024 80BD     		pop	{r7, pc}
 250              		.cfi_endproc
 251              	.LFE38:
 252              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 253 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 254              		.align	2
 255              		.global	CapSense_InitializeEnabledBaselines
 256              		.code	16
 257              		.thumb_func
 258              		.type	CapSense_InitializeEnabledBaselines, %function
 259              	CapSense_InitializeEnabledBaselines:
 260              	.LFB39:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 261              		.loc 1 290 0
 262              		.cfi_startproc
 263 0000 80B5     		push	{r7, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 7, -8
 266              		.cfi_offset 14, -4
 267 0002 82B0     		sub	sp, sp, #8
 268              		.cfi_def_cfa_offset 16
 269 0004 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 11


 271              		.loc 1 294 0
 272 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 273              		.loc 1 295 0
 274 000a C046     		mov	r8, r8
 275              	.L10:
 276              		.loc 1 295 0 is_stmt 0 discriminator 1
 277 000c FFF7FEFF 		bl	CapSense_IsBusy
 278 0010 031E     		sub	r3, r0, #0
 279 0012 FBD1     		bne	.L10
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 280              		.loc 1 300 0 is_stmt 1
 281 0014 0023     		mov	r3, #0
 282 0016 7B60     		str	r3, [r7, #4]
 283 0018 11E0     		b	.L11
 284              	.L13:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 285              		.loc 1 302 0
 286 001a 0C4A     		ldr	r2, .L14
 287 001c 7B68     		ldr	r3, [r7, #4]
 288 001e 101C     		mov	r0, r2
 289 0020 191C     		mov	r1, r3
 290 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 291 0026 031C     		mov	r3, r0
 292 0028 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 293              		.loc 1 305 0
 294 002a 3B68     		ldr	r3, [r7]
 295 002c 002B     		cmp	r3, #0
 296 002e 03D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 297              		.loc 1 308 0
 298 0030 7B68     		ldr	r3, [r7, #4]
 299 0032 181C     		mov	r0, r3
 300 0034 FFF7FEFF 		bl	CapSense_BaseInit
 301              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302              		.loc 1 300 0 discriminator 2
 303 0038 7B68     		ldr	r3, [r7, #4]
 304 003a 0133     		add	r3, r3, #1
 305 003c 7B60     		str	r3, [r7, #4]
 306              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 307              		.loc 1 300 0 is_stmt 0 discriminator 1
 308 003e 7B68     		ldr	r3, [r7, #4]
 309 0040 042B     		cmp	r3, #4
 310 0042 EAD9     		bls	.L13
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 12


 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 311              		.loc 1 311 0 is_stmt 1
 312 0044 BD46     		mov	sp, r7
 313 0046 02B0     		add	sp, sp, #8
 314              		@ sp needed
 315 0048 80BD     		pop	{r7, pc}
 316              	.L15:
 317 004a C046     		.align	2
 318              	.L14:
 319 004c 00000000 		.word	CapSense_sensorEnableMask
 320              		.cfi_endproc
 321              	.LFE39:
 322              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 323              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 324              		.align	2
 325              		.global	CapSense_UpdateBaselineNoThreshold
 326              		.code	16
 327              		.thumb_func
 328              		.type	CapSense_UpdateBaselineNoThreshold, %function
 329              	CapSense_UpdateBaselineNoThreshold:
 330              	.LFB40:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 13


 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 331              		.loc 1 355 0
 332              		.cfi_startproc
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 87B0     		sub	sp, sp, #28
 339              		.cfi_def_cfa_offset 40
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 342 0006 7860     		str	r0, [r7, #4]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 343              		.loc 1 360 0
 344 0008 0F23     		mov	r3, #15
 345 000a FB18     		add	r3, r7, r3
 346 000c 7E49     		ldr	r1, .L29
 347 000e 7A68     		ldr	r2, [r7, #4]
 348 0010 8A18     		add	r2, r1, r2
 349 0012 1278     		ldrb	r2, [r2]
 350 0014 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 351              		.loc 1 369 0
 352 0016 0F23     		mov	r3, #15
 353 0018 FB18     		add	r3, r7, r3
 354 001a 1A78     		ldrb	r2, [r3]
 355 001c 0E23     		mov	r3, #14
 356 001e FB18     		add	r3, r7, r3
 357 0020 7A49     		ldr	r1, .L29+4
 358 0022 8A5C     		ldrb	r2, [r1, r2]
 359 0024 1A70     		strb	r2, [r3]
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 360              		.loc 1 370 0
 361 0026 1023     		mov	r3, #16
 362 0028 FB18     		add	r3, r7, r3
 363 002a 794A     		ldr	r2, .L29+8
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 14


 364 002c 7968     		ldr	r1, [r7, #4]
 365 002e 4900     		lsl	r1, r1, #1
 366 0030 8A5A     		ldrh	r2, [r1, r2]
 367 0032 1A80     		strh	r2, [r3]
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 368              		.loc 1 373 0
 369 0034 774B     		ldr	r3, .L29+12
 370 0036 1B78     		ldrb	r3, [r3]
 371 0038 002B     		cmp	r3, #0
 372 003a 15D0     		beq	.L17
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 373              		.loc 1 394 0
 374 003c 764B     		ldr	r3, .L29+16
 375 003e 7A68     		ldr	r2, [r7, #4]
 376 0040 5200     		lsl	r2, r2, #1
 377 0042 D25A     		ldrh	r2, [r2, r3]
 378 0044 1023     		mov	r3, #16
 379 0046 FC18     		add	r4, r7, r3
 380 0048 1023     		mov	r3, #16
 381 004a FB18     		add	r3, r7, r3
 382 004c 1B88     		ldrh	r3, [r3]
 383 004e 181C     		mov	r0, r3
 384 0050 111C     		mov	r1, r2
 385 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 386 0056 031C     		mov	r3, r0
 387 0058 2380     		strh	r3, [r4]
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 388              		.loc 1 395 0
 389 005a 6F4B     		ldr	r3, .L29+16
 390 005c 7A68     		ldr	r2, [r7, #4]
 391 005e 5200     		lsl	r2, r2, #1
 392 0060 1021     		mov	r1, #16
 393 0062 7918     		add	r1, r7, r1
 394 0064 0988     		ldrh	r1, [r1]
 395 0066 D152     		strh	r1, [r2, r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 15


 396              	.L17:
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 397              		.loc 1 416 0
 398 0068 7B68     		ldr	r3, [r7, #4]
 399 006a DAB2     		uxtb	r2, r3
 400 006c 6B49     		ldr	r1, .L29+20
 401 006e 684B     		ldr	r3, .L29+8
 402 0070 081C     		mov	r0, r1
 403 0072 111C     		mov	r1, r2
 404 0074 1A1C     		mov	r2, r3
 405 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 406              		.loc 1 421 0
 407 007a 694B     		ldr	r3, .L29+24
 408 007c 7A68     		ldr	r2, [r7, #4]
 409 007e 5200     		lsl	r2, r2, #1
 410 0080 D35A     		ldrh	r3, [r2, r3]
 411 0082 1022     		mov	r2, #16
 412 0084 BA18     		add	r2, r7, r2
 413 0086 1288     		ldrh	r2, [r2]
 414 0088 9A42     		cmp	r2, r3
 415 008a 12D3     		bcc	.L18
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 416              		.loc 1 423 0
 417 008c 654A     		ldr	r2, .L29+28
 418 008e 7B68     		ldr	r3, [r7, #4]
 419 0090 D318     		add	r3, r2, r3
 420 0092 0022     		mov	r2, #0
 421 0094 1A70     		strb	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 422              		.loc 1 424 0
 423 0096 624B     		ldr	r3, .L29+24
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 16


 424 0098 7A68     		ldr	r2, [r7, #4]
 425 009a 5200     		lsl	r2, r2, #1
 426 009c D25A     		ldrh	r2, [r2, r3]
 427 009e 1223     		mov	r3, #18
 428 00a0 FB18     		add	r3, r7, r3
 429 00a2 1021     		mov	r1, #16
 430 00a4 7918     		add	r1, r7, r1
 431 00a6 0988     		ldrh	r1, [r1]
 432 00a8 8A1A     		sub	r2, r1, r2
 433 00aa 1A80     		strh	r2, [r3]
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 434              		.loc 1 425 0
 435 00ac 0123     		mov	r3, #1
 436 00ae 7B61     		str	r3, [r7, #20]
 437 00b0 0CE0     		b	.L19
 438              	.L18:
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 439              		.loc 1 429 0
 440 00b2 5B4B     		ldr	r3, .L29+24
 441 00b4 7A68     		ldr	r2, [r7, #4]
 442 00b6 5200     		lsl	r2, r2, #1
 443 00b8 D15A     		ldrh	r1, [r2, r3]
 444 00ba 1223     		mov	r3, #18
 445 00bc FB18     		add	r3, r7, r3
 446 00be 1022     		mov	r2, #16
 447 00c0 BA18     		add	r2, r7, r2
 448 00c2 1288     		ldrh	r2, [r2]
 449 00c4 8A1A     		sub	r2, r1, r2
 450 00c6 1A80     		strh	r2, [r3]
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 451              		.loc 1 430 0
 452 00c8 0023     		mov	r3, #0
 453 00ca 7B61     		str	r3, [r7, #20]
 454              	.L19:
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 455              		.loc 1 434 0
 456 00cc 7B69     		ldr	r3, [r7, #20]
 457 00ce 002B     		cmp	r3, #0
 458 00d0 2AD1     		bne	.L20
 459              		.loc 1 434 0 is_stmt 0 discriminator 1
 460 00d2 0F23     		mov	r3, #15
 461 00d4 FB18     		add	r3, r7, r3
 462 00d6 1B78     		ldrb	r3, [r3]
 463 00d8 534A     		ldr	r2, .L29+32
 464 00da D35C     		ldrb	r3, [r2, r3]
 465 00dc 9BB2     		uxth	r3, r3
 466 00de 1222     		mov	r2, #18
 467 00e0 BA18     		add	r2, r7, r2
 468 00e2 1288     		ldrh	r2, [r2]
 469 00e4 9A42     		cmp	r2, r3
 470 00e6 1FD9     		bls	.L20
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 17


 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 471              		.loc 1 439 0 is_stmt 1
 472 00e8 4E4A     		ldr	r2, .L29+28
 473 00ea 7B68     		ldr	r3, [r7, #4]
 474 00ec D318     		add	r3, r2, r3
 475 00ee 1A78     		ldrb	r2, [r3]
 476 00f0 4E49     		ldr	r1, .L29+36
 477 00f2 7B68     		ldr	r3, [r7, #4]
 478 00f4 CB18     		add	r3, r1, r3
 479 00f6 1B78     		ldrb	r3, [r3]
 480 00f8 9A42     		cmp	r2, r3
 481 00fa 09D3     		bcc	.L21
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 482              		.loc 1 441 0
 483 00fc 7B68     		ldr	r3, [r7, #4]
 484 00fe 181C     		mov	r0, r3
 485 0100 FFF7FEFF 		bl	CapSense_BaseInit
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 486              		.loc 1 442 0
 487 0104 474A     		ldr	r2, .L29+28
 488 0106 7B68     		ldr	r3, [r7, #4]
 489 0108 D318     		add	r3, r2, r3
 490 010a 0022     		mov	r2, #0
 491 010c 1A70     		strb	r2, [r3]
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 492              		.loc 1 439 0
 493 010e 51E0     		b	.L23
 494              	.L21:
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 495              		.loc 1 446 0
 496 0110 444A     		ldr	r2, .L29+28
 497 0112 7B68     		ldr	r3, [r7, #4]
 498 0114 D318     		add	r3, r2, r3
 499 0116 1B78     		ldrb	r3, [r3]
 500 0118 0133     		add	r3, r3, #1
 501 011a D9B2     		uxtb	r1, r3
 502 011c 414A     		ldr	r2, .L29+28
 503 011e 7B68     		ldr	r3, [r7, #4]
 504 0120 D318     		add	r3, r2, r3
 505 0122 0A1C     		add	r2, r1, #0
 506 0124 1A70     		strb	r2, [r3]
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 507              		.loc 1 439 0
 508 0126 45E0     		b	.L23
 509              	.L20:
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 18


 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 510              		.loc 1 454 0
 511 0128 0E23     		mov	r3, #14
 512 012a FB18     		add	r3, r7, r3
 513 012c 1B78     		ldrb	r3, [r3]
 514 012e 9BB2     		uxth	r3, r3
 515 0130 1222     		mov	r2, #18
 516 0132 BA18     		add	r2, r7, r2
 517 0134 1288     		ldrh	r2, [r2]
 518 0136 9A42     		cmp	r2, r3
 519 0138 0DD9     		bls	.L24
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 520              		.loc 1 455 0 discriminator 1
 521 013a 0F23     		mov	r3, #15
 522 013c FB18     		add	r3, r7, r3
 523 013e 1B78     		ldrb	r3, [r3]
 524 0140 394A     		ldr	r2, .L29+32
 525 0142 D35C     		ldrb	r3, [r2, r3]
 526 0144 9BB2     		uxth	r3, r3
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 527              		.loc 1 454 0 discriminator 1
 528 0146 1222     		mov	r2, #18
 529 0148 BA18     		add	r2, r7, r2
 530 014a 1288     		ldrh	r2, [r2]
 531 014c 9A42     		cmp	r2, r3
 532 014e 31D2     		bcs	.L23
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 533              		.loc 1 456 0
 534 0150 7B69     		ldr	r3, [r7, #20]
 535 0152 002B     		cmp	r3, #0
 536 0154 2ED1     		bne	.L23
 537              	.L24:
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 538              		.loc 1 467 0
 539 0156 324B     		ldr	r3, .L29+24
 540 0158 7A68     		ldr	r2, [r7, #4]
 541 015a 5200     		lsl	r2, r2, #1
 542 015c D35A     		ldrh	r3, [r2, r3]
 543 015e 1B02     		lsl	r3, r3, #8
 544 0160 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 545              		.loc 1 468 0
 546 0162 334A     		ldr	r2, .L29+40
 547 0164 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 19


 548 0166 D318     		add	r3, r2, r3
 549 0168 1B78     		ldrb	r3, [r3]
 550 016a 1A1C     		mov	r2, r3
 551 016c BB68     		ldr	r3, [r7, #8]
 552 016e 1343     		orr	r3, r2
 553 0170 BB60     		str	r3, [r7, #8]
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 554              		.loc 1 471 0
 555 0172 1023     		mov	r3, #16
 556 0174 FB18     		add	r3, r7, r3
 557 0176 1B88     		ldrh	r3, [r3]
 558 0178 BA68     		ldr	r2, [r7, #8]
 559 017a D318     		add	r3, r2, r3
 560 017c BB60     		str	r3, [r7, #8]
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 561              		.loc 1 474 0
 562 017e 284B     		ldr	r3, .L29+24
 563 0180 7A68     		ldr	r2, [r7, #4]
 564 0182 5200     		lsl	r2, r2, #1
 565 0184 D35A     		ldrh	r3, [r2, r3]
 566 0186 1A1C     		mov	r2, r3
 567 0188 BB68     		ldr	r3, [r7, #8]
 568 018a 9B1A     		sub	r3, r3, r2
 569 018c BB60     		str	r3, [r7, #8]
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 570              		.loc 1 477 0
 571 018e BB68     		ldr	r3, [r7, #8]
 572 0190 1B0A     		lsr	r3, r3, #8
 573 0192 99B2     		uxth	r1, r3
 574 0194 224B     		ldr	r3, .L29+24
 575 0196 7A68     		ldr	r2, [r7, #4]
 576 0198 5200     		lsl	r2, r2, #1
 577 019a D152     		strh	r1, [r2, r3]
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 578              		.loc 1 478 0
 579 019c BB68     		ldr	r3, [r7, #8]
 580 019e D9B2     		uxtb	r1, r3
 581 01a0 234A     		ldr	r2, .L29+40
 582 01a2 7B68     		ldr	r3, [r7, #4]
 583 01a4 D318     		add	r3, r2, r3
 584 01a6 0A1C     		add	r2, r1, #0
 585 01a8 1A70     		strb	r2, [r3]
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 586              		.loc 1 480 0
 587 01aa 1E4A     		ldr	r2, .L29+28
 588 01ac 7B68     		ldr	r3, [r7, #4]
 589 01ae D318     		add	r3, r2, r3
 590 01b0 0022     		mov	r2, #0
 591 01b2 1A70     		strb	r2, [r3]
 592              	.L23:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 20


 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 593              		.loc 1 487 0
 594 01b4 0E23     		mov	r3, #14
 595 01b6 FB18     		add	r3, r7, r3
 596 01b8 1B78     		ldrb	r3, [r3]
 597 01ba 9BB2     		uxth	r3, r3
 598 01bc 1222     		mov	r2, #18
 599 01be BA18     		add	r2, r7, r2
 600 01c0 1288     		ldrh	r2, [r2]
 601 01c2 9A42     		cmp	r2, r3
 602 01c4 17D9     		bls	.L25
 603              		.loc 1 487 0 is_stmt 0 discriminator 1
 604 01c6 7B69     		ldr	r3, [r7, #20]
 605 01c8 002B     		cmp	r3, #0
 606 01ca 14D0     		beq	.L25
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 607              		.loc 1 491 0 is_stmt 1
 608 01cc 1223     		mov	r3, #18
 609 01ce FB18     		add	r3, r7, r3
 610 01d0 1B88     		ldrh	r3, [r3]
 611 01d2 FF2B     		cmp	r3, #255
 612 01d4 05D9     		bls	.L26
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 613              		.loc 1 493 0
 614 01d6 174A     		ldr	r2, .L29+44
 615 01d8 7B68     		ldr	r3, [r7, #4]
 616 01da D318     		add	r3, r2, r3
 617 01dc FF22     		mov	r2, #255
 618 01de 1A70     		strb	r2, [r3]
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 619              		.loc 1 491 0
 620 01e0 0EE0     		b	.L16
 621              	.L26:
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 622              		.loc 1 497 0
 623 01e2 1223     		mov	r3, #18
 624 01e4 FB18     		add	r3, r7, r3
 625 01e6 1B88     		ldrh	r3, [r3]
 626 01e8 D9B2     		uxtb	r1, r3
 627 01ea 124A     		ldr	r2, .L29+44
 628 01ec 7B68     		ldr	r3, [r7, #4]
 629 01ee D318     		add	r3, r2, r3
 630 01f0 0A1C     		add	r2, r1, #0
 631 01f2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 21


 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 632              		.loc 1 491 0
 633 01f4 04E0     		b	.L16
 634              	.L25:
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 635              		.loc 1 506 0
 636 01f6 0F4A     		ldr	r2, .L29+44
 637 01f8 7B68     		ldr	r3, [r7, #4]
 638 01fa D318     		add	r3, r2, r3
 639 01fc 0022     		mov	r2, #0
 640 01fe 1A70     		strb	r2, [r3]
 641              	.L16:
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 642              		.loc 1 513 0
 643 0200 BD46     		mov	sp, r7
 644 0202 07B0     		add	sp, sp, #28
 645              		@ sp needed
 646 0204 90BD     		pop	{r4, r7, pc}
 647              	.L30:
 648 0206 C046     		.align	2
 649              	.L29:
 650 0208 00000000 		.word	CapSense_widgetNumber
 651 020c 00000000 		.word	CapSense_noiseThreshold
 652 0210 00000000 		.word	CapSense_sensorRaw
 653 0214 00000000 		.word	CapSense_enableRawFilters
 654 0218 00000000 		.word	CapSense_rawFilterData1
 655 021c 00000000 		.word	CapSense_config
 656 0220 00000000 		.word	CapSense_sensorBaseline
 657 0224 00000000 		.word	CapSense_lowBaselineResetCnt
 658 0228 00000000 		.word	CapSense_negativeNoiseThreshold
 659 022c 00000000 		.word	CapSense_lowBaselineReset
 660 0230 00000000 		.word	CapSense_sensorBaselineLow
 661 0234 00000000 		.word	CapSense_sensorSignal
 662              		.cfi_endproc
 663              	.LFE40:
 664              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 665              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 666              		.align	2
 667              		.global	CapSense_UpdateSensorBaseline
 668              		.code	16
 669              		.thumb_func
 670              		.type	CapSense_UpdateSensorBaseline, %function
 671              	CapSense_UpdateSensorBaseline:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 22


 672              	.LFB41:
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 673              		.loc 1 547 0
 674              		.cfi_startproc
 675 0000 80B5     		push	{r7, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 82B0     		sub	sp, sp, #8
 680              		.cfi_def_cfa_offset 16
 681 0004 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 683 0006 7860     		str	r0, [r7, #4]
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 23


 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 684              		.loc 1 559 0
 685 0008 7B68     		ldr	r3, [r7, #4]
 686 000a 181C     		mov	r0, r3
 687 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 688              		.loc 1 562 0
 689 0010 7B68     		ldr	r3, [r7, #4]
 690 0012 181C     		mov	r0, r3
 691 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 692              		.loc 1 568 0
 693 0018 BD46     		mov	sp, r7
 694 001a 02B0     		add	sp, sp, #8
 695              		@ sp needed
 696 001c 80BD     		pop	{r7, pc}
 697              		.cfi_endproc
 698              	.LFE41:
 699              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 700 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 701              		.align	2
 702              		.global	CapSense_UpdateEnabledBaselines
 703              		.code	16
 704              		.thumb_func
 705              		.type	CapSense_UpdateEnabledBaselines, %function
 706              	CapSense_UpdateEnabledBaselines:
 707              	.LFB42:
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 24


 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 708              		.loc 1 601 0
 709              		.cfi_startproc
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 82B0     		sub	sp, sp, #8
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              		.cfi_def_cfa_register 7
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 718              		.loc 1 605 0
 719 0006 0023     		mov	r3, #0
 720 0008 7B60     		str	r3, [r7, #4]
 721 000a 11E0     		b	.L33
 722              	.L35:
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 723              		.loc 1 607 0
 724 000c 0B4A     		ldr	r2, .L36
 725 000e 7B68     		ldr	r3, [r7, #4]
 726 0010 101C     		mov	r0, r2
 727 0012 191C     		mov	r1, r3
 728 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 729 0018 031C     		mov	r3, r0
 730 001a 3B60     		str	r3, [r7]
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 731              		.loc 1 609 0
 732 001c 3B68     		ldr	r3, [r7]
 733 001e 002B     		cmp	r3, #0
 734 0020 03D0     		beq	.L34
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 735              		.loc 1 611 0
 736 0022 7B68     		ldr	r3, [r7, #4]
 737 0024 181C     		mov	r0, r3
 738 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 739              	.L34:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 740              		.loc 1 605 0 discriminator 2
 741 002a 7B68     		ldr	r3, [r7, #4]
 742 002c 0133     		add	r3, r3, #1
 743 002e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 25


 744              	.L33:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 745              		.loc 1 605 0 is_stmt 0 discriminator 1
 746 0030 7B68     		ldr	r3, [r7, #4]
 747 0032 042B     		cmp	r3, #4
 748 0034 EAD9     		bls	.L35
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 749              		.loc 1 614 0 is_stmt 1
 750 0036 BD46     		mov	sp, r7
 751 0038 02B0     		add	sp, sp, #8
 752              		@ sp needed
 753 003a 80BD     		pop	{r7, pc}
 754              	.L37:
 755              		.align	2
 756              	.L36:
 757 003c 00000000 		.word	CapSense_sensorEnableMask
 758              		.cfi_endproc
 759              	.LFE42:
 760              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 761              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 762              		.align	2
 763              		.global	CapSense_UpdateWidgetBaseline
 764              		.code	16
 765              		.thumb_func
 766              		.type	CapSense_UpdateWidgetBaseline, %function
 767              	CapSense_UpdateWidgetBaseline:
 768              	.LFB43:
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 26


 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 769              		.loc 1 646 0
 770              		.cfi_startproc
 771 0000 80B5     		push	{r7, lr}
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 0002 88B0     		sub	sp, sp, #32
 776              		.cfi_def_cfa_offset 40
 777 0004 00AF     		add	r7, sp, #0
 778              		.cfi_def_cfa_register 7
 779 0006 7860     		str	r0, [r7, #4]
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 780              		.loc 1 654 0
 781 0008 0523     		mov	r3, #5
 782 000a BB61     		str	r3, [r7, #24]
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 783              		.loc 1 657 0
 784 000c 0023     		mov	r3, #0
 785 000e 7B61     		str	r3, [r7, #20]
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 786              		.loc 1 660 0
 787 0010 0023     		mov	r3, #0
 788 0012 1A1C     		mov	r2, r3
 789 0014 BB69     		ldr	r3, [r7, #24]
 790 0016 D318     		add	r3, r2, r3
 791 0018 3B61     		str	r3, [r7, #16]
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 792              		.loc 1 662 0
 793 001a 7B69     		ldr	r3, [r7, #20]
 794 001c FB61     		str	r3, [r7, #28]
 795 001e 11E0     		b	.L39
 796              	.L41:
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 797              		.loc 1 664 0
 798 0020 0C4A     		ldr	r2, .L42
 799 0022 FB69     		ldr	r3, [r7, #28]
 800 0024 101C     		mov	r0, r2
 801 0026 191C     		mov	r1, r3
 802 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 803 002c 031C     		mov	r3, r0
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 27


 804 002e FB60     		str	r3, [r7, #12]
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 805              		.loc 1 666 0
 806 0030 FB68     		ldr	r3, [r7, #12]
 807 0032 002B     		cmp	r3, #0
 808 0034 03D0     		beq	.L40
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 809              		.loc 1 668 0
 810 0036 FB69     		ldr	r3, [r7, #28]
 811 0038 181C     		mov	r0, r3
 812 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 813              	.L40:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 814              		.loc 1 662 0 discriminator 2
 815 003e FB69     		ldr	r3, [r7, #28]
 816 0040 0133     		add	r3, r3, #1
 817 0042 FB61     		str	r3, [r7, #28]
 818              	.L39:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 819              		.loc 1 662 0 is_stmt 0 discriminator 1
 820 0044 FA69     		ldr	r2, [r7, #28]
 821 0046 3B69     		ldr	r3, [r7, #16]
 822 0048 9A42     		cmp	r2, r3
 823 004a E9D3     		bcc	.L41
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 824              		.loc 1 671 0 is_stmt 1
 825 004c BD46     		mov	sp, r7
 826 004e 08B0     		add	sp, sp, #32
 827              		@ sp needed
 828 0050 80BD     		pop	{r7, pc}
 829              	.L43:
 830 0052 C046     		.align	2
 831              	.L42:
 832 0054 00000000 		.word	CapSense_sensorEnableMask
 833              		.cfi_endproc
 834              	.LFE43:
 835              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 836              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 837              		.align	2
 838              		.global	CapSense_GetBaselineData
 839              		.code	16
 840              		.thumb_func
 841              		.type	CapSense_GetBaselineData, %function
 842              	CapSense_GetBaselineData:
 843              	.LFB44:
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 28


 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 844              		.loc 1 695 0
 845              		.cfi_startproc
 846 0000 80B5     		push	{r7, lr}
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 82B0     		sub	sp, sp, #8
 851              		.cfi_def_cfa_offset 16
 852 0004 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 855              		.loc 1 696 0
 856 0008 034B     		ldr	r3, .L46
 857 000a 7A68     		ldr	r2, [r7, #4]
 858 000c 5200     		lsl	r2, r2, #1
 859 000e D35A     		ldrh	r3, [r2, r3]
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 860              		.loc 1 697 0
 861 0010 181C     		mov	r0, r3
 862 0012 BD46     		mov	sp, r7
 863 0014 02B0     		add	sp, sp, #8
 864              		@ sp needed
 865 0016 80BD     		pop	{r7, pc}
 866              	.L47:
 867              		.align	2
 868              	.L46:
 869 0018 00000000 		.word	CapSense_sensorBaseline
 870              		.cfi_endproc
 871              	.LFE44:
 872              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 873              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 874              		.align	2
 875              		.global	CapSense_SetBaselineData
 876              		.code	16
 877              		.thumb_func
 878              		.type	CapSense_SetBaselineData, %function
 879              	CapSense_SetBaselineData:
 880              	.LFB45:
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 29


 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 881              		.loc 1 722 0
 882              		.cfi_startproc
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 82B0     		sub	sp, sp, #8
 888              		.cfi_def_cfa_offset 16
 889 0004 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 891 0006 7860     		str	r0, [r7, #4]
 892 0008 0A1C     		mov	r2, r1
 893 000a BB1C     		add	r3, r7, #2
 894 000c 1A80     		strh	r2, [r3]
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 895              		.loc 1 723 0
 896 000e 044B     		ldr	r3, .L49
 897 0010 7A68     		ldr	r2, [r7, #4]
 898 0012 5200     		lsl	r2, r2, #1
 899 0014 B91C     		add	r1, r7, #2
 900 0016 0988     		ldrh	r1, [r1]
 901 0018 D152     		strh	r1, [r2, r3]
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 902              		.loc 1 724 0
 903 001a BD46     		mov	sp, r7
 904 001c 02B0     		add	sp, sp, #8
 905              		@ sp needed
 906 001e 80BD     		pop	{r7, pc}
 907              	.L50:
 908              		.align	2
 909              	.L49:
 910 0020 00000000 		.word	CapSense_sensorBaseline
 911              		.cfi_endproc
 912              	.LFE45:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 30


 913              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 914              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 915              		.align	2
 916              		.global	CapSense_GetDiffCountData
 917              		.code	16
 918              		.thumb_func
 919              		.type	CapSense_GetDiffCountData, %function
 920              	CapSense_GetDiffCountData:
 921              	.LFB46:
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 922              		.loc 1 749 0
 923              		.cfi_startproc
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 82B0     		sub	sp, sp, #8
 929              		.cfi_def_cfa_offset 16
 930 0004 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
 932 0006 7860     		str	r0, [r7, #4]
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 933              		.loc 1 750 0
 934 0008 034A     		ldr	r2, .L53
 935 000a 7B68     		ldr	r3, [r7, #4]
 936 000c D318     		add	r3, r2, r3
 937 000e 1B78     		ldrb	r3, [r3]
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 938              		.loc 1 751 0
 939 0010 181C     		mov	r0, r3
 940 0012 BD46     		mov	sp, r7
 941 0014 02B0     		add	sp, sp, #8
 942              		@ sp needed
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 31


 943 0016 80BD     		pop	{r7, pc}
 944              	.L54:
 945              		.align	2
 946              	.L53:
 947 0018 00000000 		.word	CapSense_sensorSignal
 948              		.cfi_endproc
 949              	.LFE46:
 950              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 951              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 952              		.align	2
 953              		.global	CapSense_SetDiffCountData
 954              		.code	16
 955              		.thumb_func
 956              		.type	CapSense_SetDiffCountData, %function
 957              	CapSense_SetDiffCountData:
 958              	.LFB47:
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 959              		.loc 1 776 0
 960              		.cfi_startproc
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 82B0     		sub	sp, sp, #8
 966              		.cfi_def_cfa_offset 16
 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 969 0006 7860     		str	r0, [r7, #4]
 970 0008 0A1C     		mov	r2, r1
 971 000a FB1C     		add	r3, r7, #3
 972 000c 1A70     		strb	r2, [r3]
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 973              		.loc 1 777 0
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 32


 974 000e 044A     		ldr	r2, .L56
 975 0010 7B68     		ldr	r3, [r7, #4]
 976 0012 D318     		add	r3, r2, r3
 977 0014 FA1C     		add	r2, r7, #3
 978 0016 1278     		ldrb	r2, [r2]
 979 0018 1A70     		strb	r2, [r3]
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 980              		.loc 1 778 0
 981 001a BD46     		mov	sp, r7
 982 001c 02B0     		add	sp, sp, #8
 983              		@ sp needed
 984 001e 80BD     		pop	{r7, pc}
 985              	.L57:
 986              		.align	2
 987              	.L56:
 988 0020 00000000 		.word	CapSense_sensorSignal
 989              		.cfi_endproc
 990              	.LFE47:
 991              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 992              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 993              		.align	2
 994              		.global	CapSense_GetFingerThreshold
 995              		.code	16
 996              		.thumb_func
 997              		.type	CapSense_GetFingerThreshold, %function
 998              	CapSense_GetFingerThreshold:
 999              	.LFB48:
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1000              		.loc 1 803 0
 1001              		.cfi_startproc
 1002 0000 80B5     		push	{r7, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 7, -8
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 33


 1005              		.cfi_offset 14, -4
 1006 0002 82B0     		sub	sp, sp, #8
 1007              		.cfi_def_cfa_offset 16
 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1011              		.loc 1 804 0
 1012 0008 034A     		ldr	r2, .L60
 1013 000a 7B68     		ldr	r3, [r7, #4]
 1014 000c D318     		add	r3, r2, r3
 1015 000e 1B78     		ldrb	r3, [r3]
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1016              		.loc 1 805 0
 1017 0010 181C     		mov	r0, r3
 1018 0012 BD46     		mov	sp, r7
 1019 0014 02B0     		add	sp, sp, #8
 1020              		@ sp needed
 1021 0016 80BD     		pop	{r7, pc}
 1022              	.L61:
 1023              		.align	2
 1024              	.L60:
 1025 0018 00000000 		.word	CapSense_fingerThreshold
 1026              		.cfi_endproc
 1027              	.LFE48:
 1028              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1029              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1030              		.align	2
 1031              		.global	CapSense_GetNoiseThreshold
 1032              		.code	16
 1033              		.thumb_func
 1034              		.type	CapSense_GetNoiseThreshold, %function
 1035              	CapSense_GetNoiseThreshold:
 1036              	.LFB49:
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 34


 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1037              		.loc 1 830 0
 1038              		.cfi_startproc
 1039 0000 80B5     		push	{r7, lr}
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 7, -8
 1042              		.cfi_offset 14, -4
 1043 0002 82B0     		sub	sp, sp, #8
 1044              		.cfi_def_cfa_offset 16
 1045 0004 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 1047 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1048              		.loc 1 831 0
 1049 0008 034A     		ldr	r2, .L64
 1050 000a 7B68     		ldr	r3, [r7, #4]
 1051 000c D318     		add	r3, r2, r3
 1052 000e 1B78     		ldrb	r3, [r3]
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1053              		.loc 1 832 0
 1054 0010 181C     		mov	r0, r3
 1055 0012 BD46     		mov	sp, r7
 1056 0014 02B0     		add	sp, sp, #8
 1057              		@ sp needed
 1058 0016 80BD     		pop	{r7, pc}
 1059              	.L65:
 1060              		.align	2
 1061              	.L64:
 1062 0018 00000000 		.word	CapSense_noiseThreshold
 1063              		.cfi_endproc
 1064              	.LFE49:
 1065              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1066              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1067              		.align	2
 1068              		.global	CapSense_GetFingerHysteresis
 1069              		.code	16
 1070              		.thumb_func
 1071              		.type	CapSense_GetFingerHysteresis, %function
 1072              	CapSense_GetFingerHysteresis:
 1073              	.LFB50:
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 35


 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1074              		.loc 1 858 0
 1075              		.cfi_startproc
 1076 0000 80B5     		push	{r7, lr}
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 7, -8
 1079              		.cfi_offset 14, -4
 1080 0002 82B0     		sub	sp, sp, #8
 1081              		.cfi_def_cfa_offset 16
 1082 0004 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 0006 7860     		str	r0, [r7, #4]
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1085              		.loc 1 859 0
 1086 0008 034A     		ldr	r2, .L68
 1087 000a 7B68     		ldr	r3, [r7, #4]
 1088 000c D318     		add	r3, r2, r3
 1089 000e 1B78     		ldrb	r3, [r3]
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1090              		.loc 1 860 0
 1091 0010 181C     		mov	r0, r3
 1092 0012 BD46     		mov	sp, r7
 1093 0014 02B0     		add	sp, sp, #8
 1094              		@ sp needed
 1095 0016 80BD     		pop	{r7, pc}
 1096              	.L69:
 1097              		.align	2
 1098              	.L68:
 1099 0018 00000000 		.word	CapSense_hysteresis
 1100              		.cfi_endproc
 1101              	.LFE50:
 1102              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1103              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1104              		.align	2
 1105              		.global	CapSense_GetNegativeNoiseThreshold
 1106              		.code	16
 1107              		.thumb_func
 1108              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1109              	CapSense_GetNegativeNoiseThreshold:
 1110              	.LFB51:
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 36


 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1111              		.loc 1 886 0
 1112              		.cfi_startproc
 1113 0000 80B5     		push	{r7, lr}
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 7, -8
 1116              		.cfi_offset 14, -4
 1117 0002 82B0     		sub	sp, sp, #8
 1118              		.cfi_def_cfa_offset 16
 1119 0004 00AF     		add	r7, sp, #0
 1120              		.cfi_def_cfa_register 7
 1121 0006 7860     		str	r0, [r7, #4]
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1122              		.loc 1 888 0
 1123 0008 034A     		ldr	r2, .L72
 1124 000a 7B68     		ldr	r3, [r7, #4]
 1125 000c D318     		add	r3, r2, r3
 1126 000e 1B78     		ldrb	r3, [r3]
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1127              		.loc 1 892 0
 1128 0010 181C     		mov	r0, r3
 1129 0012 BD46     		mov	sp, r7
 1130 0014 02B0     		add	sp, sp, #8
 1131              		@ sp needed
 1132 0016 80BD     		pop	{r7, pc}
 1133              	.L73:
 1134              		.align	2
 1135              	.L72:
 1136 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1137              		.cfi_endproc
 1138              	.LFE51:
 1139              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1140              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1141              		.align	2
 1142              		.global	CapSense_SetFingerThreshold
 1143              		.code	16
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 37


 1144              		.thumb_func
 1145              		.type	CapSense_SetFingerThreshold, %function
 1146              	CapSense_SetFingerThreshold:
 1147              	.LFB52:
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1148              		.loc 1 919 0
 1149              		.cfi_startproc
 1150 0000 80B5     		push	{r7, lr}
 1151              		.cfi_def_cfa_offset 8
 1152              		.cfi_offset 7, -8
 1153              		.cfi_offset 14, -4
 1154 0002 82B0     		sub	sp, sp, #8
 1155              		.cfi_def_cfa_offset 16
 1156 0004 00AF     		add	r7, sp, #0
 1157              		.cfi_def_cfa_register 7
 1158 0006 7860     		str	r0, [r7, #4]
 1159 0008 0A1C     		mov	r2, r1
 1160 000a FB1C     		add	r3, r7, #3
 1161 000c 1A70     		strb	r2, [r3]
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1162              		.loc 1 920 0
 1163 000e 044A     		ldr	r2, .L75
 1164 0010 7B68     		ldr	r3, [r7, #4]
 1165 0012 D318     		add	r3, r2, r3
 1166 0014 FA1C     		add	r2, r7, #3
 1167 0016 1278     		ldrb	r2, [r2]
 1168 0018 1A70     		strb	r2, [r3]
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1169              		.loc 1 921 0
 1170 001a BD46     		mov	sp, r7
 1171 001c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 38


 1172              		@ sp needed
 1173 001e 80BD     		pop	{r7, pc}
 1174              	.L76:
 1175              		.align	2
 1176              	.L75:
 1177 0020 00000000 		.word	CapSense_fingerThreshold
 1178              		.cfi_endproc
 1179              	.LFE52:
 1180              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1181              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1182              		.align	2
 1183              		.global	CapSense_SetNoiseThreshold
 1184              		.code	16
 1185              		.thumb_func
 1186              		.type	CapSense_SetNoiseThreshold, %function
 1187              	CapSense_SetNoiseThreshold:
 1188              	.LFB53:
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1189              		.loc 1 947 0
 1190              		.cfi_startproc
 1191 0000 80B5     		push	{r7, lr}
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 82B0     		sub	sp, sp, #8
 1196              		.cfi_def_cfa_offset 16
 1197 0004 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
 1199 0006 7860     		str	r0, [r7, #4]
 1200 0008 0A1C     		mov	r2, r1
 1201 000a FB1C     		add	r3, r7, #3
 1202 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 39


 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1203              		.loc 1 948 0
 1204 000e 044A     		ldr	r2, .L78
 1205 0010 7B68     		ldr	r3, [r7, #4]
 1206 0012 D318     		add	r3, r2, r3
 1207 0014 FA1C     		add	r2, r7, #3
 1208 0016 1278     		ldrb	r2, [r2]
 1209 0018 1A70     		strb	r2, [r3]
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1210              		.loc 1 949 0
 1211 001a BD46     		mov	sp, r7
 1212 001c 02B0     		add	sp, sp, #8
 1213              		@ sp needed
 1214 001e 80BD     		pop	{r7, pc}
 1215              	.L79:
 1216              		.align	2
 1217              	.L78:
 1218 0020 00000000 		.word	CapSense_noiseThreshold
 1219              		.cfi_endproc
 1220              	.LFE53:
 1221              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1222              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1223              		.align	2
 1224              		.global	CapSense_SetFingerHysteresis
 1225              		.code	16
 1226              		.thumb_func
 1227              		.type	CapSense_SetFingerHysteresis, %function
 1228              	CapSense_SetFingerHysteresis:
 1229              	.LFB54:
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1230              		.loc 1 975 0
 1231              		.cfi_startproc
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 40


 1232 0000 80B5     		push	{r7, lr}
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 82B0     		sub	sp, sp, #8
 1237              		.cfi_def_cfa_offset 16
 1238 0004 00AF     		add	r7, sp, #0
 1239              		.cfi_def_cfa_register 7
 1240 0006 7860     		str	r0, [r7, #4]
 1241 0008 0A1C     		mov	r2, r1
 1242 000a FB1C     		add	r3, r7, #3
 1243 000c 1A70     		strb	r2, [r3]
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1244              		.loc 1 976 0
 1245 000e 044A     		ldr	r2, .L81
 1246 0010 7B68     		ldr	r3, [r7, #4]
 1247 0012 D318     		add	r3, r2, r3
 1248 0014 FA1C     		add	r2, r7, #3
 1249 0016 1278     		ldrb	r2, [r2]
 1250 0018 1A70     		strb	r2, [r3]
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1251              		.loc 1 977 0
 1252 001a BD46     		mov	sp, r7
 1253 001c 02B0     		add	sp, sp, #8
 1254              		@ sp needed
 1255 001e 80BD     		pop	{r7, pc}
 1256              	.L82:
 1257              		.align	2
 1258              	.L81:
 1259 0020 00000000 		.word	CapSense_hysteresis
 1260              		.cfi_endproc
 1261              	.LFE54:
 1262              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1263              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1264              		.align	2
 1265              		.global	CapSense_SetNegativeNoiseThreshold
 1266              		.code	16
 1267              		.thumb_func
 1268              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1269              	CapSense_SetNegativeNoiseThreshold:
 1270              	.LFB55:
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 41


 994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1271              		.loc 1 1004 0
 1272              		.cfi_startproc
 1273 0000 80B5     		push	{r7, lr}
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 7, -8
 1276              		.cfi_offset 14, -4
 1277 0002 82B0     		sub	sp, sp, #8
 1278              		.cfi_def_cfa_offset 16
 1279 0004 00AF     		add	r7, sp, #0
 1280              		.cfi_def_cfa_register 7
 1281 0006 7860     		str	r0, [r7, #4]
 1282 0008 0A1C     		mov	r2, r1
 1283 000a FB1C     		add	r3, r7, #3
 1284 000c 1A70     		strb	r2, [r3]
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1285              		.loc 1 1005 0
 1286 000e 044A     		ldr	r2, .L84
 1287 0010 7B68     		ldr	r3, [r7, #4]
 1288 0012 D318     		add	r3, r2, r3
 1289 0014 FA1C     		add	r2, r7, #3
 1290 0016 1278     		ldrb	r2, [r2]
 1291 0018 1A70     		strb	r2, [r3]
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1292              		.loc 1 1006 0
 1293 001a BD46     		mov	sp, r7
 1294 001c 02B0     		add	sp, sp, #8
 1295              		@ sp needed
 1296 001e 80BD     		pop	{r7, pc}
 1297              	.L85:
 1298              		.align	2
 1299              	.L84:
 1300 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1301              		.cfi_endproc
 1302              	.LFE55:
 1303              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1304              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1305              		.align	2
 1306              		.global	CapSense_SetDebounce
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	CapSense_SetDebounce, %function
 1310              	CapSense_SetDebounce:
 1311              	.LFB56:
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 42


1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1312              		.loc 1 1032 0
 1313              		.cfi_startproc
 1314 0000 80B5     		push	{r7, lr}
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 7, -8
 1317              		.cfi_offset 14, -4
 1318 0002 82B0     		sub	sp, sp, #8
 1319              		.cfi_def_cfa_offset 16
 1320 0004 00AF     		add	r7, sp, #0
 1321              		.cfi_def_cfa_register 7
 1322 0006 7860     		str	r0, [r7, #4]
 1323 0008 0A1C     		mov	r2, r1
 1324 000a FB1C     		add	r3, r7, #3
 1325 000c 1A70     		strb	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1326              		.loc 1 1033 0
 1327 000e 044A     		ldr	r2, .L87
 1328 0010 7B68     		ldr	r3, [r7, #4]
 1329 0012 D318     		add	r3, r2, r3
 1330 0014 FA1C     		add	r2, r7, #3
 1331 0016 1278     		ldrb	r2, [r2]
 1332 0018 1A70     		strb	r2, [r3]
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1333              		.loc 1 1034 0
 1334 001a BD46     		mov	sp, r7
 1335 001c 02B0     		add	sp, sp, #8
 1336              		@ sp needed
 1337 001e 80BD     		pop	{r7, pc}
 1338              	.L88:
 1339              		.align	2
 1340              	.L87:
 1341 0020 00000000 		.word	CapSense_debounce
 1342              		.cfi_endproc
 1343              	.LFE56:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 43


 1344              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1345              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1346              		.align	2
 1347              		.global	CapSense_SetLowBaselineReset
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	CapSense_SetLowBaselineReset, %function
 1351              	CapSense_SetLowBaselineReset:
 1352              	.LFB57:
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1353              		.loc 1 1060 0
 1354              		.cfi_startproc
 1355 0000 80B5     		push	{r7, lr}
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 82B0     		sub	sp, sp, #8
 1360              		.cfi_def_cfa_offset 16
 1361 0004 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
 1363 0006 7860     		str	r0, [r7, #4]
 1364 0008 0A1C     		mov	r2, r1
 1365 000a FB1C     		add	r3, r7, #3
 1366 000c 1A70     		strb	r2, [r3]
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1367              		.loc 1 1061 0
 1368 000e 044A     		ldr	r2, .L90
 1369 0010 7B68     		ldr	r3, [r7, #4]
 1370 0012 D318     		add	r3, r2, r3
 1371 0014 FA1C     		add	r2, r7, #3
 1372 0016 1278     		ldrb	r2, [r2]
 1373 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 44


1062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1374              		.loc 1 1062 0
 1375 001a BD46     		mov	sp, r7
 1376 001c 02B0     		add	sp, sp, #8
 1377              		@ sp needed
 1378 001e 80BD     		pop	{r7, pc}
 1379              	.L91:
 1380              		.align	2
 1381              	.L90:
 1382 0020 00000000 		.word	CapSense_lowBaselineReset
 1383              		.cfi_endproc
 1384              	.LFE57:
 1385              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1386              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1387              		.align	2
 1388              		.global	CapSense_CheckIsSensorActive
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	CapSense_CheckIsSensorActive, %function
 1392              	CapSense_CheckIsSensorActive:
 1393              	.LFB58:
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 45


1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1394              		.loc 1 1106 0
 1395              		.cfi_startproc
 1396 0000 80B5     		push	{r7, lr}
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 7, -8
 1399              		.cfi_offset 14, -4
 1400 0002 84B0     		sub	sp, sp, #16
 1401              		.cfi_def_cfa_offset 24
 1402 0004 00AF     		add	r7, sp, #0
 1403              		.cfi_def_cfa_register 7
 1404 0006 7860     		str	r0, [r7, #4]
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1405              		.loc 1 1120 0
 1406 0008 0F23     		mov	r3, #15
 1407 000a FB18     		add	r3, r7, r3
 1408 000c 4449     		ldr	r1, .L101
 1409 000e 7A68     		ldr	r2, [r7, #4]
 1410 0010 8A18     		add	r2, r1, r2
 1411 0012 1278     		ldrb	r2, [r2]
 1412 0014 1A70     		strb	r2, [r3]
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1413              		.loc 1 1122 0
 1414 0016 0F23     		mov	r3, #15
 1415 0018 FB18     		add	r3, r7, r3
 1416 001a 1A78     		ldrb	r2, [r3]
 1417 001c 0E23     		mov	r3, #14
 1418 001e FB18     		add	r3, r7, r3
 1419 0020 4049     		ldr	r1, .L101+4
 1420 0022 8A5C     		ldrb	r2, [r1, r2]
 1421 0024 1A70     		strb	r2, [r3]
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1422              		.loc 1 1123 0
 1423 0026 0F23     		mov	r3, #15
 1424 0028 FB18     		add	r3, r7, r3
 1425 002a 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 46


 1426 002c 0D23     		mov	r3, #13
 1427 002e FB18     		add	r3, r7, r3
 1428 0030 3D49     		ldr	r1, .L101+8
 1429 0032 8A5C     		ldrb	r2, [r1, r2]
 1430 0034 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1431              		.loc 1 1124 0
 1432 0036 0F23     		mov	r3, #15
 1433 0038 FB18     		add	r3, r7, r3
 1434 003a 1A78     		ldrb	r2, [r3]
 1435 003c 0C23     		mov	r3, #12
 1436 003e FB18     		add	r3, r7, r3
 1437 0040 3A49     		ldr	r1, .L101+12
 1438 0042 8A5C     		ldrb	r2, [r1, r2]
 1439 0044 1A70     		strb	r2, [r3]
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1440              		.loc 1 1126 0
 1441 0046 0B23     		mov	r3, #11
 1442 0048 FB18     		add	r3, r7, r3
 1443 004a 0022     		mov	r2, #0
 1444 004c 1A70     		strb	r2, [r3]
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1445              		.loc 1 1127 0
 1446 004e 0B23     		mov	r3, #11
 1447 0050 FB18     		add	r3, r7, r3
 1448 0052 1B78     		ldrb	r3, [r3]
 1449 0054 364A     		ldr	r2, .L101+16
 1450 0056 0121     		mov	r1, #1
 1451 0058 D154     		strb	r1, [r2, r3]
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1452              		.loc 1 1131 0
 1453 005a 364A     		ldr	r2, .L101+20
 1454 005c 7B68     		ldr	r3, [r7, #4]
 1455 005e 101C     		mov	r0, r2
 1456 0060 191C     		mov	r1, r3
 1457 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1458 0066 031E     		sub	r3, r0, #0
 1459 0068 1DD0     		beq	.L93
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1460              		.loc 1 1134 0
 1461 006a 334A     		ldr	r2, .L101+24
 1462 006c 7B68     		ldr	r3, [r7, #4]
 1463 006e D318     		add	r3, r2, r3
 1464 0070 1B78     		ldrb	r3, [r3]
 1465 0072 191C     		mov	r1, r3
 1466 0074 0E23     		mov	r3, #14
 1467 0076 FB18     		add	r3, r7, r3
 1468 0078 1A78     		ldrb	r2, [r3]
 1469 007a 0D23     		mov	r3, #13
 1470 007c FB18     		add	r3, r7, r3
 1471 007e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 47


 1472 0080 D31A     		sub	r3, r2, r3
 1473 0082 9942     		cmp	r1, r3
 1474 0084 3DDA     		bge	.L95
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1475              		.loc 1 1136 0
 1476 0086 2B4A     		ldr	r2, .L101+20
 1477 0088 7B68     		ldr	r3, [r7, #4]
 1478 008a 101C     		mov	r0, r2
 1479 008c 191C     		mov	r1, r3
 1480 008e 0022     		mov	r2, #0
 1481 0090 FFF7FEFF 		bl	CapSense_SetBitValue
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1482              		.loc 1 1138 0
 1483 0094 0B23     		mov	r3, #11
 1484 0096 FB18     		add	r3, r7, r3
 1485 0098 1B78     		ldrb	r3, [r3]
 1486 009a 254A     		ldr	r2, .L101+16
 1487 009c 0C21     		mov	r1, #12
 1488 009e 7918     		add	r1, r7, r1
 1489 00a0 0978     		ldrb	r1, [r1]
 1490 00a2 D154     		strb	r1, [r2, r3]
 1491 00a4 2DE0     		b	.L95
 1492              	.L93:
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1493              		.loc 1 1144 0
 1494 00a6 244A     		ldr	r2, .L101+24
 1495 00a8 7B68     		ldr	r3, [r7, #4]
 1496 00aa D318     		add	r3, r2, r3
 1497 00ac 1B78     		ldrb	r3, [r3]
 1498 00ae 191C     		mov	r1, r3
 1499 00b0 0E23     		mov	r3, #14
 1500 00b2 FB18     		add	r3, r7, r3
 1501 00b4 1A78     		ldrb	r2, [r3]
 1502 00b6 0D23     		mov	r3, #13
 1503 00b8 FB18     		add	r3, r7, r3
 1504 00ba 1B78     		ldrb	r3, [r3]
 1505 00bc D318     		add	r3, r2, r3
 1506 00be 9942     		cmp	r1, r3
 1507 00c0 17DB     		blt	.L96
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1508              		.loc 1 1146 0
 1509 00c2 0B23     		mov	r3, #11
 1510 00c4 FB18     		add	r3, r7, r3
 1511 00c6 1B78     		ldrb	r3, [r3]
 1512 00c8 194A     		ldr	r2, .L101+16
 1513 00ca D25C     		ldrb	r2, [r2, r3]
 1514 00cc 013A     		sub	r2, r2, #1
 1515 00ce D1B2     		uxtb	r1, r2
 1516 00d0 174A     		ldr	r2, .L101+16
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 48


 1517 00d2 D154     		strb	r1, [r2, r3]
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1518              		.loc 1 1148 0
 1519 00d4 0B23     		mov	r3, #11
 1520 00d6 FB18     		add	r3, r7, r3
 1521 00d8 1B78     		ldrb	r3, [r3]
 1522 00da 154A     		ldr	r2, .L101+16
 1523 00dc D35C     		ldrb	r3, [r2, r3]
 1524 00de 002B     		cmp	r3, #0
 1525 00e0 0FD1     		bne	.L95
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1526              		.loc 1 1150 0
 1527 00e2 144A     		ldr	r2, .L101+20
 1528 00e4 7B68     		ldr	r3, [r7, #4]
 1529 00e6 101C     		mov	r0, r2
 1530 00e8 191C     		mov	r1, r3
 1531 00ea 0122     		mov	r2, #1
 1532 00ec FFF7FEFF 		bl	CapSense_SetBitValue
 1533 00f0 07E0     		b	.L95
 1534              	.L96:
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1535              		.loc 1 1156 0
 1536 00f2 0B23     		mov	r3, #11
 1537 00f4 FB18     		add	r3, r7, r3
 1538 00f6 1B78     		ldrb	r3, [r3]
 1539 00f8 0D4A     		ldr	r2, .L101+16
 1540 00fa 0C21     		mov	r1, #12
 1541 00fc 7918     		add	r1, r7, r1
 1542 00fe 0978     		ldrb	r1, [r1]
 1543 0100 D154     		strb	r1, [r2, r3]
 1544              	.L95:
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1545              		.loc 1 1160 0
 1546 0102 0C4A     		ldr	r2, .L101+20
 1547 0104 7B68     		ldr	r3, [r7, #4]
 1548 0106 101C     		mov	r0, r2
 1549 0108 191C     		mov	r1, r3
 1550 010a FFF7FEFF 		bl	CapSense_GetBitValue
 1551 010e 031E     		sub	r3, r0, #0
 1552 0110 01D0     		beq	.L98
 1553              		.loc 1 1160 0 is_stmt 0 discriminator 1
 1554 0112 0123     		mov	r3, #1
 1555 0114 00E0     		b	.L99
 1556              	.L98:
 1557              		.loc 1 1160 0 discriminator 2
 1558 0116 0023     		mov	r3, #0
 1559              	.L99:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 49


1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1560              		.loc 1 1161 0 is_stmt 1 discriminator 4
 1561 0118 181C     		mov	r0, r3
 1562 011a BD46     		mov	sp, r7
 1563 011c 04B0     		add	sp, sp, #16
 1564              		@ sp needed
 1565 011e 80BD     		pop	{r7, pc}
 1566              	.L102:
 1567              		.align	2
 1568              	.L101:
 1569 0120 00000000 		.word	CapSense_widgetNumber
 1570 0124 00000000 		.word	CapSense_fingerThreshold
 1571 0128 00000000 		.word	CapSense_hysteresis
 1572 012c 00000000 		.word	CapSense_debounce
 1573 0130 20000000 		.word	CapSense_debounceCounter.5404
 1574 0134 00000000 		.word	CapSense_sensorOnMask
 1575 0138 00000000 		.word	CapSense_sensorSignal
 1576              		.cfi_endproc
 1577              	.LFE58:
 1578              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1579              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1580              		.align	2
 1581              		.global	CapSense_CheckIsWidgetActive
 1582              		.code	16
 1583              		.thumb_func
 1584              		.type	CapSense_CheckIsWidgetActive, %function
 1585              	CapSense_CheckIsWidgetActive:
 1586              	.LFB59:
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 50


1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1587              		.loc 1 1193 0
 1588              		.cfi_startproc
 1589 0000 80B5     		push	{r7, lr}
 1590              		.cfi_def_cfa_offset 8
 1591              		.cfi_offset 7, -8
 1592              		.cfi_offset 14, -4
 1593 0002 86B0     		sub	sp, sp, #24
 1594              		.cfi_def_cfa_offset 32
 1595 0004 00AF     		add	r7, sp, #0
 1596              		.cfi_def_cfa_register 7
 1597 0006 7860     		str	r0, [r7, #4]
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1598              		.loc 1 1194 0
 1599 0008 0023     		mov	r3, #0
 1600 000a 7B61     		str	r3, [r7, #20]
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1601              		.loc 1 1195 0
 1602 000c 0523     		mov	r3, #5
 1603 000e 1A1C     		mov	r2, r3
 1604 0010 7B69     		ldr	r3, [r7, #20]
 1605 0012 D318     		add	r3, r2, r3
 1606 0014 FB60     		str	r3, [r7, #12]
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1607              		.loc 1 1196 0
 1608 0016 0023     		mov	r3, #0
 1609 0018 3B61     		str	r3, [r7, #16]
 1610              	.L105:
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1611              		.loc 1 1201 0
 1612 001a 7B69     		ldr	r3, [r7, #20]
 1613 001c 181C     		mov	r0, r3
 1614 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1615 0022 031E     		sub	r3, r0, #0
 1616 0024 01D0     		beq	.L104
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1617              		.loc 1 1203 0
 1618 0026 0123     		mov	r3, #1
 1619 0028 3B61     		str	r3, [r7, #16]
 1620              	.L104:
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1621              		.loc 1 1205 0
 1622 002a 7B69     		ldr	r3, [r7, #20]
 1623 002c 0133     		add	r3, r3, #1
 1624 002e 7B61     		str	r3, [r7, #20]
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1625              		.loc 1 1207 0
 1626 0030 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 51


 1627 0032 FB68     		ldr	r3, [r7, #12]
 1628 0034 9A42     		cmp	r2, r3
 1629 0036 F0D3     		bcc	.L105
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1630              		.loc 1 1211 0
 1631 0038 3B69     		ldr	r3, [r7, #16]
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1632              		.loc 1 1212 0
 1633 003a 181C     		mov	r0, r3
 1634 003c BD46     		mov	sp, r7
 1635 003e 06B0     		add	sp, sp, #24
 1636              		@ sp needed
 1637 0040 80BD     		pop	{r7, pc}
 1638              		.cfi_endproc
 1639              	.LFE59:
 1640              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1641 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1642              		.align	2
 1643              		.global	CapSense_CheckIsAnyWidgetActive
 1644              		.code	16
 1645              		.thumb_func
 1646              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1647              	CapSense_CheckIsAnyWidgetActive:
 1648              	.LFB60:
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1649              		.loc 1 1239 0
 1650              		.cfi_startproc
 1651 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 52


 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 82B0     		sub	sp, sp, #8
 1656              		.cfi_def_cfa_offset 16
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1659              		.loc 1 1242 0
 1660 0006 0023     		mov	r3, #0
 1661 0008 3B60     		str	r3, [r7]
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1662              		.loc 1 1244 0
 1663 000a 0023     		mov	r3, #0
 1664 000c 7B60     		str	r3, [r7, #4]
 1665 000e 0AE0     		b	.L108
 1666              	.L110:
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1667              		.loc 1 1246 0
 1668 0010 7B68     		ldr	r3, [r7, #4]
 1669 0012 181C     		mov	r0, r3
 1670 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1671 0018 031E     		sub	r3, r0, #0
 1672 001a 01D0     		beq	.L109
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1673              		.loc 1 1248 0
 1674 001c 0123     		mov	r3, #1
 1675 001e 3B60     		str	r3, [r7]
 1676              	.L109:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1677              		.loc 1 1244 0 discriminator 2
 1678 0020 7B68     		ldr	r3, [r7, #4]
 1679 0022 0133     		add	r3, r3, #1
 1680 0024 7B60     		str	r3, [r7, #4]
 1681              	.L108:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1682              		.loc 1 1244 0 is_stmt 0 discriminator 1
 1683 0026 7B68     		ldr	r3, [r7, #4]
 1684 0028 002B     		cmp	r3, #0
 1685 002a F1D0     		beq	.L110
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1686              		.loc 1 1254 0 is_stmt 1
 1687 002c 3B68     		ldr	r3, [r7]
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1688              		.loc 1 1255 0
 1689 002e 181C     		mov	r0, r3
 1690 0030 BD46     		mov	sp, r7
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 53


 1691 0032 02B0     		add	sp, sp, #8
 1692              		@ sp needed
 1693 0034 80BD     		pop	{r7, pc}
 1694              		.cfi_endproc
 1695              	.LFE60:
 1696              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1697 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1698              		.align	2
 1699              		.global	CapSense_EnableWidget
 1700              		.code	16
 1701              		.thumb_func
 1702              		.type	CapSense_EnableWidget, %function
 1703              	CapSense_EnableWidget:
 1704              	.LFB61:
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1705              		.loc 1 1286 0
 1706              		.cfi_startproc
 1707 0000 80B5     		push	{r7, lr}
 1708              		.cfi_def_cfa_offset 8
 1709              		.cfi_offset 7, -8
 1710              		.cfi_offset 14, -4
 1711 0002 84B0     		sub	sp, sp, #16
 1712              		.cfi_def_cfa_offset 24
 1713 0004 00AF     		add	r7, sp, #0
 1714              		.cfi_def_cfa_register 7
 1715 0006 7860     		str	r0, [r7, #4]
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 54


1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1716              		.loc 1 1288 0
 1717 0008 0F23     		mov	r3, #15
 1718 000a FB18     		add	r3, r7, r3
 1719 000c 0022     		mov	r2, #0
 1720 000e 1A70     		strb	r2, [r3]
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1721              		.loc 1 1289 0
 1722 0010 0521     		mov	r1, #5
 1723 0012 0E23     		mov	r3, #14
 1724 0014 FB18     		add	r3, r7, r3
 1725 0016 0F22     		mov	r2, #15
 1726 0018 BA18     		add	r2, r7, r2
 1727 001a 1278     		ldrb	r2, [r2]
 1728 001c 8A18     		add	r2, r1, r2
 1729 001e 1A70     		strb	r2, [r3]
 1730              	.L113:
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1731              		.loc 1 1294 0 discriminator 1
 1732 0020 0F23     		mov	r3, #15
 1733 0022 FB18     		add	r3, r7, r3
 1734 0024 1B78     		ldrb	r3, [r3]
 1735 0026 0C4A     		ldr	r2, .L114
 1736 0028 101C     		mov	r0, r2
 1737 002a 191C     		mov	r1, r3
 1738 002c 0122     		mov	r2, #1
 1739 002e FFF7FEFF 		bl	CapSense_SetBitValue
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1740              		.loc 1 1295 0 discriminator 1
 1741 0032 0F23     		mov	r3, #15
 1742 0034 FB18     		add	r3, r7, r3
 1743 0036 1A78     		ldrb	r2, [r3]
 1744 0038 0F23     		mov	r3, #15
 1745 003a FB18     		add	r3, r7, r3
 1746 003c 0132     		add	r2, r2, #1
 1747 003e 1A70     		strb	r2, [r3]
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1748              		.loc 1 1297 0 discriminator 1
 1749 0040 0F23     		mov	r3, #15
 1750 0042 FA18     		add	r2, r7, r3
 1751 0044 0E23     		mov	r3, #14
 1752 0046 FB18     		add	r3, r7, r3
 1753 0048 1278     		ldrb	r2, [r2]
 1754 004a 1B78     		ldrb	r3, [r3]
 1755 004c 9A42     		cmp	r2, r3
 1756 004e E7D3     		bcc	.L113
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1757              		.loc 1 1298 0
 1758 0050 BD46     		mov	sp, r7
 1759 0052 04B0     		add	sp, sp, #16
 1760              		@ sp needed
 1761 0054 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 55


 1762              	.L115:
 1763 0056 C046     		.align	2
 1764              	.L114:
 1765 0058 00000000 		.word	CapSense_sensorEnableMask
 1766              		.cfi_endproc
 1767              	.LFE61:
 1768              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1769              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1770              		.align	2
 1771              		.global	CapSense_DisableWidget
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	CapSense_DisableWidget, %function
 1775              	CapSense_DisableWidget:
 1776              	.LFB62:
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1777              		.loc 1 1329 0
 1778              		.cfi_startproc
 1779 0000 80B5     		push	{r7, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783 0002 84B0     		sub	sp, sp, #16
 1784              		.cfi_def_cfa_offset 24
 1785 0004 00AF     		add	r7, sp, #0
 1786              		.cfi_def_cfa_register 7
 1787 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 56


1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1788              		.loc 1 1330 0
 1789 0008 0F23     		mov	r3, #15
 1790 000a FB18     		add	r3, r7, r3
 1791 000c 0022     		mov	r2, #0
 1792 000e 1A70     		strb	r2, [r3]
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1793              		.loc 1 1331 0
 1794 0010 0521     		mov	r1, #5
 1795 0012 0E23     		mov	r3, #14
 1796 0014 FB18     		add	r3, r7, r3
 1797 0016 0F22     		mov	r2, #15
 1798 0018 BA18     		add	r2, r7, r2
 1799 001a 1278     		ldrb	r2, [r2]
 1800 001c 8A18     		add	r2, r1, r2
 1801 001e 1A70     		strb	r2, [r3]
 1802              	.L117:
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1803              		.loc 1 1337 0 discriminator 1
 1804 0020 0F23     		mov	r3, #15
 1805 0022 FB18     		add	r3, r7, r3
 1806 0024 1B78     		ldrb	r3, [r3]
 1807 0026 0C4A     		ldr	r2, .L118
 1808 0028 101C     		mov	r0, r2
 1809 002a 191C     		mov	r1, r3
 1810 002c 0022     		mov	r2, #0
 1811 002e FFF7FEFF 		bl	CapSense_SetBitValue
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1812              		.loc 1 1338 0 discriminator 1
 1813 0032 0F23     		mov	r3, #15
 1814 0034 FB18     		add	r3, r7, r3
 1815 0036 1A78     		ldrb	r2, [r3]
 1816 0038 0F23     		mov	r3, #15
 1817 003a FB18     		add	r3, r7, r3
 1818 003c 0132     		add	r2, r2, #1
 1819 003e 1A70     		strb	r2, [r3]
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1820              		.loc 1 1340 0 discriminator 1
 1821 0040 0F23     		mov	r3, #15
 1822 0042 FA18     		add	r2, r7, r3
 1823 0044 0E23     		mov	r3, #14
 1824 0046 FB18     		add	r3, r7, r3
 1825 0048 1278     		ldrb	r2, [r2]
 1826 004a 1B78     		ldrb	r3, [r3]
 1827 004c 9A42     		cmp	r2, r3
 1828 004e E7D3     		bcc	.L117
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1829              		.loc 1 1341 0
 1830 0050 BD46     		mov	sp, r7
 1831 0052 04B0     		add	sp, sp, #16
 1832              		@ sp needed
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 57


 1833 0054 80BD     		pop	{r7, pc}
 1834              	.L119:
 1835 0056 C046     		.align	2
 1836              	.L118:
 1837 0058 00000000 		.word	CapSense_sensorEnableMask
 1838              		.cfi_endproc
 1839              	.LFE62:
 1840              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1841              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1842              		.align	2
 1843              		.global	CapSense_FindMaximum
 1844              		.code	16
 1845              		.thumb_func
 1846              		.type	CapSense_FindMaximum, %function
 1847              	CapSense_FindMaximum:
 1848              	.LFB63:
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1849              		.loc 1 1380 0
 1850              		.cfi_startproc
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 58


 1851 0000 90B5     		push	{r4, r7, lr}
 1852              		.cfi_def_cfa_offset 12
 1853              		.cfi_offset 4, -12
 1854              		.cfi_offset 7, -8
 1855              		.cfi_offset 14, -4
 1856 0002 85B0     		sub	sp, sp, #20
 1857              		.cfi_def_cfa_offset 32
 1858 0004 00AF     		add	r7, sp, #0
 1859              		.cfi_def_cfa_register 7
 1860 0006 041C     		mov	r4, r0
 1861 0008 081C     		mov	r0, r1
 1862 000a 111C     		mov	r1, r2
 1863 000c FB1D     		add	r3, r7, #7
 1864 000e 221C     		add	r2, r4, #0
 1865 0010 1A70     		strb	r2, [r3]
 1866 0012 BB1D     		add	r3, r7, #6
 1867 0014 021C     		add	r2, r0, #0
 1868 0016 1A70     		strb	r2, [r3]
 1869 0018 7B1D     		add	r3, r7, #5
 1870 001a 0A1C     		add	r2, r1, #0
 1871 001c 1A70     		strb	r2, [r3]
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1872              		.loc 1 1391 0
 1873 001e 0E23     		mov	r3, #14
 1874 0020 FB18     		add	r3, r7, r3
 1875 0022 FF22     		mov	r2, #255
 1876 0024 1A70     		strb	r2, [r3]
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1877              		.loc 1 1393 0
 1878 0026 0D23     		mov	r3, #13
 1879 0028 FB18     		add	r3, r7, r3
 1880 002a 0022     		mov	r2, #0
 1881 002c 1A70     		strb	r2, [r3]
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1882              		.loc 1 1394 0
 1883 002e FB1D     		add	r3, r7, #7
 1884 0030 1A78     		ldrb	r2, [r3]
 1885 0032 204B     		ldr	r3, .L125
 1886 0034 D318     		add	r3, r2, r3
 1887 0036 BB60     		str	r3, [r7, #8]
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 59


1401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 60


1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1888              		.loc 1 1491 0
 1889 0038 0F23     		mov	r3, #15
 1890 003a FB18     		add	r3, r7, r3
 1891 003c 0022     		mov	r2, #0
 1892 003e 1A70     		strb	r2, [r3]
 1893 0040 2AE0     		b	.L121
 1894              	.L123:
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1895              		.loc 1 1494 0
 1896 0042 0F23     		mov	r3, #15
 1897 0044 FB18     		add	r3, r7, r3
 1898 0046 1B78     		ldrb	r3, [r3]
 1899 0048 BA68     		ldr	r2, [r7, #8]
 1900 004a D318     		add	r3, r2, r3
 1901 004c 1B78     		ldrb	r3, [r3]
 1902 004e 7A1D     		add	r2, r7, #5
 1903 0050 1278     		ldrb	r2, [r2]
 1904 0052 9A42     		cmp	r2, r3
 1905 0054 19D2     		bcs	.L122
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 61


 1906              		.loc 1 1496 0
 1907 0056 0F23     		mov	r3, #15
 1908 0058 FB18     		add	r3, r7, r3
 1909 005a 1B78     		ldrb	r3, [r3]
 1910 005c BA68     		ldr	r2, [r7, #8]
 1911 005e D318     		add	r3, r2, r3
 1912 0060 1B78     		ldrb	r3, [r3]
 1913 0062 0D22     		mov	r2, #13
 1914 0064 BA18     		add	r2, r7, r2
 1915 0066 1278     		ldrb	r2, [r2]
 1916 0068 9A42     		cmp	r2, r3
 1917 006a 0ED2     		bcs	.L122
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 1918              		.loc 1 1498 0
 1919 006c 0E23     		mov	r3, #14
 1920 006e FB18     		add	r3, r7, r3
 1921 0070 0F22     		mov	r2, #15
 1922 0072 BA18     		add	r2, r7, r2
 1923 0074 1278     		ldrb	r2, [r2]
 1924 0076 1A70     		strb	r2, [r3]
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1925              		.loc 1 1499 0
 1926 0078 0F23     		mov	r3, #15
 1927 007a FB18     		add	r3, r7, r3
 1928 007c 1B78     		ldrb	r3, [r3]
 1929 007e BA68     		ldr	r2, [r7, #8]
 1930 0080 D218     		add	r2, r2, r3
 1931 0082 0D23     		mov	r3, #13
 1932 0084 FB18     		add	r3, r7, r3
 1933 0086 1278     		ldrb	r2, [r2]
 1934 0088 1A70     		strb	r2, [r3]
 1935              	.L122:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1936              		.loc 1 1491 0 discriminator 2
 1937 008a 0F23     		mov	r3, #15
 1938 008c FB18     		add	r3, r7, r3
 1939 008e 1A78     		ldrb	r2, [r3]
 1940 0090 0F23     		mov	r3, #15
 1941 0092 FB18     		add	r3, r7, r3
 1942 0094 0132     		add	r2, r2, #1
 1943 0096 1A70     		strb	r2, [r3]
 1944              	.L121:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1945              		.loc 1 1491 0 is_stmt 0 discriminator 1
 1946 0098 0F23     		mov	r3, #15
 1947 009a FA18     		add	r2, r7, r3
 1948 009c BB1D     		add	r3, r7, #6
 1949 009e 1278     		ldrb	r2, [r2]
 1950 00a0 1B78     		ldrb	r3, [r3]
 1951 00a2 9A42     		cmp	r2, r3
 1952 00a4 CDD3     		bcc	.L123
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 62


 1953              		.loc 1 1504 0 is_stmt 1
 1954 00a6 0E23     		mov	r3, #14
 1955 00a8 FB18     		add	r3, r7, r3
 1956 00aa 1B78     		ldrb	r3, [r3]
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1957              		.loc 1 1505 0
 1958 00ac 181C     		mov	r0, r3
 1959 00ae BD46     		mov	sp, r7
 1960 00b0 05B0     		add	sp, sp, #20
 1961              		@ sp needed
 1962 00b2 90BD     		pop	{r4, r7, pc}
 1963              	.L126:
 1964              		.align	2
 1965              	.L125:
 1966 00b4 00000000 		.word	CapSense_sensorSignal
 1967              		.cfi_endproc
 1968              	.LFE63:
 1969              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1970              		.global	__aeabi_idiv
 1971              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1972              		.align	2
 1973              		.global	CapSense_CalcCentroid
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CapSense_CalcCentroid, %function
 1977              	CapSense_CalcCentroid:
 1978              	.LFB64:
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 63


1536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1979              		.loc 1 1540 0
 1980              		.cfi_startproc
 1981 0000 B0B5     		push	{r4, r5, r7, lr}
 1982              		.cfi_def_cfa_offset 16
 1983              		.cfi_offset 4, -16
 1984              		.cfi_offset 5, -12
 1985              		.cfi_offset 7, -8
 1986              		.cfi_offset 14, -4
 1987 0002 88B0     		sub	sp, sp, #32
 1988              		.cfi_def_cfa_offset 48
 1989 0004 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
 1991 0006 051C     		mov	r5, r0
 1992 0008 0C1C     		mov	r4, r1
 1993 000a 101C     		mov	r0, r2
 1994 000c 191C     		mov	r1, r3
 1995 000e FB1D     		add	r3, r7, #7
 1996 0010 2A1C     		add	r2, r5, #0
 1997 0012 1A70     		strb	r2, [r3]
 1998 0014 BB1D     		add	r3, r7, #6
 1999 0016 221C     		add	r2, r4, #0
 2000 0018 1A70     		strb	r2, [r3]
 2001 001a 7B1D     		add	r3, r7, #5
 2002 001c 021C     		add	r2, r0, #0
 2003 001e 1A70     		strb	r2, [r3]
 2004 0020 BB1C     		add	r3, r7, #2
 2005 0022 0A1C     		add	r2, r1, #0
 2006 0024 1A80     		strh	r2, [r3]
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 2007              		.loc 1 1559 0
 2008 0026 BB1D     		add	r3, r7, #6
 2009 0028 1A78     		ldrb	r2, [r3]
 2010 002a 5B4B     		ldr	r3, .L137
 2011 002c D318     		add	r3, r2, r3
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 64


 2012 002e BB61     		str	r3, [r7, #24]
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2013              		.loc 1 1562 0
 2014 0030 1F23     		mov	r3, #31
 2015 0032 FB18     		add	r3, r7, r3
 2016 0034 0022     		mov	r2, #0
 2017 0036 1A70     		strb	r2, [r3]
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 65


1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2018              		.loc 1 1622 0
 2019 0038 FB1D     		add	r3, r7, #7
 2020 003a 1B78     		ldrb	r3, [r3]
 2021 003c 002B     		cmp	r3, #0
 2022 003e 05D0     		beq	.L128
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2023              		.loc 1 1624 0
 2024 0040 1F23     		mov	r3, #31
 2025 0042 FB18     		add	r3, r7, r3
 2026 0044 FA1D     		add	r2, r7, #7
 2027 0046 1278     		ldrb	r2, [r2]
 2028 0048 013A     		sub	r2, r2, #1
 2029 004a 1A70     		strb	r2, [r3]
 2030              	.L128:
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2031              		.loc 1 1626 0
 2032 004c 1723     		mov	r3, #23
 2033 004e FB18     		add	r3, r7, r3
 2034 0050 FA1D     		add	r2, r7, #7
 2035 0052 1278     		ldrb	r2, [r2]
 2036 0054 0132     		add	r2, r2, #1
 2037 0056 1A70     		strb	r2, [r3]
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2038              		.loc 1 1633 0
 2039 0058 FB1D     		add	r3, r7, #7
 2040 005a 1B78     		ldrb	r3, [r3]
 2041 005c BA69     		ldr	r2, [r7, #24]
 2042 005e D318     		add	r3, r2, r3
 2043 0060 1A78     		ldrb	r2, [r3]
 2044 0062 4E4B     		ldr	r3, .L137+4
 2045 0064 5A70     		strb	r2, [r3, #1]
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2046              		.loc 1 1637 0
 2047 0066 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 66


 2048 0068 1B78     		ldrb	r3, [r3]
 2049 006a 002B     		cmp	r3, #0
 2050 006c 0BD1     		bne	.L129
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2051              		.loc 1 1639 0
 2052 006e 4B4B     		ldr	r3, .L137+4
 2053 0070 0022     		mov	r2, #0
 2054 0072 1A70     		strb	r2, [r3]
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2055              		.loc 1 1640 0
 2056 0074 1723     		mov	r3, #23
 2057 0076 FB18     		add	r3, r7, r3
 2058 0078 1B78     		ldrb	r3, [r3]
 2059 007a BA69     		ldr	r2, [r7, #24]
 2060 007c D318     		add	r3, r2, r3
 2061 007e 1A78     		ldrb	r2, [r3]
 2062 0080 464B     		ldr	r3, .L137+4
 2063 0082 9A70     		strb	r2, [r3, #2]
 2064 0084 22E0     		b	.L130
 2065              	.L129:
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2066              		.loc 1 1642 0
 2067 0086 FB1D     		add	r3, r7, #7
 2068 0088 1A78     		ldrb	r2, [r3]
 2069 008a 7B1D     		add	r3, r7, #5
 2070 008c 1B78     		ldrb	r3, [r3]
 2071 008e 013B     		sub	r3, r3, #1
 2072 0090 9A42     		cmp	r2, r3
 2073 0092 0BD1     		bne	.L131
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2074              		.loc 1 1644 0
 2075 0094 1F23     		mov	r3, #31
 2076 0096 FB18     		add	r3, r7, r3
 2077 0098 1B78     		ldrb	r3, [r3]
 2078 009a BA69     		ldr	r2, [r7, #24]
 2079 009c D318     		add	r3, r2, r3
 2080 009e 1A78     		ldrb	r2, [r3]
 2081 00a0 3E4B     		ldr	r3, .L137+4
 2082 00a2 1A70     		strb	r2, [r3]
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2083              		.loc 1 1645 0
 2084 00a4 3D4B     		ldr	r3, .L137+4
 2085 00a6 0022     		mov	r2, #0
 2086 00a8 9A70     		strb	r2, [r3, #2]
 2087 00aa 0FE0     		b	.L130
 2088              	.L131:
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2089              		.loc 1 1649 0
 2090 00ac 1F23     		mov	r3, #31
 2091 00ae FB18     		add	r3, r7, r3
 2092 00b0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 67


 2093 00b2 BA69     		ldr	r2, [r7, #24]
 2094 00b4 D318     		add	r3, r2, r3
 2095 00b6 1A78     		ldrb	r2, [r3]
 2096 00b8 384B     		ldr	r3, .L137+4
 2097 00ba 1A70     		strb	r2, [r3]
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2098              		.loc 1 1650 0
 2099 00bc 1723     		mov	r3, #23
 2100 00be FB18     		add	r3, r7, r3
 2101 00c0 1B78     		ldrb	r3, [r3]
 2102 00c2 BA69     		ldr	r2, [r7, #24]
 2103 00c4 D318     		add	r3, r2, r3
 2104 00c6 1A78     		ldrb	r2, [r3]
 2105 00c8 344B     		ldr	r3, .L137+4
 2106 00ca 9A70     		strb	r2, [r3, #2]
 2107              	.L130:
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2108              		.loc 1 1659 0
 2109 00cc 334B     		ldr	r3, .L137+4
 2110 00ce 1B78     		ldrb	r3, [r3]
 2111 00d0 3022     		mov	r2, #48
 2112 00d2 BA18     		add	r2, r7, r2
 2113 00d4 1278     		ldrb	r2, [r2]
 2114 00d6 9A42     		cmp	r2, r3
 2115 00d8 09D2     		bcs	.L132
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2116              		.loc 1 1661 0
 2117 00da 304B     		ldr	r3, .L137+4
 2118 00dc 1A78     		ldrb	r2, [r3]
 2119 00de 3023     		mov	r3, #48
 2120 00e0 FB18     		add	r3, r7, r3
 2121 00e2 1B78     		ldrb	r3, [r3]
 2122 00e4 D31A     		sub	r3, r2, r3
 2123 00e6 DAB2     		uxtb	r2, r3
 2124 00e8 2C4B     		ldr	r3, .L137+4
 2125 00ea 1A70     		strb	r2, [r3]
 2126 00ec 02E0     		b	.L133
 2127              	.L132:
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2128              		.loc 1 1665 0
 2129 00ee 2B4B     		ldr	r3, .L137+4
 2130 00f0 0022     		mov	r2, #0
 2131 00f2 1A70     		strb	r2, [r3]
 2132              	.L133:
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 68


1667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2133              		.loc 1 1669 0
 2134 00f4 294B     		ldr	r3, .L137+4
 2135 00f6 5A78     		ldrb	r2, [r3, #1]
 2136 00f8 3023     		mov	r3, #48
 2137 00fa FB18     		add	r3, r7, r3
 2138 00fc 1B78     		ldrb	r3, [r3]
 2139 00fe D31A     		sub	r3, r2, r3
 2140 0100 DAB2     		uxtb	r2, r3
 2141 0102 264B     		ldr	r3, .L137+4
 2142 0104 5A70     		strb	r2, [r3, #1]
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2143              		.loc 1 1672 0
 2144 0106 254B     		ldr	r3, .L137+4
 2145 0108 9B78     		ldrb	r3, [r3, #2]
 2146 010a 3022     		mov	r2, #48
 2147 010c BA18     		add	r2, r7, r2
 2148 010e 1278     		ldrb	r2, [r2]
 2149 0110 9A42     		cmp	r2, r3
 2150 0112 09D2     		bcs	.L134
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2151              		.loc 1 1674 0
 2152 0114 214B     		ldr	r3, .L137+4
 2153 0116 9A78     		ldrb	r2, [r3, #2]
 2154 0118 3023     		mov	r3, #48
 2155 011a FB18     		add	r3, r7, r3
 2156 011c 1B78     		ldrb	r3, [r3]
 2157 011e D31A     		sub	r3, r2, r3
 2158 0120 DAB2     		uxtb	r2, r3
 2159 0122 1E4B     		ldr	r3, .L137+4
 2160 0124 9A70     		strb	r2, [r3, #2]
 2161 0126 02E0     		b	.L135
 2162              	.L134:
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2163              		.loc 1 1678 0
 2164 0128 1C4B     		ldr	r3, .L137+4
 2165 012a 0022     		mov	r2, #0
 2166 012c 9A70     		strb	r2, [r3, #2]
 2167              	.L135:
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2168              		.loc 1 1683 0
 2169 012e 1B4B     		ldr	r3, .L137+4
 2170 0130 9B78     		ldrb	r3, [r3, #2]
 2171 0132 1A1C     		mov	r2, r3
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 69


 2172              		.loc 1 1684 0
 2173 0134 194B     		ldr	r3, .L137+4
 2174 0136 1B78     		ldrb	r3, [r3]
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2175              		.loc 1 1683 0
 2176 0138 D31A     		sub	r3, r2, r3
 2177 013a 3B61     		str	r3, [r7, #16]
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 2178              		.loc 1 1687 0
 2179 013c 174B     		ldr	r3, .L137+4
 2180 013e 1B78     		ldrb	r3, [r3]
 2181 0140 1A1C     		mov	r2, r3
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2182              		.loc 1 1688 0
 2183 0142 164B     		ldr	r3, .L137+4
 2184 0144 5B78     		ldrb	r3, [r3, #1]
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2185              		.loc 1 1687 0
 2186 0146 D318     		add	r3, r2, r3
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2187              		.loc 1 1689 0
 2188 0148 144A     		ldr	r2, .L137+4
 2189 014a 9278     		ldrb	r2, [r2, #2]
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2190              		.loc 1 1687 0
 2191 014c 9B18     		add	r3, r3, r2
 2192 014e FB60     		str	r3, [r7, #12]
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2193              		.loc 1 1692 0
 2194 0150 3B69     		ldr	r3, [r7, #16]
 2195 0152 1B02     		lsl	r3, r3, #8
 2196 0154 181C     		mov	r0, r3
 2197 0156 F968     		ldr	r1, [r7, #12]
 2198 0158 FFF7FEFF 		bl	__aeabi_idiv
 2199 015c 031C     		mov	r3, r0
 2200 015e 1A1C     		mov	r2, r3
 2201 0160 FB1D     		add	r3, r7, #7
 2202 0162 1B78     		ldrb	r3, [r3]
 2203 0164 1B02     		lsl	r3, r3, #8
 2204 0166 D318     		add	r3, r2, r3
 2205 0168 FB60     		str	r3, [r7, #12]
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2206              		.loc 1 1702 0
 2207 016a BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 70


 2208 016c 1B88     		ldrh	r3, [r3]
 2209 016e 1AB2     		sxth	r2, r3
 2210 0170 FB68     		ldr	r3, [r7, #12]
 2211 0172 5343     		mul	r3, r2
 2212 0174 FB60     		str	r3, [r7, #12]
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2213              		.loc 1 1705 0
 2214 0176 FB68     		ldr	r3, [r7, #12]
 2215 0178 FE22     		mov	r2, #254
 2216 017a D201     		lsl	r2, r2, #7
 2217 017c 9446     		mov	ip, r2
 2218 017e 6344     		add	r3, r3, ip
 2219 0180 1A0C     		lsr	r2, r3, #16
 2220 0182 0B23     		mov	r3, #11
 2221 0184 FB18     		add	r3, r7, r3
 2222 0186 1A70     		strb	r2, [r3]
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2223              		.loc 1 1707 0
 2224 0188 0B23     		mov	r3, #11
 2225 018a FB18     		add	r3, r7, r3
 2226 018c 1B78     		ldrb	r3, [r3]
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2227              		.loc 1 1708 0
 2228 018e 181C     		mov	r0, r3
 2229 0190 BD46     		mov	sp, r7
 2230 0192 08B0     		add	sp, sp, #32
 2231              		@ sp needed
 2232 0194 B0BD     		pop	{r4, r5, r7, pc}
 2233              	.L138:
 2234 0196 C046     		.align	2
 2235              	.L137:
 2236 0198 00000000 		.word	CapSense_sensorSignal
 2237 019c 24000000 		.word	CapSense_centroid.5456
 2238              		.cfi_endproc
 2239              	.LFE64:
 2240              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2241              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2242              		.align	2
 2243              		.global	CapSense_GetCentroidPos
 2244              		.code	16
 2245              		.thumb_func
 2246              		.type	CapSense_GetCentroidPos, %function
 2247              	CapSense_GetCentroidPos:
 2248              	.LFB65:
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 71


1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2249              		.loc 1 1749 0
 2250              		.cfi_startproc
 2251 0000 90B5     		push	{r4, r7, lr}
 2252              		.cfi_def_cfa_offset 12
 2253              		.cfi_offset 4, -12
 2254              		.cfi_offset 7, -8
 2255              		.cfi_offset 14, -4
 2256 0002 87B0     		sub	sp, sp, #28
 2257              		.cfi_def_cfa_offset 40
 2258 0004 02AF     		add	r7, sp, #8
 2259              		.cfi_def_cfa 7, 32
 2260 0006 7860     		str	r0, [r7, #4]
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2261              		.loc 1 1756 0
 2262 0008 0D23     		mov	r3, #13
 2263 000a FB18     		add	r3, r7, r3
 2264 000c 4F49     		ldr	r1, .L145
 2265 000e 7A68     		ldr	r2, [r7, #4]
 2266 0010 8A18     		add	r2, r1, r2
 2267 0012 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 72


 2268 0014 1A70     		strb	r2, [r3]
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 2269              		.loc 1 1757 0
 2270 0016 0C23     		mov	r3, #12
 2271 0018 FB18     		add	r3, r7, r3
 2272 001a 4D49     		ldr	r1, .L145+4
 2273 001c 7A68     		ldr	r2, [r7, #4]
 2274 001e 8A18     		add	r2, r1, r2
 2275 0020 1278     		ldrb	r2, [r2]
 2276 0022 1A70     		strb	r2, [r3]
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2277              		.loc 1 1769 0
 2278 0024 0B23     		mov	r3, #11
 2279 0026 FB18     		add	r3, r7, r3
 2280 0028 0022     		mov	r2, #0
 2281 002a 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2282              		.loc 1 1770 0
 2283 002c 0A23     		mov	r3, #10
 2284 002e FB18     		add	r3, r7, r3
 2285 0030 0522     		mov	r2, #5
 2286 0032 1A70     		strb	r2, [r3]
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2287              		.loc 1 1788 0
 2288 0034 474A     		ldr	r2, .L145+8
 2289 0036 7B68     		ldr	r3, [r7, #4]
 2290 0038 D318     		add	r3, r2, r3
 2291 003a 1A78     		ldrb	r2, [r3]
 2292 003c 0923     		mov	r3, #9
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 73


 2293 003e FC18     		add	r4, r7, r3
 2294 0040 0B23     		mov	r3, #11
 2295 0042 FB18     		add	r3, r7, r3
 2296 0044 1978     		ldrb	r1, [r3]
 2297 0046 0A23     		mov	r3, #10
 2298 0048 FB18     		add	r3, r7, r3
 2299 004a 1B78     		ldrb	r3, [r3]
 2300 004c 081C     		mov	r0, r1
 2301 004e 191C     		mov	r1, r3
 2302 0050 FFF7FEFF 		bl	CapSense_FindMaximum
 2303 0054 031C     		mov	r3, r0
 2304 0056 2370     		strb	r3, [r4]
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2305              		.loc 1 1791 0
 2306 0058 0923     		mov	r3, #9
 2307 005a FB18     		add	r3, r7, r3
 2308 005c 1B78     		ldrb	r3, [r3]
 2309 005e FF2B     		cmp	r3, #255
 2310 0060 5CD0     		beq	.L140
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2311              		.loc 1 1794 0
 2312 0062 C823     		mov	r3, #200
 2313 0064 5C01     		lsl	r4, r3, #5
 2314 0066 3C4A     		ldr	r2, .L145+12
 2315 0068 7B68     		ldr	r3, [r7, #4]
 2316 006a D318     		add	r3, r2, r3
 2317 006c 1B78     		ldrb	r3, [r3]
 2318 006e 0922     		mov	r2, #9
 2319 0070 BA18     		add	r2, r7, r2
 2320 0072 1078     		ldrb	r0, [r2]
 2321 0074 0B22     		mov	r2, #11
 2322 0076 BA18     		add	r2, r7, r2
 2323 0078 1178     		ldrb	r1, [r2]
 2324 007a 0A22     		mov	r2, #10
 2325 007c BA18     		add	r2, r7, r2
 2326 007e 1278     		ldrb	r2, [r2]
 2327 0080 0093     		str	r3, [sp]
 2328 0082 231C     		mov	r3, r4
 2329 0084 FFF7FEFF 		bl	CapSense_CalcCentroid
 2330 0088 031C     		mov	r3, r0
 2331 008a 1A1C     		mov	r2, r3
 2332 008c 0E23     		mov	r3, #14
 2333 008e FB18     		add	r3, r7, r3
 2334 0090 1A80     		strh	r2, [r3]
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2335              		.loc 1 1799 0
 2336 0092 0C23     		mov	r3, #12
 2337 0094 FB18     		add	r3, r7, r3
 2338 0096 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 74


 2339 0098 1F22     		mov	r2, #31
 2340 009a 1340     		and	r3, r2
 2341 009c 4FD0     		beq	.L143
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2342              		.loc 1 1802 0
 2343 009e 0823     		mov	r3, #8
 2344 00a0 FB18     		add	r3, r7, r3
 2345 00a2 0D22     		mov	r2, #13
 2346 00a4 BA18     		add	r2, r7, r2
 2347 00a6 1278     		ldrb	r2, [r2]
 2348 00a8 0132     		add	r2, r2, #1
 2349 00aa 1A70     		strb	r2, [r3]
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2350              		.loc 1 1804 0
 2351 00ac 0D23     		mov	r3, #13
 2352 00ae FB18     		add	r3, r7, r3
 2353 00b0 1B78     		ldrb	r3, [r3]
 2354 00b2 264A     		ldr	r2, .L145
 2355 00b4 D35C     		ldrb	r3, [r2, r3]
 2356 00b6 002B     		cmp	r3, #0
 2357 00b8 0FD1     		bne	.L142
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2358              		.loc 1 1807 0
 2359 00ba 0823     		mov	r3, #8
 2360 00bc FB18     		add	r3, r7, r3
 2361 00be 1B78     		ldrb	r3, [r3]
 2362 00c0 0E22     		mov	r2, #14
 2363 00c2 BA18     		add	r2, r7, r2
 2364 00c4 1288     		ldrh	r2, [r2]
 2365 00c6 D1B2     		uxtb	r1, r2
 2366 00c8 204A     		ldr	r2, .L145
 2367 00ca D154     		strb	r1, [r2, r3]
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2368              		.loc 1 1824 0
 2369 00cc 0D23     		mov	r3, #13
 2370 00ce FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 75


 2371 00d0 1B78     		ldrb	r3, [r3]
 2372 00d2 1E4A     		ldr	r2, .L145
 2373 00d4 0121     		mov	r1, #1
 2374 00d6 D154     		strb	r1, [r2, r3]
 2375 00d8 31E0     		b	.L143
 2376              	.L142:
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
 2377              		.loc 1 1870 0
 2378 00da 0C23     		mov	r3, #12
 2379 00dc FB18     		add	r3, r7, r3
 2380 00de 1B78     		ldrb	r3, [r3]
 2381 00e0 0822     		mov	r2, #8
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 76


 2382 00e2 1340     		and	r3, r2
 2383 00e4 2BD0     		beq	.L143
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2384              		.loc 1 1873 0
 2385 00e6 0823     		mov	r3, #8
 2386 00e8 FB18     		add	r3, r7, r3
 2387 00ea 1B78     		ldrb	r3, [r3]
 2388 00ec 174A     		ldr	r2, .L145
 2389 00ee D35C     		ldrb	r3, [r2, r3]
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2390              		.loc 1 1872 0
 2391 00f0 9AB2     		uxth	r2, r3
 2392 00f2 0E23     		mov	r3, #14
 2393 00f4 FC18     		add	r4, r7, r3
 2394 00f6 0E23     		mov	r3, #14
 2395 00f8 FB18     		add	r3, r7, r3
 2396 00fa 1B88     		ldrh	r3, [r3]
 2397 00fc 181C     		mov	r0, r3
 2398 00fe 111C     		mov	r1, r2
 2399 0100 FFF7FEFF 		bl	CapSense_IIR4Filter
 2400 0104 031C     		mov	r3, r0
 2401 0106 2380     		strh	r3, [r4]
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 2402              		.loc 1 1874 0
 2403 0108 0823     		mov	r3, #8
 2404 010a FB18     		add	r3, r7, r3
 2405 010c 1B78     		ldrb	r3, [r3]
 2406 010e 0E22     		mov	r2, #14
 2407 0110 BA18     		add	r2, r7, r2
 2408 0112 1288     		ldrh	r2, [r2]
 2409 0114 D1B2     		uxtb	r1, r2
 2410 0116 0D4A     		ldr	r2, .L145
 2411 0118 D154     		strb	r1, [r2, r3]
 2412 011a 10E0     		b	.L143
 2413              	.L140:
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 77


1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2414              		.loc 1 1898 0
 2415 011c 0E23     		mov	r3, #14
 2416 011e FB18     		add	r3, r7, r3
 2417 0120 0122     		mov	r2, #1
 2418 0122 5242     		neg	r2, r2
 2419 0124 1A80     		strh	r2, [r3]
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2420              		.loc 1 1902 0
 2421 0126 0C23     		mov	r3, #12
 2422 0128 FB18     		add	r3, r7, r3
 2423 012a 1B78     		ldrb	r3, [r3]
 2424 012c 1F22     		mov	r2, #31
 2425 012e 1340     		and	r3, r2
 2426 0130 05D0     		beq	.L143
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2427              		.loc 1 1904 0
 2428 0132 0D23     		mov	r3, #13
 2429 0134 FB18     		add	r3, r7, r3
 2430 0136 1B78     		ldrb	r3, [r3]
 2431 0138 044A     		ldr	r2, .L145
 2432 013a 0021     		mov	r1, #0
 2433 013c D154     		strb	r1, [r2, r3]
 2434              	.L143:
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2435              		.loc 1 1910 0
 2436 013e 0E23     		mov	r3, #14
 2437 0140 FB18     		add	r3, r7, r3
 2438 0142 1B88     		ldrh	r3, [r3]
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2439              		.loc 1 1911 0
 2440 0144 181C     		mov	r0, r3
 2441 0146 BD46     		mov	sp, r7
 2442 0148 05B0     		add	sp, sp, #20
 2443              		@ sp needed
 2444 014a 90BD     		pop	{r4, r7, pc}
 2445              	.L146:
 2446              		.align	2
 2447              	.L145:
 2448 014c 10000000 		.word	CapSense_posFiltersData
 2449 0150 0C000000 		.word	CapSense_posFiltersMask
 2450 0154 00000000 		.word	CapSense_fingerThreshold
 2451 0158 00000000 		.word	CapSense_noiseThreshold
 2452              		.cfi_endproc
 2453              	.LFE65:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 78


 2454              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2455              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2456              		.align	2
 2457              		.global	CapSense_GetRadialCentroidPos
 2458              		.code	16
 2459              		.thumb_func
 2460              		.type	CapSense_GetRadialCentroidPos, %function
 2461              	CapSense_GetRadialCentroidPos:
 2462              	.LFB66:
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2463              		.loc 1 1952 0
 2464              		.cfi_startproc
 2465 0000 90B5     		push	{r4, r7, lr}
 2466              		.cfi_def_cfa_offset 12
 2467              		.cfi_offset 4, -12
 2468              		.cfi_offset 7, -8
 2469              		.cfi_offset 14, -4
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 79


 2470 0002 87B0     		sub	sp, sp, #28
 2471              		.cfi_def_cfa_offset 40
 2472 0004 02AF     		add	r7, sp, #8
 2473              		.cfi_def_cfa 7, 32
 2474 0006 7860     		str	r0, [r7, #4]
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2475              		.loc 1 1968 0
 2476 0008 0D23     		mov	r3, #13
 2477 000a FB18     		add	r3, r7, r3
 2478 000c 0022     		mov	r2, #0
 2479 000e 1A70     		strb	r2, [r3]
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2480              		.loc 1 1969 0
 2481 0010 0C23     		mov	r3, #12
 2482 0012 FB18     		add	r3, r7, r3
 2483 0014 0522     		mov	r2, #5
 2484 0016 1A70     		strb	r2, [r3]
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2485              		.loc 1 1975 0
 2486 0018 1D4A     		ldr	r2, .L151
 2487 001a 7B68     		ldr	r3, [r7, #4]
 2488 001c D318     		add	r3, r2, r3
 2489 001e 1A78     		ldrb	r2, [r3]
 2490 0020 0B23     		mov	r3, #11
 2491 0022 FC18     		add	r4, r7, r3
 2492 0024 0D23     		mov	r3, #13
 2493 0026 FB18     		add	r3, r7, r3
 2494 0028 1978     		ldrb	r1, [r3]
 2495 002a 0C23     		mov	r3, #12
 2496 002c FB18     		add	r3, r7, r3
 2497 002e 1B78     		ldrb	r3, [r3]
 2498 0030 081C     		mov	r0, r1
 2499 0032 191C     		mov	r1, r3
 2500 0034 FFF7FEFF 		bl	CapSense_FindMaximum
 2501 0038 031C     		mov	r3, r0
 2502 003a 2370     		strb	r3, [r4]
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 80


1977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2503              		.loc 1 1978 0
 2504 003c 0B23     		mov	r3, #11
 2505 003e FB18     		add	r3, r7, r3
 2506 0040 1B78     		ldrb	r3, [r3]
 2507 0042 FF2B     		cmp	r3, #255
 2508 0044 18D0     		beq	.L148
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2509              		.loc 1 1981 0
 2510 0046 C823     		mov	r3, #200
 2511 0048 5C01     		lsl	r4, r3, #5
 2512 004a 124A     		ldr	r2, .L151+4
 2513 004c 7B68     		ldr	r3, [r7, #4]
 2514 004e D318     		add	r3, r2, r3
 2515 0050 1B78     		ldrb	r3, [r3]
 2516 0052 0B22     		mov	r2, #11
 2517 0054 BA18     		add	r2, r7, r2
 2518 0056 1078     		ldrb	r0, [r2]
 2519 0058 0D22     		mov	r2, #13
 2520 005a BA18     		add	r2, r7, r2
 2521 005c 1178     		ldrb	r1, [r2]
 2522 005e 0C22     		mov	r2, #12
 2523 0060 BA18     		add	r2, r7, r2
 2524 0062 1278     		ldrb	r2, [r2]
 2525 0064 0093     		str	r3, [sp]
 2526 0066 231C     		mov	r3, r4
 2527 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2528 006c 031C     		mov	r3, r0
 2529 006e 1A1C     		mov	r2, r3
 2530 0070 0E23     		mov	r3, #14
 2531 0072 FB18     		add	r3, r7, r3
 2532 0074 1A80     		strh	r2, [r3]
 2533 0076 04E0     		b	.L149
 2534              	.L148:
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 81


2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 82


2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2535              		.loc 1 2086 0
 2536 0078 0E23     		mov	r3, #14
 2537 007a FB18     		add	r3, r7, r3
 2538 007c 0122     		mov	r2, #1
 2539 007e 5242     		neg	r2, r2
 2540 0080 1A80     		strh	r2, [r3]
 2541              	.L149:
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2542              		.loc 1 2097 0
 2543 0082 0E23     		mov	r3, #14
 2544 0084 FB18     		add	r3, r7, r3
 2545 0086 1B88     		ldrh	r3, [r3]
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2546              		.loc 1 2098 0
 2547 0088 181C     		mov	r0, r3
 2548 008a BD46     		mov	sp, r7
 2549 008c 05B0     		add	sp, sp, #20
 2550              		@ sp needed
 2551 008e 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 83


 2552              	.L152:
 2553              		.align	2
 2554              	.L151:
 2555 0090 00000000 		.word	CapSense_fingerThreshold
 2556 0094 00000000 		.word	CapSense_noiseThreshold
 2557              		.cfi_endproc
 2558              	.LFE66:
 2559              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2560              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2561              		.align	2
 2562              		.global	CapSense_MedianFilter
 2563              		.code	16
 2564              		.thumb_func
 2565              		.type	CapSense_MedianFilter, %function
 2566              	CapSense_MedianFilter:
 2567              	.LFB67:
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 84


2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 85


2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 86


2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 87


2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 88


2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2568              		.loc 1 2381 0
 2569              		.cfi_startproc
 2570 0000 90B5     		push	{r4, r7, lr}
 2571              		.cfi_def_cfa_offset 12
 2572              		.cfi_offset 4, -12
 2573              		.cfi_offset 7, -8
 2574              		.cfi_offset 14, -4
 2575 0002 85B0     		sub	sp, sp, #20
 2576              		.cfi_def_cfa_offset 32
 2577 0004 00AF     		add	r7, sp, #0
 2578              		.cfi_def_cfa_register 7
 2579 0006 041C     		mov	r4, r0
 2580 0008 081C     		mov	r0, r1
 2581 000a 111C     		mov	r1, r2
 2582 000c BB1D     		add	r3, r7, #6
 2583 000e 221C     		add	r2, r4, #0
 2584 0010 1A80     		strh	r2, [r3]
 2585 0012 3B1D     		add	r3, r7, #4
 2586 0014 021C     		add	r2, r0, #0
 2587 0016 1A80     		strh	r2, [r3]
 2588 0018 BB1C     		add	r3, r7, #2
 2589 001a 0A1C     		add	r2, r1, #0
 2590 001c 1A80     		strh	r2, [r3]
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2591              		.loc 1 2384 0
 2592 001e BA1D     		add	r2, r7, #6
 2593 0020 3B1D     		add	r3, r7, #4
 2594 0022 1288     		ldrh	r2, [r2]
 2595 0024 1B88     		ldrh	r3, [r3]
 2596 0026 9A42     		cmp	r2, r3
 2597 0028 0DD9     		bls	.L154
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2598              		.loc 1 2386 0
 2599 002a 0E23     		mov	r3, #14
 2600 002c FB18     		add	r3, r7, r3
 2601 002e 3A1D     		add	r2, r7, #4
 2602 0030 1288     		ldrh	r2, [r2]
 2603 0032 1A80     		strh	r2, [r3]
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2604              		.loc 1 2387 0
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 89


 2605 0034 3B1D     		add	r3, r7, #4
 2606 0036 BA1D     		add	r2, r7, #6
 2607 0038 1288     		ldrh	r2, [r2]
 2608 003a 1A80     		strh	r2, [r3]
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2609              		.loc 1 2388 0
 2610 003c BB1D     		add	r3, r7, #6
 2611 003e 0E22     		mov	r2, #14
 2612 0040 BA18     		add	r2, r7, r2
 2613 0042 1288     		ldrh	r2, [r2]
 2614 0044 1A80     		strh	r2, [r3]
 2615              	.L154:
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2616              		.loc 1 2391 0
 2617 0046 3A1D     		add	r2, r7, #4
 2618 0048 BB1C     		add	r3, r7, #2
 2619 004a 1288     		ldrh	r2, [r2]
 2620 004c 1B88     		ldrh	r3, [r3]
 2621 004e 9A42     		cmp	r2, r3
 2622 0050 03D9     		bls	.L155
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2623              		.loc 1 2393 0
 2624 0052 3B1D     		add	r3, r7, #4
 2625 0054 BA1C     		add	r2, r7, #2
 2626 0056 1288     		ldrh	r2, [r2]
 2627 0058 1A80     		strh	r2, [r3]
 2628              	.L155:
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2629              		.loc 1 2396 0
 2630 005a 3B1D     		add	r3, r7, #4
 2631 005c BA1D     		add	r2, r7, #6
 2632 005e 1088     		ldrh	r0, [r2]
 2633 0060 1B88     		ldrh	r3, [r3]
 2634 0062 99B2     		uxth	r1, r3
 2635 0064 82B2     		uxth	r2, r0
 2636 0066 9142     		cmp	r1, r2
 2637 0068 00D2     		bcs	.L156
 2638 006a 031C     		add	r3, r0, #0
 2639              	.L156:
 2640 006c 9BB2     		uxth	r3, r3
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2641              		.loc 1 2397 0
 2642 006e 181C     		mov	r0, r3
 2643 0070 BD46     		mov	sp, r7
 2644 0072 05B0     		add	sp, sp, #20
 2645              		@ sp needed
 2646 0074 90BD     		pop	{r4, r7, pc}
 2647              		.cfi_endproc
 2648              	.LFE67:
 2649              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2650 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2651              		.align	2
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 90


 2652              		.global	CapSense_IIR4Filter
 2653              		.code	16
 2654              		.thumb_func
 2655              		.type	CapSense_IIR4Filter, %function
 2656              	CapSense_IIR4Filter:
 2657              	.LFB68:
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 91


2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2658              		.loc 1 2501 0
 2659              		.cfi_startproc
 2660 0000 80B5     		push	{r7, lr}
 2661              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 92


 2662              		.cfi_offset 7, -8
 2663              		.cfi_offset 14, -4
 2664 0002 84B0     		sub	sp, sp, #16
 2665              		.cfi_def_cfa_offset 24
 2666 0004 00AF     		add	r7, sp, #0
 2667              		.cfi_def_cfa_register 7
 2668 0006 021C     		mov	r2, r0
 2669 0008 BB1D     		add	r3, r7, #6
 2670 000a 1A80     		strh	r2, [r3]
 2671 000c 3B1D     		add	r3, r7, #4
 2672 000e 0A1C     		add	r2, r1, #0
 2673 0010 1A80     		strh	r2, [r3]
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2674              		.loc 1 2505 0
 2675 0012 BB1D     		add	r3, r7, #6
 2676 0014 1A88     		ldrh	r2, [r3]
 2677 0016 3B1D     		add	r3, r7, #4
 2678 0018 1B88     		ldrh	r3, [r3]
 2679 001a D318     		add	r3, r2, r3
 2680 001c FB60     		str	r3, [r7, #12]
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2681              		.loc 1 2506 0
 2682 001e 3B1D     		add	r3, r7, #4
 2683 0020 1B88     		ldrh	r3, [r3]
 2684 0022 5B00     		lsl	r3, r3, #1
 2685 0024 FA68     		ldr	r2, [r7, #12]
 2686 0026 D318     		add	r3, r2, r3
 2687 0028 FB60     		str	r3, [r7, #12]
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2688              		.loc 1 2507 0
 2689 002a FB68     		ldr	r3, [r7, #12]
 2690 002c 9B08     		lsr	r3, r3, #2
 2691 002e FB60     		str	r3, [r7, #12]
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2692              		.loc 1 2509 0
 2693 0030 FB68     		ldr	r3, [r7, #12]
 2694 0032 9BB2     		uxth	r3, r3
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2695              		.loc 1 2510 0
 2696 0034 181C     		mov	r0, r3
 2697 0036 BD46     		mov	sp, r7
 2698 0038 04B0     		add	sp, sp, #16
 2699              		@ sp needed
 2700 003a 80BD     		pop	{r7, pc}
 2701              		.cfi_endproc
 2702              	.LFE68:
 2703              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2704              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2705              		.align	2
 2706              		.global	CapSense_GetWidgetNumber
 2707              		.code	16
 2708              		.thumb_func
 2709              		.type	CapSense_GetWidgetNumber, %function
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 93


 2710              	CapSense_GetWidgetNumber:
 2711              	.LFB69:
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 94


2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 95


2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 96


2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2712              		.loc 1 2734 0
 2713              		.cfi_startproc
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 97


 2714 0000 80B5     		push	{r7, lr}
 2715              		.cfi_def_cfa_offset 8
 2716              		.cfi_offset 7, -8
 2717              		.cfi_offset 14, -4
 2718 0002 82B0     		sub	sp, sp, #8
 2719              		.cfi_def_cfa_offset 16
 2720 0004 00AF     		add	r7, sp, #0
 2721              		.cfi_def_cfa_register 7
 2722 0006 7860     		str	r0, [r7, #4]
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2723              		.loc 1 2735 0
 2724 0008 034A     		ldr	r2, .L162
 2725 000a 7B68     		ldr	r3, [r7, #4]
 2726 000c D318     		add	r3, r2, r3
 2727 000e 1B78     		ldrb	r3, [r3]
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2728              		.loc 1 2736 0
 2729 0010 181C     		mov	r0, r3
 2730 0012 BD46     		mov	sp, r7
 2731 0014 02B0     		add	sp, sp, #8
 2732              		@ sp needed
 2733 0016 80BD     		pop	{r7, pc}
 2734              	.L163:
 2735              		.align	2
 2736              	.L162:
 2737 0018 00000000 		.word	CapSense_widgetNumber
 2738              		.cfi_endproc
 2739              	.LFE69:
 2740              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2741              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2742              		.align	2
 2743              		.global	CapSense_GetLowBaselineReset
 2744              		.code	16
 2745              		.thumb_func
 2746              		.type	CapSense_GetLowBaselineReset, %function
 2747              	CapSense_GetLowBaselineReset:
 2748              	.LFB70:
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 98


2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2749              		.loc 1 2760 0
 2750              		.cfi_startproc
 2751 0000 80B5     		push	{r7, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 7, -8
 2754              		.cfi_offset 14, -4
 2755 0002 82B0     		sub	sp, sp, #8
 2756              		.cfi_def_cfa_offset 16
 2757 0004 00AF     		add	r7, sp, #0
 2758              		.cfi_def_cfa_register 7
 2759 0006 7860     		str	r0, [r7, #4]
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2760              		.loc 1 2761 0
 2761 0008 034A     		ldr	r2, .L166
 2762 000a 7B68     		ldr	r3, [r7, #4]
 2763 000c D318     		add	r3, r2, r3
 2764 000e 1B78     		ldrb	r3, [r3]
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2765              		.loc 1 2762 0
 2766 0010 181C     		mov	r0, r3
 2767 0012 BD46     		mov	sp, r7
 2768 0014 02B0     		add	sp, sp, #8
 2769              		@ sp needed
 2770 0016 80BD     		pop	{r7, pc}
 2771              	.L167:
 2772              		.align	2
 2773              	.L166:
 2774 0018 00000000 		.word	CapSense_lowBaselineReset
 2775              		.cfi_endproc
 2776              	.LFE70:
 2777              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2778              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2779              		.align	2
 2780              		.global	CapSense_GetDebounce
 2781              		.code	16
 2782              		.thumb_func
 2783              		.type	CapSense_GetDebounce, %function
 2784              	CapSense_GetDebounce:
 2785              	.LFB71:
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 99


2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2786              		.loc 1 2786 0
 2787              		.cfi_startproc
 2788 0000 80B5     		push	{r7, lr}
 2789              		.cfi_def_cfa_offset 8
 2790              		.cfi_offset 7, -8
 2791              		.cfi_offset 14, -4
 2792 0002 82B0     		sub	sp, sp, #8
 2793              		.cfi_def_cfa_offset 16
 2794 0004 00AF     		add	r7, sp, #0
 2795              		.cfi_def_cfa_register 7
 2796 0006 7860     		str	r0, [r7, #4]
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2797              		.loc 1 2787 0
 2798 0008 034A     		ldr	r2, .L170
 2799 000a 7B68     		ldr	r3, [r7, #4]
 2800 000c D318     		add	r3, r2, r3
 2801 000e 1B78     		ldrb	r3, [r3]
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2802              		.loc 1 2788 0
 2803 0010 181C     		mov	r0, r3
 2804 0012 BD46     		mov	sp, r7
 2805 0014 02B0     		add	sp, sp, #8
 2806              		@ sp needed
 2807 0016 80BD     		pop	{r7, pc}
 2808              	.L171:
 2809              		.align	2
 2810              	.L170:
 2811 0018 00000000 		.word	CapSense_debounce
 2812              		.cfi_endproc
 2813              	.LFE71:
 2814              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2815              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2816              		.align	2
 2817              		.global	CapSense_EnableRawDataFilters
 2818              		.code	16
 2819              		.thumb_func
 2820              		.type	CapSense_EnableRawDataFilters, %function
 2821              	CapSense_EnableRawDataFilters:
 2822              	.LFB72:
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 100


2797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2823              		.loc 1 2812 0
 2824              		.cfi_startproc
 2825 0000 80B5     		push	{r7, lr}
 2826              		.cfi_def_cfa_offset 8
 2827              		.cfi_offset 7, -8
 2828              		.cfi_offset 14, -4
 2829 0002 00AF     		add	r7, sp, #0
 2830              		.cfi_def_cfa_register 7
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2831              		.loc 1 2813 0
 2832 0004 024B     		ldr	r3, .L173
 2833 0006 0122     		mov	r2, #1
 2834 0008 1A70     		strb	r2, [r3]
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2835              		.loc 1 2814 0
 2836 000a BD46     		mov	sp, r7
 2837              		@ sp needed
 2838 000c 80BD     		pop	{r7, pc}
 2839              	.L174:
 2840 000e C046     		.align	2
 2841              	.L173:
 2842 0010 00000000 		.word	CapSense_enableRawFilters
 2843              		.cfi_endproc
 2844              	.LFE72:
 2845              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2846              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2847              		.align	2
 2848              		.global	CapSense_DisableRawDataFilters
 2849              		.code	16
 2850              		.thumb_func
 2851              		.type	CapSense_DisableRawDataFilters, %function
 2852              	CapSense_DisableRawDataFilters:
 2853              	.LFB73:
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 101


2823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2854              		.loc 1 2837 0
 2855              		.cfi_startproc
 2856 0000 80B5     		push	{r7, lr}
 2857              		.cfi_def_cfa_offset 8
 2858              		.cfi_offset 7, -8
 2859              		.cfi_offset 14, -4
 2860 0002 00AF     		add	r7, sp, #0
 2861              		.cfi_def_cfa_register 7
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2862              		.loc 1 2838 0
 2863 0004 024B     		ldr	r3, .L176
 2864 0006 0022     		mov	r2, #0
 2865 0008 1A70     		strb	r2, [r3]
2839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2866              		.loc 1 2839 0
 2867 000a BD46     		mov	sp, r7
 2868              		@ sp needed
 2869 000c 80BD     		pop	{r7, pc}
 2870              	.L177:
 2871 000e C046     		.align	2
 2872              	.L176:
 2873 0010 00000000 		.word	CapSense_enableRawFilters
 2874              		.cfi_endproc
 2875              	.LFE73:
 2876              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2877              		.bss
 2878 001d 000000   		.align	2
 2879              	CapSense_debounceCounter.5404:
 2880 0020 00       		.space	1
 2881 0021 000000   		.align	2
 2882              	CapSense_centroid.5456:
 2883 0024 000000   		.space	3
 2884 0027 00       		.text
 2885              	.Letext0:
 2886              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2887              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2888              		.section	.debug_info,"",%progbits
 2889              	.Ldebug_info0:
 2890 0000 390E0000 		.4byte	0xe39
 2891 0004 0400     		.2byte	0x4
 2892 0006 00000000 		.4byte	.Ldebug_abbrev0
 2893 000a 04       		.byte	0x4
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 102


 2894 000b 01       		.uleb128 0x1
 2895 000c 63060000 		.4byte	.LASF145
 2896 0010 01       		.byte	0x1
 2897 0011 BA050000 		.4byte	.LASF146
 2898 0015 86050000 		.4byte	.LASF147
 2899 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2900 001d 00000000 		.4byte	0
 2901 0021 00000000 		.4byte	.Ldebug_line0
 2902 0025 02       		.uleb128 0x2
 2903 0026 01       		.byte	0x1
 2904 0027 06       		.byte	0x6
 2905 0028 300A0000 		.4byte	.LASF0
 2906 002c 02       		.uleb128 0x2
 2907 002d 01       		.byte	0x1
 2908 002e 08       		.byte	0x8
 2909 002f 57090000 		.4byte	.LASF1
 2910 0033 02       		.uleb128 0x2
 2911 0034 02       		.byte	0x2
 2912 0035 05       		.byte	0x5
 2913 0036 28080000 		.4byte	.LASF2
 2914 003a 02       		.uleb128 0x2
 2915 003b 02       		.byte	0x2
 2916 003c 07       		.byte	0x7
 2917 003d 3C0A0000 		.4byte	.LASF3
 2918 0041 02       		.uleb128 0x2
 2919 0042 04       		.byte	0x4
 2920 0043 05       		.byte	0x5
 2921 0044 32080000 		.4byte	.LASF4
 2922 0048 02       		.uleb128 0x2
 2923 0049 04       		.byte	0x4
 2924 004a 07       		.byte	0x7
 2925 004b E9080000 		.4byte	.LASF5
 2926 004f 02       		.uleb128 0x2
 2927 0050 08       		.byte	0x8
 2928 0051 05       		.byte	0x5
 2929 0052 E3050000 		.4byte	.LASF6
 2930 0056 02       		.uleb128 0x2
 2931 0057 08       		.byte	0x8
 2932 0058 07       		.byte	0x7
 2933 0059 20030000 		.4byte	.LASF7
 2934 005d 03       		.uleb128 0x3
 2935 005e 04       		.byte	0x4
 2936 005f 05       		.byte	0x5
 2937 0060 696E7400 		.ascii	"int\000"
 2938 0064 02       		.uleb128 0x2
 2939 0065 04       		.byte	0x4
 2940 0066 07       		.byte	0x7
 2941 0067 21010000 		.4byte	.LASF8
 2942 006b 04       		.uleb128 0x4
 2943 006c CC0A0000 		.4byte	.LASF9
 2944 0070 02       		.byte	0x2
 2945 0071 9801     		.2byte	0x198
 2946 0073 2C000000 		.4byte	0x2c
 2947 0077 04       		.uleb128 0x4
 2948 0078 45050000 		.4byte	.LASF10
 2949 007c 02       		.byte	0x2
 2950 007d 9901     		.2byte	0x199
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 103


 2951 007f 3A000000 		.4byte	0x3a
 2952 0083 04       		.uleb128 0x4
 2953 0084 79070000 		.4byte	.LASF11
 2954 0088 02       		.byte	0x2
 2955 0089 9A01     		.2byte	0x19a
 2956 008b 48000000 		.4byte	0x48
 2957 008f 04       		.uleb128 0x4
 2958 0090 46010000 		.4byte	.LASF12
 2959 0094 02       		.byte	0x2
 2960 0095 9C01     		.2byte	0x19c
 2961 0097 33000000 		.4byte	0x33
 2962 009b 04       		.uleb128 0x4
 2963 009c C6020000 		.4byte	.LASF13
 2964 00a0 02       		.byte	0x2
 2965 00a1 9D01     		.2byte	0x19d
 2966 00a3 41000000 		.4byte	0x41
 2967 00a7 02       		.uleb128 0x2
 2968 00a8 04       		.byte	0x4
 2969 00a9 04       		.byte	0x4
 2970 00aa C0020000 		.4byte	.LASF14
 2971 00ae 02       		.uleb128 0x2
 2972 00af 08       		.byte	0x8
 2973 00b0 04       		.byte	0x4
 2974 00b1 D20A0000 		.4byte	.LASF15
 2975 00b5 02       		.uleb128 0x2
 2976 00b6 01       		.byte	0x1
 2977 00b7 08       		.byte	0x8
 2978 00b8 0E050000 		.4byte	.LASF16
 2979 00bc 02       		.uleb128 0x2
 2980 00bd 04       		.byte	0x4
 2981 00be 07       		.byte	0x7
 2982 00bf E0080000 		.4byte	.LASF17
 2983 00c3 05       		.uleb128 0x5
 2984 00c4 5C       		.byte	0x5c
 2985 00c5 03       		.byte	0x3
 2986 00c6 2F       		.byte	0x2f
 2987 00c7 E0010000 		.4byte	0x1e0
 2988 00cb 06       		.uleb128 0x6
 2989 00cc 51050000 		.4byte	.LASF18
 2990 00d0 03       		.byte	0x3
 2991 00d1 31       		.byte	0x31
 2992 00d2 E0010000 		.4byte	0x1e0
 2993 00d6 00       		.byte	0
 2994 00d7 06       		.uleb128 0x6
 2995 00d8 19080000 		.4byte	.LASF19
 2996 00dc 03       		.byte	0x3
 2997 00dd 32       		.byte	0x32
 2998 00de E0010000 		.4byte	0x1e0
 2999 00e2 04       		.byte	0x4
 3000 00e3 06       		.uleb128 0x6
 3001 00e4 E1090000 		.4byte	.LASF20
 3002 00e8 03       		.byte	0x3
 3003 00e9 33       		.byte	0x33
 3004 00ea E0010000 		.4byte	0x1e0
 3005 00ee 08       		.byte	0x8
 3006 00ef 06       		.uleb128 0x6
 3007 00f0 4A090000 		.4byte	.LASF21
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 104


 3008 00f4 03       		.byte	0x3
 3009 00f5 34       		.byte	0x34
 3010 00f6 E0010000 		.4byte	0x1e0
 3011 00fa 0C       		.byte	0xc
 3012 00fb 06       		.uleb128 0x6
 3013 00fc 260A0000 		.4byte	.LASF22
 3014 0100 03       		.byte	0x3
 3015 0101 35       		.byte	0x35
 3016 0102 E0010000 		.4byte	0x1e0
 3017 0106 10       		.byte	0x10
 3018 0107 06       		.uleb128 0x6
 3019 0108 61080000 		.4byte	.LASF23
 3020 010c 03       		.byte	0x3
 3021 010d 36       		.byte	0x36
 3022 010e E6010000 		.4byte	0x1e6
 3023 0112 14       		.byte	0x14
 3024 0113 06       		.uleb128 0x6
 3025 0114 D2020000 		.4byte	.LASF24
 3026 0118 03       		.byte	0x3
 3027 0119 37       		.byte	0x37
 3028 011a F1010000 		.4byte	0x1f1
 3029 011e 18       		.byte	0x18
 3030 011f 06       		.uleb128 0x6
 3031 0120 23040000 		.4byte	.LASF25
 3032 0124 03       		.byte	0x3
 3033 0125 38       		.byte	0x38
 3034 0126 E0010000 		.4byte	0x1e0
 3035 012a 1C       		.byte	0x1c
 3036 012b 06       		.uleb128 0x6
 3037 012c 0B030000 		.4byte	.LASF26
 3038 0130 03       		.byte	0x3
 3039 0131 39       		.byte	0x39
 3040 0132 E0010000 		.4byte	0x1e0
 3041 0136 20       		.byte	0x20
 3042 0137 06       		.uleb128 0x6
 3043 0138 95010000 		.4byte	.LASF27
 3044 013c 03       		.byte	0x3
 3045 013d 3A       		.byte	0x3a
 3046 013e E0010000 		.4byte	0x1e0
 3047 0142 24       		.byte	0x24
 3048 0143 06       		.uleb128 0x6
 3049 0144 19070000 		.4byte	.LASF28
 3050 0148 03       		.byte	0x3
 3051 0149 3B       		.byte	0x3b
 3052 014a F7010000 		.4byte	0x1f7
 3053 014e 28       		.byte	0x28
 3054 014f 06       		.uleb128 0x6
 3055 0150 4C010000 		.4byte	.LASF29
 3056 0154 03       		.byte	0x3
 3057 0155 3C       		.byte	0x3c
 3058 0156 F7010000 		.4byte	0x1f7
 3059 015a 2C       		.byte	0x2c
 3060 015b 06       		.uleb128 0x6
 3061 015c 13090000 		.4byte	.LASF30
 3062 0160 03       		.byte	0x3
 3063 0161 3D       		.byte	0x3d
 3064 0162 F7010000 		.4byte	0x1f7
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 105


 3065 0166 30       		.byte	0x30
 3066 0167 06       		.uleb128 0x6
 3067 0168 B6080000 		.4byte	.LASF31
 3068 016c 03       		.byte	0x3
 3069 016d 3E       		.byte	0x3e
 3070 016e E0010000 		.4byte	0x1e0
 3071 0172 34       		.byte	0x34
 3072 0173 06       		.uleb128 0x6
 3073 0174 48000000 		.4byte	.LASF32
 3074 0178 03       		.byte	0x3
 3075 0179 3F       		.byte	0x3f
 3076 017a E0010000 		.4byte	0x1e0
 3077 017e 38       		.byte	0x38
 3078 017f 06       		.uleb128 0x6
 3079 0180 36050000 		.4byte	.LASF33
 3080 0184 03       		.byte	0x3
 3081 0185 40       		.byte	0x40
 3082 0186 E6010000 		.4byte	0x1e6
 3083 018a 3C       		.byte	0x3c
 3084 018b 06       		.uleb128 0x6
 3085 018c 10020000 		.4byte	.LASF34
 3086 0190 03       		.byte	0x3
 3087 0191 41       		.byte	0x41
 3088 0192 E6010000 		.4byte	0x1e6
 3089 0196 40       		.byte	0x40
 3090 0197 06       		.uleb128 0x6
 3091 0198 95000000 		.4byte	.LASF35
 3092 019c 03       		.byte	0x3
 3093 019d 42       		.byte	0x42
 3094 019e E6010000 		.4byte	0x1e6
 3095 01a2 44       		.byte	0x44
 3096 01a3 06       		.uleb128 0x6
 3097 01a4 3B060000 		.4byte	.LASF36
 3098 01a8 03       		.byte	0x3
 3099 01a9 43       		.byte	0x43
 3100 01aa 0C020000 		.4byte	0x20c
 3101 01ae 48       		.byte	0x48
 3102 01af 06       		.uleb128 0x6
 3103 01b0 13060000 		.4byte	.LASF37
 3104 01b4 03       		.byte	0x3
 3105 01b5 44       		.byte	0x44
 3106 01b6 1D020000 		.4byte	0x21d
 3107 01ba 4C       		.byte	0x4c
 3108 01bb 06       		.uleb128 0x6
 3109 01bc 39040000 		.4byte	.LASF38
 3110 01c0 03       		.byte	0x3
 3111 01c1 45       		.byte	0x45
 3112 01c2 0C020000 		.4byte	0x20c
 3113 01c6 50       		.byte	0x50
 3114 01c7 06       		.uleb128 0x6
 3115 01c8 A5000000 		.4byte	.LASF39
 3116 01cc 03       		.byte	0x3
 3117 01cd 46       		.byte	0x46
 3118 01ce 37020000 		.4byte	0x237
 3119 01d2 54       		.byte	0x54
 3120 01d3 06       		.uleb128 0x6
 3121 01d4 6D0A0000 		.4byte	.LASF40
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 106


 3122 01d8 03       		.byte	0x3
 3123 01d9 47       		.byte	0x47
 3124 01da 52020000 		.4byte	0x252
 3125 01de 58       		.byte	0x58
 3126 01df 00       		.byte	0
 3127 01e0 07       		.uleb128 0x7
 3128 01e1 04       		.byte	0x4
 3129 01e2 6B000000 		.4byte	0x6b
 3130 01e6 07       		.uleb128 0x7
 3131 01e7 04       		.byte	0x4
 3132 01e8 EC010000 		.4byte	0x1ec
 3133 01ec 08       		.uleb128 0x8
 3134 01ed 6B000000 		.4byte	0x6b
 3135 01f1 07       		.uleb128 0x7
 3136 01f2 04       		.byte	0x4
 3137 01f3 83000000 		.4byte	0x83
 3138 01f7 07       		.uleb128 0x7
 3139 01f8 04       		.byte	0x4
 3140 01f9 77000000 		.4byte	0x77
 3141 01fd 09       		.uleb128 0x9
 3142 01fe 77000000 		.4byte	0x77
 3143 0202 0C020000 		.4byte	0x20c
 3144 0206 0A       		.uleb128 0xa
 3145 0207 83000000 		.4byte	0x83
 3146 020b 00       		.byte	0
 3147 020c 07       		.uleb128 0x7
 3148 020d 04       		.byte	0x4
 3149 020e FD010000 		.4byte	0x1fd
 3150 0212 0B       		.uleb128 0xb
 3151 0213 1D020000 		.4byte	0x21d
 3152 0217 0A       		.uleb128 0xa
 3153 0218 83000000 		.4byte	0x83
 3154 021c 00       		.byte	0
 3155 021d 07       		.uleb128 0x7
 3156 021e 04       		.byte	0x4
 3157 021f 12020000 		.4byte	0x212
 3158 0223 09       		.uleb128 0x9
 3159 0224 83000000 		.4byte	0x83
 3160 0228 37020000 		.4byte	0x237
 3161 022c 0A       		.uleb128 0xa
 3162 022d E6010000 		.4byte	0x1e6
 3163 0231 0A       		.uleb128 0xa
 3164 0232 83000000 		.4byte	0x83
 3165 0236 00       		.byte	0
 3166 0237 07       		.uleb128 0x7
 3167 0238 04       		.byte	0x4
 3168 0239 23020000 		.4byte	0x223
 3169 023d 0B       		.uleb128 0xb
 3170 023e 52020000 		.4byte	0x252
 3171 0242 0A       		.uleb128 0xa
 3172 0243 E0010000 		.4byte	0x1e0
 3173 0247 0A       		.uleb128 0xa
 3174 0248 83000000 		.4byte	0x83
 3175 024c 0A       		.uleb128 0xa
 3176 024d 83000000 		.4byte	0x83
 3177 0251 00       		.byte	0
 3178 0252 07       		.uleb128 0x7
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 107


 3179 0253 04       		.byte	0x4
 3180 0254 3D020000 		.4byte	0x23d
 3181 0258 0C       		.uleb128 0xc
 3182 0259 D90A0000 		.4byte	.LASF41
 3183 025d 03       		.byte	0x3
 3184 025e 48       		.byte	0x48
 3185 025f C3000000 		.4byte	0xc3
 3186 0263 05       		.uleb128 0x5
 3187 0264 0C       		.byte	0xc
 3188 0265 03       		.byte	0x3
 3189 0266 4A       		.byte	0x4a
 3190 0267 B4020000 		.4byte	0x2b4
 3191 026b 06       		.uleb128 0x6
 3192 026c CF040000 		.4byte	.LASF42
 3193 0270 03       		.byte	0x3
 3194 0271 4C       		.byte	0x4c
 3195 0272 6B000000 		.4byte	0x6b
 3196 0276 00       		.byte	0
 3197 0277 06       		.uleb128 0x6
 3198 0278 1D020000 		.4byte	.LASF43
 3199 027c 03       		.byte	0x3
 3200 027d 4D       		.byte	0x4d
 3201 027e 6B000000 		.4byte	0x6b
 3202 0282 01       		.byte	0x1
 3203 0283 06       		.uleb128 0x6
 3204 0284 2E010000 		.4byte	.LASF44
 3205 0288 03       		.byte	0x3
 3206 0289 4E       		.byte	0x4e
 3207 028a 6B000000 		.4byte	0x6b
 3208 028e 02       		.byte	0x2
 3209 028f 06       		.uleb128 0x6
 3210 0290 E8040000 		.4byte	.LASF45
 3211 0294 03       		.byte	0x3
 3212 0295 4F       		.byte	0x4f
 3213 0296 77000000 		.4byte	0x77
 3214 029a 04       		.byte	0x4
 3215 029b 06       		.uleb128 0x6
 3216 029c EB070000 		.4byte	.LASF46
 3217 02a0 03       		.byte	0x3
 3218 02a1 50       		.byte	0x50
 3219 02a2 77000000 		.4byte	0x77
 3220 02a6 06       		.byte	0x6
 3221 02a7 06       		.uleb128 0x6
 3222 02a8 FB080000 		.4byte	.LASF47
 3223 02ac 03       		.byte	0x3
 3224 02ad 51       		.byte	0x51
 3225 02ae B4020000 		.4byte	0x2b4
 3226 02b2 08       		.byte	0x8
 3227 02b3 00       		.byte	0
 3228 02b4 07       		.uleb128 0x7
 3229 02b5 04       		.byte	0x4
 3230 02b6 BA020000 		.4byte	0x2ba
 3231 02ba 08       		.uleb128 0x8
 3232 02bb 58020000 		.4byte	0x258
 3233 02bf 0C       		.uleb128 0xc
 3234 02c0 D9010000 		.4byte	.LASF48
 3235 02c4 03       		.byte	0x3
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 108


 3236 02c5 52       		.byte	0x52
 3237 02c6 63020000 		.4byte	0x263
 3238 02ca 0D       		.uleb128 0xd
 3239 02cb F1060000 		.4byte	.LASF49
 3240 02cf 01       		.byte	0x1
 3241 02d0 8E       		.byte	0x8e
 3242 02d1 00000000 		.4byte	.LFB36
 3243 02d5 58000000 		.4byte	.LFE36-.LFB36
 3244 02d9 01       		.uleb128 0x1
 3245 02da 9C       		.byte	0x9c
 3246 02db EE020000 		.4byte	0x2ee
 3247 02df 0E       		.uleb128 0xe
 3248 02e0 E1040000 		.4byte	.LASF51
 3249 02e4 01       		.byte	0x1
 3250 02e5 8E       		.byte	0x8e
 3251 02e6 83000000 		.4byte	0x83
 3252 02ea 02       		.uleb128 0x2
 3253 02eb 91       		.byte	0x91
 3254 02ec 74       		.sleb128 -12
 3255 02ed 00       		.byte	0
 3256 02ee 0F       		.uleb128 0xf
 3257 02ef B7010000 		.4byte	.LASF50
 3258 02f3 01       		.byte	0x1
 3259 02f4 D9       		.byte	0xd9
 3260 02f5 00000000 		.4byte	.LFB37
 3261 02f9 28000000 		.4byte	.LFE37-.LFB37
 3262 02fd 01       		.uleb128 0x1
 3263 02fe 9C       		.byte	0x9c
 3264 02ff 12030000 		.4byte	0x312
 3265 0303 0E       		.uleb128 0xe
 3266 0304 E1040000 		.4byte	.LASF51
 3267 0308 01       		.byte	0x1
 3268 0309 D9       		.byte	0xd9
 3269 030a 83000000 		.4byte	0x83
 3270 030e 02       		.uleb128 0x2
 3271 030f 91       		.byte	0x91
 3272 0310 74       		.sleb128 -12
 3273 0311 00       		.byte	0
 3274 0312 0F       		.uleb128 0xf
 3275 0313 8B090000 		.4byte	.LASF52
 3276 0317 01       		.byte	0x1
 3277 0318 FE       		.byte	0xfe
 3278 0319 00000000 		.4byte	.LFB38
 3279 031d 26000000 		.4byte	.LFE38-.LFB38
 3280 0321 01       		.uleb128 0x1
 3281 0322 9C       		.byte	0x9c
 3282 0323 35030000 		.4byte	0x335
 3283 0327 10       		.uleb128 0x10
 3284 0328 6900     		.ascii	"i\000"
 3285 032a 01       		.byte	0x1
 3286 032b 0001     		.2byte	0x100
 3287 032d 83000000 		.4byte	0x83
 3288 0331 02       		.uleb128 0x2
 3289 0332 91       		.byte	0x91
 3290 0333 74       		.sleb128 -12
 3291 0334 00       		.byte	0
 3292 0335 11       		.uleb128 0x11
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 109


 3293 0336 59010000 		.4byte	.LASF53
 3294 033a 01       		.byte	0x1
 3295 033b 2101     		.2byte	0x121
 3296 033d 00000000 		.4byte	.LFB39
 3297 0341 50000000 		.4byte	.LFE39-.LFB39
 3298 0345 01       		.uleb128 0x1
 3299 0346 9C       		.byte	0x9c
 3300 0347 68030000 		.4byte	0x368
 3301 034b 10       		.uleb128 0x10
 3302 034c 6900     		.ascii	"i\000"
 3303 034e 01       		.byte	0x1
 3304 034f 2301     		.2byte	0x123
 3305 0351 83000000 		.4byte	0x83
 3306 0355 02       		.uleb128 0x2
 3307 0356 91       		.byte	0x91
 3308 0357 74       		.sleb128 -12
 3309 0358 12       		.uleb128 0x12
 3310 0359 04010000 		.4byte	.LASF54
 3311 035d 01       		.byte	0x1
 3312 035e 2401     		.2byte	0x124
 3313 0360 83000000 		.4byte	0x83
 3314 0364 02       		.uleb128 0x2
 3315 0365 91       		.byte	0x91
 3316 0366 70       		.sleb128 -16
 3317 0367 00       		.byte	0
 3318 0368 11       		.uleb128 0x11
 3319 0369 72000000 		.4byte	.LASF55
 3320 036d 01       		.byte	0x1
 3321 036e 6201     		.2byte	0x162
 3322 0370 00000000 		.4byte	.LFB40
 3323 0374 38020000 		.4byte	.LFE40-.LFB40
 3324 0378 01       		.uleb128 0x1
 3325 0379 9C       		.byte	0x9c
 3326 037a E8030000 		.4byte	0x3e8
 3327 037e 13       		.uleb128 0x13
 3328 037f E1040000 		.4byte	.LASF51
 3329 0383 01       		.byte	0x1
 3330 0384 6201     		.2byte	0x162
 3331 0386 83000000 		.4byte	0x83
 3332 038a 02       		.uleb128 0x2
 3333 038b 91       		.byte	0x91
 3334 038c 5C       		.sleb128 -36
 3335 038d 12       		.uleb128 0x12
 3336 038e 34040000 		.4byte	.LASF56
 3337 0392 01       		.byte	0x1
 3338 0393 6401     		.2byte	0x164
 3339 0395 83000000 		.4byte	0x83
 3340 0399 02       		.uleb128 0x2
 3341 039a 91       		.byte	0x91
 3342 039b 60       		.sleb128 -32
 3343 039c 12       		.uleb128 0x12
 3344 039d 17040000 		.4byte	.LASF57
 3345 03a1 01       		.byte	0x1
 3346 03a2 6501     		.2byte	0x165
 3347 03a4 83000000 		.4byte	0x83
 3348 03a8 02       		.uleb128 0x2
 3349 03a9 91       		.byte	0x91
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 110


 3350 03aa 6C       		.sleb128 -20
 3351 03ab 12       		.uleb128 0x12
 3352 03ac 920A0000 		.4byte	.LASF58
 3353 03b0 01       		.byte	0x1
 3354 03b1 6601     		.2byte	0x166
 3355 03b3 77000000 		.4byte	0x77
 3356 03b7 02       		.uleb128 0x2
 3357 03b8 91       		.byte	0x91
 3358 03b9 6A       		.sleb128 -22
 3359 03ba 12       		.uleb128 0x12
 3360 03bb 55040000 		.4byte	.LASF59
 3361 03bf 01       		.byte	0x1
 3362 03c0 6701     		.2byte	0x167
 3363 03c2 77000000 		.4byte	0x77
 3364 03c6 02       		.uleb128 0x2
 3365 03c7 91       		.byte	0x91
 3366 03c8 68       		.sleb128 -24
 3367 03c9 12       		.uleb128 0x12
 3368 03ca 51030000 		.4byte	.LASF60
 3369 03ce 01       		.byte	0x1
 3370 03cf 6801     		.2byte	0x168
 3371 03d1 6B000000 		.4byte	0x6b
 3372 03d5 02       		.uleb128 0x2
 3373 03d6 91       		.byte	0x91
 3374 03d7 67       		.sleb128 -25
 3375 03d8 12       		.uleb128 0x12
 3376 03d9 04090000 		.4byte	.LASF61
 3377 03dd 01       		.byte	0x1
 3378 03de 6901     		.2byte	0x169
 3379 03e0 6B000000 		.4byte	0x6b
 3380 03e4 02       		.uleb128 0x2
 3381 03e5 91       		.byte	0x91
 3382 03e6 66       		.sleb128 -26
 3383 03e7 00       		.byte	0
 3384 03e8 11       		.uleb128 0x11
 3385 03e9 45060000 		.4byte	.LASF62
 3386 03ed 01       		.byte	0x1
 3387 03ee 2202     		.2byte	0x222
 3388 03f0 00000000 		.4byte	.LFB41
 3389 03f4 1E000000 		.4byte	.LFE41-.LFB41
 3390 03f8 01       		.uleb128 0x1
 3391 03f9 9C       		.byte	0x9c
 3392 03fa 0E040000 		.4byte	0x40e
 3393 03fe 13       		.uleb128 0x13
 3394 03ff E1040000 		.4byte	.LASF51
 3395 0403 01       		.byte	0x1
 3396 0404 2202     		.2byte	0x222
 3397 0406 83000000 		.4byte	0x83
 3398 040a 02       		.uleb128 0x2
 3399 040b 91       		.byte	0x91
 3400 040c 74       		.sleb128 -12
 3401 040d 00       		.byte	0
 3402 040e 11       		.uleb128 0x11
 3403 040f CB000000 		.4byte	.LASF63
 3404 0413 01       		.byte	0x1
 3405 0414 5802     		.2byte	0x258
 3406 0416 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 111


 3407 041a 40000000 		.4byte	.LFE42-.LFB42
 3408 041e 01       		.uleb128 0x1
 3409 041f 9C       		.byte	0x9c
 3410 0420 41040000 		.4byte	0x441
 3411 0424 10       		.uleb128 0x10
 3412 0425 6900     		.ascii	"i\000"
 3413 0427 01       		.byte	0x1
 3414 0428 5A02     		.2byte	0x25a
 3415 042a 83000000 		.4byte	0x83
 3416 042e 02       		.uleb128 0x2
 3417 042f 91       		.byte	0x91
 3418 0430 74       		.sleb128 -12
 3419 0431 12       		.uleb128 0x12
 3420 0432 04010000 		.4byte	.LASF54
 3421 0436 01       		.byte	0x1
 3422 0437 5B02     		.2byte	0x25b
 3423 0439 83000000 		.4byte	0x83
 3424 043d 02       		.uleb128 0x2
 3425 043e 91       		.byte	0x91
 3426 043f 70       		.sleb128 -16
 3427 0440 00       		.byte	0
 3428 0441 11       		.uleb128 0x11
 3429 0442 8E020000 		.4byte	.LASF64
 3430 0446 01       		.byte	0x1
 3431 0447 8502     		.2byte	0x285
 3432 0449 00000000 		.4byte	.LFB43
 3433 044d 58000000 		.4byte	.LFE43-.LFB43
 3434 0451 01       		.uleb128 0x1
 3435 0452 9C       		.byte	0x9c
 3436 0453 B0040000 		.4byte	0x4b0
 3437 0457 13       		.uleb128 0x13
 3438 0458 51030000 		.4byte	.LASF60
 3439 045c 01       		.byte	0x1
 3440 045d 8502     		.2byte	0x285
 3441 045f 83000000 		.4byte	0x83
 3442 0463 02       		.uleb128 0x2
 3443 0464 91       		.byte	0x91
 3444 0465 5C       		.sleb128 -36
 3445 0466 12       		.uleb128 0x12
 3446 0467 65040000 		.4byte	.LASF65
 3447 046b 01       		.byte	0x1
 3448 046c 8702     		.2byte	0x287
 3449 046e 83000000 		.4byte	0x83
 3450 0472 02       		.uleb128 0x2
 3451 0473 91       		.byte	0x91
 3452 0474 70       		.sleb128 -16
 3453 0475 12       		.uleb128 0x12
 3454 0476 3B080000 		.4byte	.LASF66
 3455 047a 01       		.byte	0x1
 3456 047b 8802     		.2byte	0x288
 3457 047d 83000000 		.4byte	0x83
 3458 0481 02       		.uleb128 0x2
 3459 0482 91       		.byte	0x91
 3460 0483 6C       		.sleb128 -20
 3461 0484 12       		.uleb128 0x12
 3462 0485 E0070000 		.4byte	.LASF67
 3463 0489 01       		.byte	0x1
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 112


 3464 048a 8902     		.2byte	0x289
 3465 048c 83000000 		.4byte	0x83
 3466 0490 02       		.uleb128 0x2
 3467 0491 91       		.byte	0x91
 3468 0492 68       		.sleb128 -24
 3469 0493 10       		.uleb128 0x10
 3470 0494 6900     		.ascii	"i\000"
 3471 0496 01       		.byte	0x1
 3472 0497 8A02     		.2byte	0x28a
 3473 0499 83000000 		.4byte	0x83
 3474 049d 02       		.uleb128 0x2
 3475 049e 91       		.byte	0x91
 3476 049f 74       		.sleb128 -12
 3477 04a0 12       		.uleb128 0x12
 3478 04a1 04010000 		.4byte	.LASF54
 3479 04a5 01       		.byte	0x1
 3480 04a6 8B02     		.2byte	0x28b
 3481 04a8 83000000 		.4byte	0x83
 3482 04ac 02       		.uleb128 0x2
 3483 04ad 91       		.byte	0x91
 3484 04ae 64       		.sleb128 -28
 3485 04af 00       		.byte	0
 3486 04b0 14       		.uleb128 0x14
 3487 04b1 AB090000 		.4byte	.LASF70
 3488 04b5 01       		.byte	0x1
 3489 04b6 B602     		.2byte	0x2b6
 3490 04b8 77000000 		.4byte	0x77
 3491 04bc 00000000 		.4byte	.LFB44
 3492 04c0 1C000000 		.4byte	.LFE44-.LFB44
 3493 04c4 01       		.uleb128 0x1
 3494 04c5 9C       		.byte	0x9c
 3495 04c6 DA040000 		.4byte	0x4da
 3496 04ca 13       		.uleb128 0x13
 3497 04cb E1040000 		.4byte	.LASF51
 3498 04cf 01       		.byte	0x1
 3499 04d0 B602     		.2byte	0x2b6
 3500 04d2 83000000 		.4byte	0x83
 3501 04d6 02       		.uleb128 0x2
 3502 04d7 91       		.byte	0x91
 3503 04d8 74       		.sleb128 -12
 3504 04d9 00       		.byte	0
 3505 04da 15       		.uleb128 0x15
 3506 04db F7010000 		.4byte	.LASF68
 3507 04df 01       		.byte	0x1
 3508 04e0 D102     		.2byte	0x2d1
 3509 04e2 00000000 		.4byte	.LFB45
 3510 04e6 24000000 		.4byte	.LFE45-.LFB45
 3511 04ea 01       		.uleb128 0x1
 3512 04eb 9C       		.byte	0x9c
 3513 04ec 0F050000 		.4byte	0x50f
 3514 04f0 13       		.uleb128 0x13
 3515 04f1 E1040000 		.4byte	.LASF51
 3516 04f5 01       		.byte	0x1
 3517 04f6 D102     		.2byte	0x2d1
 3518 04f8 83000000 		.4byte	0x83
 3519 04fc 02       		.uleb128 0x2
 3520 04fd 91       		.byte	0x91
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 113


 3521 04fe 74       		.sleb128 -12
 3522 04ff 13       		.uleb128 0x13
 3523 0500 4C050000 		.4byte	.LASF69
 3524 0504 01       		.byte	0x1
 3525 0505 D102     		.2byte	0x2d1
 3526 0507 77000000 		.4byte	0x77
 3527 050b 02       		.uleb128 0x2
 3528 050c 91       		.byte	0x91
 3529 050d 72       		.sleb128 -14
 3530 050e 00       		.byte	0
 3531 050f 14       		.uleb128 0x14
 3532 0510 FD030000 		.4byte	.LASF71
 3533 0514 01       		.byte	0x1
 3534 0515 EC02     		.2byte	0x2ec
 3535 0517 6B000000 		.4byte	0x6b
 3536 051b 00000000 		.4byte	.LFB46
 3537 051f 1C000000 		.4byte	.LFE46-.LFB46
 3538 0523 01       		.uleb128 0x1
 3539 0524 9C       		.byte	0x9c
 3540 0525 39050000 		.4byte	0x539
 3541 0529 13       		.uleb128 0x13
 3542 052a E1040000 		.4byte	.LASF51
 3543 052e 01       		.byte	0x1
 3544 052f EC02     		.2byte	0x2ec
 3545 0531 83000000 		.4byte	0x83
 3546 0535 02       		.uleb128 0x2
 3547 0536 91       		.byte	0x91
 3548 0537 74       		.sleb128 -12
 3549 0538 00       		.byte	0
 3550 0539 15       		.uleb128 0x15
 3551 053a 2D020000 		.4byte	.LASF72
 3552 053e 01       		.byte	0x1
 3553 053f 0703     		.2byte	0x307
 3554 0541 00000000 		.4byte	.LFB47
 3555 0545 24000000 		.4byte	.LFE47-.LFB47
 3556 0549 01       		.uleb128 0x1
 3557 054a 9C       		.byte	0x9c
 3558 054b 6E050000 		.4byte	0x56e
 3559 054f 13       		.uleb128 0x13
 3560 0550 E1040000 		.4byte	.LASF51
 3561 0554 01       		.byte	0x1
 3562 0555 0703     		.2byte	0x307
 3563 0557 83000000 		.4byte	0x83
 3564 055b 02       		.uleb128 0x2
 3565 055c 91       		.byte	0x91
 3566 055d 74       		.sleb128 -12
 3567 055e 13       		.uleb128 0x13
 3568 055f DA030000 		.4byte	.LASF73
 3569 0563 01       		.byte	0x1
 3570 0564 0703     		.2byte	0x307
 3571 0566 6B000000 		.4byte	0x6b
 3572 056a 02       		.uleb128 0x2
 3573 056b 91       		.byte	0x91
 3574 056c 73       		.sleb128 -13
 3575 056d 00       		.byte	0
 3576 056e 14       		.uleb128 0x14
 3577 056f BA070000 		.4byte	.LASF74
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 114


 3578 0573 01       		.byte	0x1
 3579 0574 2203     		.2byte	0x322
 3580 0576 6B000000 		.4byte	0x6b
 3581 057a 00000000 		.4byte	.LFB48
 3582 057e 1C000000 		.4byte	.LFE48-.LFB48
 3583 0582 01       		.uleb128 0x1
 3584 0583 9C       		.byte	0x9c
 3585 0584 98050000 		.4byte	0x598
 3586 0588 13       		.uleb128 0x13
 3587 0589 51030000 		.4byte	.LASF60
 3588 058d 01       		.byte	0x1
 3589 058e 2203     		.2byte	0x322
 3590 0590 83000000 		.4byte	0x83
 3591 0594 02       		.uleb128 0x2
 3592 0595 91       		.byte	0x91
 3593 0596 74       		.sleb128 -12
 3594 0597 00       		.byte	0
 3595 0598 14       		.uleb128 0x14
 3596 0599 F0020000 		.4byte	.LASF75
 3597 059d 01       		.byte	0x1
 3598 059e 3D03     		.2byte	0x33d
 3599 05a0 6B000000 		.4byte	0x6b
 3600 05a4 00000000 		.4byte	.LFB49
 3601 05a8 1C000000 		.4byte	.LFE49-.LFB49
 3602 05ac 01       		.uleb128 0x1
 3603 05ad 9C       		.byte	0x9c
 3604 05ae C2050000 		.4byte	0x5c2
 3605 05b2 13       		.uleb128 0x13
 3606 05b3 51030000 		.4byte	.LASF60
 3607 05b7 01       		.byte	0x1
 3608 05b8 3D03     		.2byte	0x33d
 3609 05ba 83000000 		.4byte	0x83
 3610 05be 02       		.uleb128 0x2
 3611 05bf 91       		.byte	0x91
 3612 05c0 74       		.sleb128 -12
 3613 05c1 00       		.byte	0
 3614 05c2 14       		.uleb128 0x14
 3615 05c3 E0030000 		.4byte	.LASF76
 3616 05c7 01       		.byte	0x1
 3617 05c8 5903     		.2byte	0x359
 3618 05ca 6B000000 		.4byte	0x6b
 3619 05ce 00000000 		.4byte	.LFB50
 3620 05d2 1C000000 		.4byte	.LFE50-.LFB50
 3621 05d6 01       		.uleb128 0x1
 3622 05d7 9C       		.byte	0x9c
 3623 05d8 EC050000 		.4byte	0x5ec
 3624 05dc 13       		.uleb128 0x13
 3625 05dd 51030000 		.4byte	.LASF60
 3626 05e1 01       		.byte	0x1
 3627 05e2 5903     		.2byte	0x359
 3628 05e4 83000000 		.4byte	0x83
 3629 05e8 02       		.uleb128 0x2
 3630 05e9 91       		.byte	0x91
 3631 05ea 74       		.sleb128 -12
 3632 05eb 00       		.byte	0
 3633 05ec 14       		.uleb128 0x14
 3634 05ed 13050000 		.4byte	.LASF77
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 115


 3635 05f1 01       		.byte	0x1
 3636 05f2 7503     		.2byte	0x375
 3637 05f4 6B000000 		.4byte	0x6b
 3638 05f8 00000000 		.4byte	.LFB51
 3639 05fc 1C000000 		.4byte	.LFE51-.LFB51
 3640 0600 01       		.uleb128 0x1
 3641 0601 9C       		.byte	0x9c
 3642 0602 16060000 		.4byte	0x616
 3643 0606 13       		.uleb128 0x13
 3644 0607 51030000 		.4byte	.LASF60
 3645 060b 01       		.byte	0x1
 3646 060c 7503     		.2byte	0x375
 3647 060e 83000000 		.4byte	0x83
 3648 0612 02       		.uleb128 0x2
 3649 0613 91       		.byte	0x91
 3650 0614 74       		.sleb128 -12
 3651 0615 00       		.byte	0
 3652 0616 15       		.uleb128 0x15
 3653 0617 9F030000 		.4byte	.LASF78
 3654 061b 01       		.byte	0x1
 3655 061c 9603     		.2byte	0x396
 3656 061e 00000000 		.4byte	.LFB52
 3657 0622 24000000 		.4byte	.LFE52-.LFB52
 3658 0626 01       		.uleb128 0x1
 3659 0627 9C       		.byte	0x9c
 3660 0628 4B060000 		.4byte	0x64b
 3661 062c 13       		.uleb128 0x13
 3662 062d 51030000 		.4byte	.LASF60
 3663 0631 01       		.byte	0x1
 3664 0632 9603     		.2byte	0x396
 3665 0634 83000000 		.4byte	0x83
 3666 0638 02       		.uleb128 0x2
 3667 0639 91       		.byte	0x91
 3668 063a 74       		.sleb128 -12
 3669 063b 13       		.uleb128 0x13
 3670 063c DA030000 		.4byte	.LASF73
 3671 0640 01       		.byte	0x1
 3672 0641 9603     		.2byte	0x396
 3673 0643 6B000000 		.4byte	0x6b
 3674 0647 02       		.uleb128 0x2
 3675 0648 91       		.byte	0x91
 3676 0649 73       		.sleb128 -13
 3677 064a 00       		.byte	0
 3678 064b 15       		.uleb128 0x15
 3679 064c 73020000 		.4byte	.LASF79
 3680 0650 01       		.byte	0x1
 3681 0651 B203     		.2byte	0x3b2
 3682 0653 00000000 		.4byte	.LFB53
 3683 0657 24000000 		.4byte	.LFE53-.LFB53
 3684 065b 01       		.uleb128 0x1
 3685 065c 9C       		.byte	0x9c
 3686 065d 80060000 		.4byte	0x680
 3687 0661 13       		.uleb128 0x13
 3688 0662 51030000 		.4byte	.LASF60
 3689 0666 01       		.byte	0x1
 3690 0667 B203     		.2byte	0x3b2
 3691 0669 83000000 		.4byte	0x83
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 116


 3692 066d 02       		.uleb128 0x2
 3693 066e 91       		.byte	0x91
 3694 066f 74       		.sleb128 -12
 3695 0670 13       		.uleb128 0x13
 3696 0671 DA030000 		.4byte	.LASF73
 3697 0675 01       		.byte	0x1
 3698 0676 B203     		.2byte	0x3b2
 3699 0678 6B000000 		.4byte	0x6b
 3700 067c 02       		.uleb128 0x2
 3701 067d 91       		.byte	0x91
 3702 067e 73       		.sleb128 -13
 3703 067f 00       		.byte	0
 3704 0680 15       		.uleb128 0x15
 3705 0681 9D070000 		.4byte	.LASF80
 3706 0685 01       		.byte	0x1
 3707 0686 CE03     		.2byte	0x3ce
 3708 0688 00000000 		.4byte	.LFB54
 3709 068c 24000000 		.4byte	.LFE54-.LFB54
 3710 0690 01       		.uleb128 0x1
 3711 0691 9C       		.byte	0x9c
 3712 0692 B5060000 		.4byte	0x6b5
 3713 0696 13       		.uleb128 0x13
 3714 0697 51030000 		.4byte	.LASF60
 3715 069b 01       		.byte	0x1
 3716 069c CE03     		.2byte	0x3ce
 3717 069e 83000000 		.4byte	0x83
 3718 06a2 02       		.uleb128 0x2
 3719 06a3 91       		.byte	0x91
 3720 06a4 74       		.sleb128 -12
 3721 06a5 13       		.uleb128 0x13
 3722 06a6 DA030000 		.4byte	.LASF73
 3723 06aa 01       		.byte	0x1
 3724 06ab CE03     		.2byte	0x3ce
 3725 06ad 6B000000 		.4byte	0x6b
 3726 06b1 02       		.uleb128 0x2
 3727 06b2 91       		.byte	0x91
 3728 06b3 73       		.sleb128 -13
 3729 06b4 00       		.byte	0
 3730 06b5 15       		.uleb128 0x15
 3731 06b6 56070000 		.4byte	.LASF81
 3732 06ba 01       		.byte	0x1
 3733 06bb EB03     		.2byte	0x3eb
 3734 06bd 00000000 		.4byte	.LFB55
 3735 06c1 24000000 		.4byte	.LFE55-.LFB55
 3736 06c5 01       		.uleb128 0x1
 3737 06c6 9C       		.byte	0x9c
 3738 06c7 EA060000 		.4byte	0x6ea
 3739 06cb 13       		.uleb128 0x13
 3740 06cc 51030000 		.4byte	.LASF60
 3741 06d0 01       		.byte	0x1
 3742 06d1 EB03     		.2byte	0x3eb
 3743 06d3 83000000 		.4byte	0x83
 3744 06d7 02       		.uleb128 0x2
 3745 06d8 91       		.byte	0x91
 3746 06d9 74       		.sleb128 -12
 3747 06da 13       		.uleb128 0x13
 3748 06db DA030000 		.4byte	.LASF73
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 117


 3749 06df 01       		.byte	0x1
 3750 06e0 EB03     		.2byte	0x3eb
 3751 06e2 6B000000 		.4byte	0x6b
 3752 06e6 02       		.uleb128 0x2
 3753 06e7 91       		.byte	0x91
 3754 06e8 73       		.sleb128 -13
 3755 06e9 00       		.byte	0
 3756 06ea 15       		.uleb128 0x15
 3757 06eb 25090000 		.4byte	.LASF82
 3758 06ef 01       		.byte	0x1
 3759 06f0 0704     		.2byte	0x407
 3760 06f2 00000000 		.4byte	.LFB56
 3761 06f6 24000000 		.4byte	.LFE56-.LFB56
 3762 06fa 01       		.uleb128 0x1
 3763 06fb 9C       		.byte	0x9c
 3764 06fc 1F070000 		.4byte	0x71f
 3765 0700 13       		.uleb128 0x13
 3766 0701 51030000 		.4byte	.LASF60
 3767 0705 01       		.byte	0x1
 3768 0706 0704     		.2byte	0x407
 3769 0708 83000000 		.4byte	0x83
 3770 070c 02       		.uleb128 0x2
 3771 070d 91       		.byte	0x91
 3772 070e 74       		.sleb128 -12
 3773 070f 13       		.uleb128 0x13
 3774 0710 DA030000 		.4byte	.LASF73
 3775 0714 01       		.byte	0x1
 3776 0715 0704     		.2byte	0x407
 3777 0717 6B000000 		.4byte	0x6b
 3778 071b 02       		.uleb128 0x2
 3779 071c 91       		.byte	0x91
 3780 071d 73       		.sleb128 -13
 3781 071e 00       		.byte	0
 3782 071f 15       		.uleb128 0x15
 3783 0720 C4090000 		.4byte	.LASF83
 3784 0724 01       		.byte	0x1
 3785 0725 2304     		.2byte	0x423
 3786 0727 00000000 		.4byte	.LFB57
 3787 072b 24000000 		.4byte	.LFE57-.LFB57
 3788 072f 01       		.uleb128 0x1
 3789 0730 9C       		.byte	0x9c
 3790 0731 54070000 		.4byte	0x754
 3791 0735 13       		.uleb128 0x13
 3792 0736 E1040000 		.4byte	.LASF51
 3793 073a 01       		.byte	0x1
 3794 073b 2304     		.2byte	0x423
 3795 073d 83000000 		.4byte	0x83
 3796 0741 02       		.uleb128 0x2
 3797 0742 91       		.byte	0x91
 3798 0743 74       		.sleb128 -12
 3799 0744 13       		.uleb128 0x13
 3800 0745 DA030000 		.4byte	.LASF73
 3801 0749 01       		.byte	0x1
 3802 074a 2304     		.2byte	0x423
 3803 074c 6B000000 		.4byte	0x6b
 3804 0750 02       		.uleb128 0x2
 3805 0751 91       		.byte	0x91
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 118


 3806 0752 73       		.sleb128 -13
 3807 0753 00       		.byte	0
 3808 0754 16       		.uleb128 0x16
 3809 0755 1E060000 		.4byte	.LASF84
 3810 0759 01       		.byte	0x1
 3811 075a 5104     		.2byte	0x451
 3812 075c 83000000 		.4byte	0x83
 3813 0760 00000000 		.4byte	.LFB58
 3814 0764 3C010000 		.4byte	.LFE58-.LFB58
 3815 0768 01       		.uleb128 0x1
 3816 0769 9C       		.byte	0x9c
 3817 076a DB070000 		.4byte	0x7db
 3818 076e 13       		.uleb128 0x13
 3819 076f E1040000 		.4byte	.LASF51
 3820 0773 01       		.byte	0x1
 3821 0774 5104     		.2byte	0x451
 3822 0776 83000000 		.4byte	0x83
 3823 077a 02       		.uleb128 0x2
 3824 077b 91       		.byte	0x91
 3825 077c 6C       		.sleb128 -20
 3826 077d 12       		.uleb128 0x12
 3827 077e 51030000 		.4byte	.LASF60
 3828 0782 01       		.byte	0x1
 3829 0783 5304     		.2byte	0x453
 3830 0785 6B000000 		.4byte	0x6b
 3831 0789 02       		.uleb128 0x2
 3832 078a 91       		.byte	0x91
 3833 078b 77       		.sleb128 -9
 3834 078c 12       		.uleb128 0x12
 3835 078d 0A060000 		.4byte	.LASF85
 3836 0791 01       		.byte	0x1
 3837 0792 5404     		.2byte	0x454
 3838 0794 6B000000 		.4byte	0x6b
 3839 0798 02       		.uleb128 0x2
 3840 0799 91       		.byte	0x91
 3841 079a 74       		.sleb128 -12
 3842 079b 12       		.uleb128 0x12
 3843 079c 7D090000 		.4byte	.LASF86
 3844 07a0 01       		.byte	0x1
 3845 07a1 5504     		.2byte	0x455
 3846 07a3 6B000000 		.4byte	0x6b
 3847 07a7 02       		.uleb128 0x2
 3848 07a8 91       		.byte	0x91
 3849 07a9 73       		.sleb128 -13
 3850 07aa 12       		.uleb128 0x12
 3851 07ab 3A090000 		.4byte	.LASF87
 3852 07af 01       		.byte	0x1
 3853 07b0 5704     		.2byte	0x457
 3854 07b2 6B000000 		.4byte	0x6b
 3855 07b6 02       		.uleb128 0x2
 3856 07b7 91       		.byte	0x91
 3857 07b8 76       		.sleb128 -10
 3858 07b9 12       		.uleb128 0x12
 3859 07ba 4A040000 		.4byte	.LASF88
 3860 07be 01       		.byte	0x1
 3861 07bf 5804     		.2byte	0x458
 3862 07c1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 119


 3863 07c5 02       		.uleb128 0x2
 3864 07c6 91       		.byte	0x91
 3865 07c7 75       		.sleb128 -11
 3866 07c8 12       		.uleb128 0x12
 3867 07c9 2F000000 		.4byte	.LASF89
 3868 07cd 01       		.byte	0x1
 3869 07ce 5904     		.2byte	0x459
 3870 07d0 DB070000 		.4byte	0x7db
 3871 07d4 05       		.uleb128 0x5
 3872 07d5 03       		.byte	0x3
 3873 07d6 20000000 		.4byte	CapSense_debounceCounter.5404
 3874 07da 00       		.byte	0
 3875 07db 17       		.uleb128 0x17
 3876 07dc 6B000000 		.4byte	0x6b
 3877 07e0 EB070000 		.4byte	0x7eb
 3878 07e4 18       		.uleb128 0x18
 3879 07e5 BC000000 		.4byte	0xbc
 3880 07e9 00       		.byte	0
 3881 07ea 00       		.byte	0
 3882 07eb 16       		.uleb128 0x16
 3883 07ec AF0A0000 		.4byte	.LASF90
 3884 07f0 01       		.byte	0x1
 3885 07f1 A804     		.2byte	0x4a8
 3886 07f3 83000000 		.4byte	0x83
 3887 07f7 00000000 		.4byte	.LFB59
 3888 07fb 42000000 		.4byte	.LFE59-.LFB59
 3889 07ff 01       		.uleb128 0x1
 3890 0800 9C       		.byte	0x9c
 3891 0801 42080000 		.4byte	0x842
 3892 0805 13       		.uleb128 0x13
 3893 0806 51030000 		.4byte	.LASF60
 3894 080a 01       		.byte	0x1
 3895 080b A804     		.2byte	0x4a8
 3896 080d 83000000 		.4byte	0x83
 3897 0811 02       		.uleb128 0x2
 3898 0812 91       		.byte	0x91
 3899 0813 64       		.sleb128 -28
 3900 0814 12       		.uleb128 0x12
 3901 0815 6B050000 		.4byte	.LASF91
 3902 0819 01       		.byte	0x1
 3903 081a AA04     		.2byte	0x4aa
 3904 081c 83000000 		.4byte	0x83
 3905 0820 02       		.uleb128 0x2
 3906 0821 91       		.byte	0x91
 3907 0822 74       		.sleb128 -12
 3908 0823 12       		.uleb128 0x12
 3909 0824 14010000 		.4byte	.LASF92
 3910 0828 01       		.byte	0x1
 3911 0829 AB04     		.2byte	0x4ab
 3912 082b 83000000 		.4byte	0x83
 3913 082f 02       		.uleb128 0x2
 3914 0830 91       		.byte	0x91
 3915 0831 6C       		.sleb128 -20
 3916 0832 12       		.uleb128 0x12
 3917 0833 060A0000 		.4byte	.LASF93
 3918 0837 01       		.byte	0x1
 3919 0838 AC04     		.2byte	0x4ac
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 120


 3920 083a 83000000 		.4byte	0x83
 3921 083e 02       		.uleb128 0x2
 3922 083f 91       		.byte	0x91
 3923 0840 70       		.sleb128 -16
 3924 0841 00       		.byte	0
 3925 0842 16       		.uleb128 0x16
 3926 0843 76040000 		.4byte	.LASF94
 3927 0847 01       		.byte	0x1
 3928 0848 D604     		.2byte	0x4d6
 3929 084a 83000000 		.4byte	0x83
 3930 084e 00000000 		.4byte	.LFB60
 3931 0852 36000000 		.4byte	.LFE60-.LFB60
 3932 0856 01       		.uleb128 0x1
 3933 0857 9C       		.byte	0x9c
 3934 0858 79080000 		.4byte	0x879
 3935 085c 10       		.uleb128 0x10
 3936 085d 6900     		.ascii	"i\000"
 3937 085f 01       		.byte	0x1
 3938 0860 D904     		.2byte	0x4d9
 3939 0862 83000000 		.4byte	0x83
 3940 0866 02       		.uleb128 0x2
 3941 0867 91       		.byte	0x91
 3942 0868 74       		.sleb128 -12
 3943 0869 12       		.uleb128 0x12
 3944 086a 060A0000 		.4byte	.LASF93
 3945 086e 01       		.byte	0x1
 3946 086f DA04     		.2byte	0x4da
 3947 0871 83000000 		.4byte	0x83
 3948 0875 02       		.uleb128 0x2
 3949 0876 91       		.byte	0x91
 3950 0877 70       		.sleb128 -16
 3951 0878 00       		.byte	0
 3952 0879 11       		.uleb128 0x11
 3953 087a F8040000 		.4byte	.LASF95
 3954 087e 01       		.byte	0x1
 3955 087f 0505     		.2byte	0x505
 3956 0881 00000000 		.4byte	.LFB61
 3957 0885 5C000000 		.4byte	.LFE61-.LFB61
 3958 0889 01       		.uleb128 0x1
 3959 088a 9C       		.byte	0x9c
 3960 088b BD080000 		.4byte	0x8bd
 3961 088f 13       		.uleb128 0x13
 3962 0890 51030000 		.4byte	.LASF60
 3963 0894 01       		.byte	0x1
 3964 0895 0505     		.2byte	0x505
 3965 0897 83000000 		.4byte	0x83
 3966 089b 02       		.uleb128 0x2
 3967 089c 91       		.byte	0x91
 3968 089d 6C       		.sleb128 -20
 3969 089e 12       		.uleb128 0x12
 3970 089f 6B050000 		.4byte	.LASF91
 3971 08a3 01       		.byte	0x1
 3972 08a4 0805     		.2byte	0x508
 3973 08a6 6B000000 		.4byte	0x6b
 3974 08aa 02       		.uleb128 0x2
 3975 08ab 91       		.byte	0x91
 3976 08ac 77       		.sleb128 -9
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 121


 3977 08ad 12       		.uleb128 0x12
 3978 08ae 14010000 		.4byte	.LASF92
 3979 08b2 01       		.byte	0x1
 3980 08b3 0905     		.2byte	0x509
 3981 08b5 6B000000 		.4byte	0x6b
 3982 08b9 02       		.uleb128 0x2
 3983 08ba 91       		.byte	0x91
 3984 08bb 76       		.sleb128 -10
 3985 08bc 00       		.byte	0
 3986 08bd 11       		.uleb128 0x11
 3987 08be B4000000 		.4byte	.LASF96
 3988 08c2 01       		.byte	0x1
 3989 08c3 3005     		.2byte	0x530
 3990 08c5 00000000 		.4byte	.LFB62
 3991 08c9 5C000000 		.4byte	.LFE62-.LFB62
 3992 08cd 01       		.uleb128 0x1
 3993 08ce 9C       		.byte	0x9c
 3994 08cf 01090000 		.4byte	0x901
 3995 08d3 13       		.uleb128 0x13
 3996 08d4 51030000 		.4byte	.LASF60
 3997 08d8 01       		.byte	0x1
 3998 08d9 3005     		.2byte	0x530
 3999 08db 83000000 		.4byte	0x83
 4000 08df 02       		.uleb128 0x2
 4001 08e0 91       		.byte	0x91
 4002 08e1 6C       		.sleb128 -20
 4003 08e2 12       		.uleb128 0x12
 4004 08e3 6B050000 		.4byte	.LASF91
 4005 08e7 01       		.byte	0x1
 4006 08e8 3205     		.2byte	0x532
 4007 08ea 6B000000 		.4byte	0x6b
 4008 08ee 02       		.uleb128 0x2
 4009 08ef 91       		.byte	0x91
 4010 08f0 77       		.sleb128 -9
 4011 08f1 12       		.uleb128 0x12
 4012 08f2 14010000 		.4byte	.LASF92
 4013 08f6 01       		.byte	0x1
 4014 08f7 3305     		.2byte	0x533
 4015 08f9 6B000000 		.4byte	0x6b
 4016 08fd 02       		.uleb128 0x2
 4017 08fe 91       		.byte	0x91
 4018 08ff 76       		.sleb128 -10
 4019 0900 00       		.byte	0
 4020 0901 14       		.uleb128 0x14
 4021 0902 4C080000 		.4byte	.LASF97
 4022 0906 01       		.byte	0x1
 4023 0907 6205     		.2byte	0x562
 4024 0909 6B000000 		.4byte	0x6b
 4025 090d 00000000 		.4byte	.LFB63
 4026 0911 B8000000 		.4byte	.LFE63-.LFB63
 4027 0915 01       		.uleb128 0x1
 4028 0916 9C       		.byte	0x9c
 4029 0917 83090000 		.4byte	0x983
 4030 091b 13       		.uleb128 0x13
 4031 091c 1C040000 		.4byte	.LASF98
 4032 0920 01       		.byte	0x1
 4033 0921 6205     		.2byte	0x562
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 122


 4034 0923 6B000000 		.4byte	0x6b
 4035 0927 02       		.uleb128 0x2
 4036 0928 91       		.byte	0x91
 4037 0929 67       		.sleb128 -25
 4038 092a 13       		.uleb128 0x13
 4039 092b CC020000 		.4byte	.LASF99
 4040 092f 01       		.byte	0x1
 4041 0930 6205     		.2byte	0x562
 4042 0932 6B000000 		.4byte	0x6b
 4043 0936 02       		.uleb128 0x2
 4044 0937 91       		.byte	0x91
 4045 0938 66       		.sleb128 -26
 4046 0939 13       		.uleb128 0x13
 4047 093a 3A090000 		.4byte	.LASF87
 4048 093e 01       		.byte	0x1
 4049 093f 6205     		.2byte	0x562
 4050 0941 6B000000 		.4byte	0x6b
 4051 0945 02       		.uleb128 0x2
 4052 0946 91       		.byte	0x91
 4053 0947 65       		.sleb128 -27
 4054 0948 10       		.uleb128 0x10
 4055 0949 6900     		.ascii	"i\000"
 4056 094b 01       		.byte	0x1
 4057 094c 6505     		.2byte	0x565
 4058 094e 6B000000 		.4byte	0x6b
 4059 0952 02       		.uleb128 0x2
 4060 0953 91       		.byte	0x91
 4061 0954 6F       		.sleb128 -17
 4062 0955 12       		.uleb128 0x12
 4063 0956 D8080000 		.4byte	.LASF100
 4064 095a 01       		.byte	0x1
 4065 095b 6F05     		.2byte	0x56f
 4066 095d 6B000000 		.4byte	0x6b
 4067 0961 02       		.uleb128 0x2
 4068 0962 91       		.byte	0x91
 4069 0963 6E       		.sleb128 -18
 4070 0964 12       		.uleb128 0x12
 4071 0965 47080000 		.4byte	.LASF101
 4072 0969 01       		.byte	0x1
 4073 096a 7105     		.2byte	0x571
 4074 096c 6B000000 		.4byte	0x6b
 4075 0970 02       		.uleb128 0x2
 4076 0971 91       		.byte	0x91
 4077 0972 6D       		.sleb128 -19
 4078 0973 12       		.uleb128 0x12
 4079 0974 8F070000 		.4byte	.LASF102
 4080 0978 01       		.byte	0x1
 4081 0979 7205     		.2byte	0x572
 4082 097b E0010000 		.4byte	0x1e0
 4083 097f 02       		.uleb128 0x2
 4084 0980 91       		.byte	0x91
 4085 0981 68       		.sleb128 -24
 4086 0982 00       		.byte	0
 4087 0983 16       		.uleb128 0x16
 4088 0984 03070000 		.4byte	.LASF103
 4089 0988 01       		.byte	0x1
 4090 0989 0106     		.2byte	0x601
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 123


 4091 098b 6B000000 		.4byte	0x6b
 4092 098f 00000000 		.4byte	.LFB64
 4093 0993 A0010000 		.4byte	.LFE64-.LFB64
 4094 0997 01       		.uleb128 0x1
 4095 0998 9C       		.byte	0x9c
 4096 0999 550A0000 		.4byte	0xa55
 4097 099d 13       		.uleb128 0x13
 4098 099e D8080000 		.4byte	.LASF100
 4099 09a2 01       		.byte	0x1
 4100 09a3 0106     		.2byte	0x601
 4101 09a5 6B000000 		.4byte	0x6b
 4102 09a9 02       		.uleb128 0x2
 4103 09aa 91       		.byte	0x91
 4104 09ab 57       		.sleb128 -41
 4105 09ac 13       		.uleb128 0x13
 4106 09ad 1C040000 		.4byte	.LASF98
 4107 09b1 01       		.byte	0x1
 4108 09b2 0106     		.2byte	0x601
 4109 09b4 6B000000 		.4byte	0x6b
 4110 09b8 02       		.uleb128 0x2
 4111 09b9 91       		.byte	0x91
 4112 09ba 56       		.sleb128 -42
 4113 09bb 13       		.uleb128 0x13
 4114 09bc CC020000 		.4byte	.LASF99
 4115 09c0 01       		.byte	0x1
 4116 09c1 0206     		.2byte	0x602
 4117 09c3 6B000000 		.4byte	0x6b
 4118 09c7 02       		.uleb128 0x2
 4119 09c8 91       		.byte	0x91
 4120 09c9 55       		.sleb128 -43
 4121 09ca 13       		.uleb128 0x13
 4122 09cb 60050000 		.4byte	.LASF104
 4123 09cf 01       		.byte	0x1
 4124 09d0 0206     		.2byte	0x602
 4125 09d2 77000000 		.4byte	0x77
 4126 09d6 02       		.uleb128 0x2
 4127 09d7 91       		.byte	0x91
 4128 09d8 52       		.sleb128 -46
 4129 09d9 13       		.uleb128 0x13
 4130 09da 04090000 		.4byte	.LASF61
 4131 09de 01       		.byte	0x1
 4132 09df 0206     		.2byte	0x602
 4133 09e1 6B000000 		.4byte	0x6b
 4134 09e5 02       		.uleb128 0x2
 4135 09e6 91       		.byte	0x91
 4136 09e7 00       		.sleb128 0
 4137 09e8 12       		.uleb128 0x12
 4138 09e9 F9070000 		.4byte	.LASF105
 4139 09ed 01       		.byte	0x1
 4140 09ee 0606     		.2byte	0x606
 4141 09f0 6B000000 		.4byte	0x6b
 4142 09f4 02       		.uleb128 0x2
 4143 09f5 91       		.byte	0x91
 4144 09f6 6F       		.sleb128 -17
 4145 09f7 12       		.uleb128 0x12
 4146 09f8 3E010000 		.4byte	.LASF106
 4147 09fc 01       		.byte	0x1
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 124


 4148 09fd 0706     		.2byte	0x607
 4149 09ff 6B000000 		.4byte	0x6b
 4150 0a03 02       		.uleb128 0x2
 4151 0a04 91       		.byte	0x91
 4152 0a05 67       		.sleb128 -25
 4153 0a06 12       		.uleb128 0x12
 4154 0a07 74050000 		.4byte	.LASF107
 4155 0a0b 01       		.byte	0x1
 4156 0a0c 0C06     		.2byte	0x60c
 4157 0a0e 550A0000 		.4byte	0xa55
 4158 0a12 05       		.uleb128 0x5
 4159 0a13 03       		.byte	0x3
 4160 0a14 24000000 		.4byte	CapSense_centroid.5456
 4161 0a18 12       		.uleb128 0x12
 4162 0a19 180B0000 		.4byte	.LASF108
 4163 0a1d 01       		.byte	0x1
 4164 0a1e 1306     		.2byte	0x613
 4165 0a20 6B000000 		.4byte	0x6b
 4166 0a24 02       		.uleb128 0x2
 4167 0a25 91       		.byte	0x91
 4168 0a26 5B       		.sleb128 -37
 4169 0a27 12       		.uleb128 0x12
 4170 0a28 D6070000 		.4byte	.LASF109
 4171 0a2c 01       		.byte	0x1
 4172 0a2d 1406     		.2byte	0x614
 4173 0a2f 83000000 		.4byte	0x83
 4174 0a33 02       		.uleb128 0x2
 4175 0a34 91       		.byte	0x91
 4176 0a35 60       		.sleb128 -32
 4177 0a36 12       		.uleb128 0x12
 4178 0a37 AA080000 		.4byte	.LASF110
 4179 0a3b 01       		.byte	0x1
 4180 0a3c 1506     		.2byte	0x615
 4181 0a3e 9B000000 		.4byte	0x9b
 4182 0a42 02       		.uleb128 0x2
 4183 0a43 91       		.byte	0x91
 4184 0a44 5C       		.sleb128 -36
 4185 0a45 12       		.uleb128 0x12
 4186 0a46 8F070000 		.4byte	.LASF102
 4187 0a4a 01       		.byte	0x1
 4188 0a4b 1706     		.2byte	0x617
 4189 0a4d E0010000 		.4byte	0x1e0
 4190 0a51 02       		.uleb128 0x2
 4191 0a52 91       		.byte	0x91
 4192 0a53 68       		.sleb128 -24
 4193 0a54 00       		.byte	0
 4194 0a55 17       		.uleb128 0x17
 4195 0a56 6B000000 		.4byte	0x6b
 4196 0a5a 650A0000 		.4byte	0xa65
 4197 0a5e 18       		.uleb128 0x18
 4198 0a5f BC000000 		.4byte	0xbc
 4199 0a63 02       		.byte	0x2
 4200 0a64 00       		.byte	0
 4201 0a65 16       		.uleb128 0x16
 4202 0a66 01080000 		.4byte	.LASF111
 4203 0a6a 01       		.byte	0x1
 4204 0a6b D406     		.2byte	0x6d4
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 125


 4205 0a6d 77000000 		.4byte	0x77
 4206 0a71 00000000 		.4byte	.LFB65
 4207 0a75 5C010000 		.4byte	.LFE65-.LFB65
 4208 0a79 01       		.uleb128 0x1
 4209 0a7a 9C       		.byte	0x9c
 4210 0a7b F80A0000 		.4byte	0xaf8
 4211 0a7f 13       		.uleb128 0x13
 4212 0a80 51030000 		.4byte	.LASF60
 4213 0a84 01       		.byte	0x1
 4214 0a85 D406     		.2byte	0x6d4
 4215 0a87 83000000 		.4byte	0x83
 4216 0a8b 02       		.uleb128 0x2
 4217 0a8c 91       		.byte	0x91
 4218 0a8d 64       		.sleb128 -28
 4219 0a8e 12       		.uleb128 0x12
 4220 0a8f EB000000 		.4byte	.LASF112
 4221 0a93 01       		.byte	0x1
 4222 0a94 DB06     		.2byte	0x6db
 4223 0a96 6B000000 		.4byte	0x6b
 4224 0a9a 02       		.uleb128 0x2
 4225 0a9b 91       		.byte	0x91
 4226 0a9c 68       		.sleb128 -24
 4227 0a9d 12       		.uleb128 0x12
 4228 0a9e 80070000 		.4byte	.LASF113
 4229 0aa2 01       		.byte	0x1
 4230 0aa3 DC06     		.2byte	0x6dc
 4231 0aa5 6B000000 		.4byte	0x6b
 4232 0aa9 02       		.uleb128 0x2
 4233 0aaa 91       		.byte	0x91
 4234 0aab 6D       		.sleb128 -19
 4235 0aac 12       		.uleb128 0x12
 4236 0aad E1020000 		.4byte	.LASF114
 4237 0ab1 01       		.byte	0x1
 4238 0ab2 DD06     		.2byte	0x6dd
 4239 0ab4 6B000000 		.4byte	0x6b
 4240 0ab8 02       		.uleb128 0x2
 4241 0ab9 91       		.byte	0x91
 4242 0aba 6C       		.sleb128 -20
 4243 0abb 12       		.uleb128 0x12
 4244 0abc D8080000 		.4byte	.LASF100
 4245 0ac0 01       		.byte	0x1
 4246 0ac1 E706     		.2byte	0x6e7
 4247 0ac3 6B000000 		.4byte	0x6b
 4248 0ac7 02       		.uleb128 0x2
 4249 0ac8 91       		.byte	0x91
 4250 0ac9 69       		.sleb128 -23
 4251 0aca 12       		.uleb128 0x12
 4252 0acb 180B0000 		.4byte	.LASF108
 4253 0acf 01       		.byte	0x1
 4254 0ad0 E806     		.2byte	0x6e8
 4255 0ad2 77000000 		.4byte	0x77
 4256 0ad6 02       		.uleb128 0x2
 4257 0ad7 91       		.byte	0x91
 4258 0ad8 6E       		.sleb128 -18
 4259 0ad9 12       		.uleb128 0x12
 4260 0ada 1C040000 		.4byte	.LASF98
 4261 0ade 01       		.byte	0x1
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 126


 4262 0adf E906     		.2byte	0x6e9
 4263 0ae1 6B000000 		.4byte	0x6b
 4264 0ae5 02       		.uleb128 0x2
 4265 0ae6 91       		.byte	0x91
 4266 0ae7 6B       		.sleb128 -21
 4267 0ae8 12       		.uleb128 0x12
 4268 0ae9 CC020000 		.4byte	.LASF99
 4269 0aed 01       		.byte	0x1
 4270 0aee EA06     		.2byte	0x6ea
 4271 0af0 6B000000 		.4byte	0x6b
 4272 0af4 02       		.uleb128 0x2
 4273 0af5 91       		.byte	0x91
 4274 0af6 6A       		.sleb128 -22
 4275 0af7 00       		.byte	0
 4276 0af8 16       		.uleb128 0x16
 4277 0af9 4F0A0000 		.4byte	.LASF115
 4278 0afd 01       		.byte	0x1
 4279 0afe 9F07     		.2byte	0x79f
 4280 0b00 77000000 		.4byte	0x77
 4281 0b04 00000000 		.4byte	.LFB66
 4282 0b08 98000000 		.4byte	.LFE66-.LFB66
 4283 0b0c 01       		.uleb128 0x1
 4284 0b0d 9C       		.byte	0x9c
 4285 0b0e 5E0B0000 		.4byte	0xb5e
 4286 0b12 13       		.uleb128 0x13
 4287 0b13 51030000 		.4byte	.LASF60
 4288 0b17 01       		.byte	0x1
 4289 0b18 9F07     		.2byte	0x79f
 4290 0b1a 83000000 		.4byte	0x83
 4291 0b1e 02       		.uleb128 0x2
 4292 0b1f 91       		.byte	0x91
 4293 0b20 64       		.sleb128 -28
 4294 0b21 12       		.uleb128 0x12
 4295 0b22 D8080000 		.4byte	.LASF100
 4296 0b26 01       		.byte	0x1
 4297 0b27 AE07     		.2byte	0x7ae
 4298 0b29 6B000000 		.4byte	0x6b
 4299 0b2d 02       		.uleb128 0x2
 4300 0b2e 91       		.byte	0x91
 4301 0b2f 6B       		.sleb128 -21
 4302 0b30 12       		.uleb128 0x12
 4303 0b31 180B0000 		.4byte	.LASF108
 4304 0b35 01       		.byte	0x1
 4305 0b36 AF07     		.2byte	0x7af
 4306 0b38 77000000 		.4byte	0x77
 4307 0b3c 02       		.uleb128 0x2
 4308 0b3d 91       		.byte	0x91
 4309 0b3e 6E       		.sleb128 -18
 4310 0b3f 12       		.uleb128 0x12
 4311 0b40 1C040000 		.4byte	.LASF98
 4312 0b44 01       		.byte	0x1
 4313 0b45 B007     		.2byte	0x7b0
 4314 0b47 6B000000 		.4byte	0x6b
 4315 0b4b 02       		.uleb128 0x2
 4316 0b4c 91       		.byte	0x91
 4317 0b4d 6D       		.sleb128 -19
 4318 0b4e 12       		.uleb128 0x12
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 127


 4319 0b4f CC020000 		.4byte	.LASF99
 4320 0b53 01       		.byte	0x1
 4321 0b54 B107     		.2byte	0x7b1
 4322 0b56 6B000000 		.4byte	0x6b
 4323 0b5a 02       		.uleb128 0x2
 4324 0b5b 91       		.byte	0x91
 4325 0b5c 6C       		.sleb128 -20
 4326 0b5d 00       		.byte	0
 4327 0b5e 14       		.uleb128 0x14
 4328 0b5f 7C0A0000 		.4byte	.LASF116
 4329 0b63 01       		.byte	0x1
 4330 0b64 4C09     		.2byte	0x94c
 4331 0b66 77000000 		.4byte	0x77
 4332 0b6a 00000000 		.4byte	.LFB67
 4333 0b6e 76000000 		.4byte	.LFE67-.LFB67
 4334 0b72 01       		.uleb128 0x1
 4335 0b73 9C       		.byte	0x9c
 4336 0b74 B20B0000 		.4byte	0xbb2
 4337 0b78 19       		.uleb128 0x19
 4338 0b79 783100   		.ascii	"x1\000"
 4339 0b7c 01       		.byte	0x1
 4340 0b7d 4C09     		.2byte	0x94c
 4341 0b7f 77000000 		.4byte	0x77
 4342 0b83 02       		.uleb128 0x2
 4343 0b84 91       		.byte	0x91
 4344 0b85 66       		.sleb128 -26
 4345 0b86 19       		.uleb128 0x19
 4346 0b87 783200   		.ascii	"x2\000"
 4347 0b8a 01       		.byte	0x1
 4348 0b8b 4C09     		.2byte	0x94c
 4349 0b8d 77000000 		.4byte	0x77
 4350 0b91 02       		.uleb128 0x2
 4351 0b92 91       		.byte	0x91
 4352 0b93 64       		.sleb128 -28
 4353 0b94 19       		.uleb128 0x19
 4354 0b95 783300   		.ascii	"x3\000"
 4355 0b98 01       		.byte	0x1
 4356 0b99 4C09     		.2byte	0x94c
 4357 0b9b 77000000 		.4byte	0x77
 4358 0b9f 02       		.uleb128 0x2
 4359 0ba0 91       		.byte	0x91
 4360 0ba1 62       		.sleb128 -30
 4361 0ba2 10       		.uleb128 0x10
 4362 0ba3 746D7000 		.ascii	"tmp\000"
 4363 0ba7 01       		.byte	0x1
 4364 0ba8 4E09     		.2byte	0x94e
 4365 0baa 77000000 		.4byte	0x77
 4366 0bae 02       		.uleb128 0x2
 4367 0baf 91       		.byte	0x91
 4368 0bb0 6E       		.sleb128 -18
 4369 0bb1 00       		.byte	0
 4370 0bb2 14       		.uleb128 0x14
 4371 0bb3 1B000000 		.4byte	.LASF117
 4372 0bb7 01       		.byte	0x1
 4373 0bb8 C409     		.2byte	0x9c4
 4374 0bba 77000000 		.4byte	0x77
 4375 0bbe 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 128


 4376 0bc2 3C000000 		.4byte	.LFE68-.LFB68
 4377 0bc6 01       		.uleb128 0x1
 4378 0bc7 9C       		.byte	0x9c
 4379 0bc8 F80B0000 		.4byte	0xbf8
 4380 0bcc 19       		.uleb128 0x19
 4381 0bcd 783100   		.ascii	"x1\000"
 4382 0bd0 01       		.byte	0x1
 4383 0bd1 C409     		.2byte	0x9c4
 4384 0bd3 77000000 		.4byte	0x77
 4385 0bd7 02       		.uleb128 0x2
 4386 0bd8 91       		.byte	0x91
 4387 0bd9 6E       		.sleb128 -18
 4388 0bda 19       		.uleb128 0x19
 4389 0bdb 783200   		.ascii	"x2\000"
 4390 0bde 01       		.byte	0x1
 4391 0bdf C409     		.2byte	0x9c4
 4392 0be1 77000000 		.4byte	0x77
 4393 0be5 02       		.uleb128 0x2
 4394 0be6 91       		.byte	0x91
 4395 0be7 6C       		.sleb128 -20
 4396 0be8 10       		.uleb128 0x10
 4397 0be9 746D7000 		.ascii	"tmp\000"
 4398 0bed 01       		.byte	0x1
 4399 0bee C609     		.2byte	0x9c6
 4400 0bf0 83000000 		.4byte	0x83
 4401 0bf4 02       		.uleb128 0x2
 4402 0bf5 91       		.byte	0x91
 4403 0bf6 74       		.sleb128 -12
 4404 0bf7 00       		.byte	0
 4405 0bf8 14       		.uleb128 0x14
 4406 0bf9 F1050000 		.4byte	.LASF118
 4407 0bfd 01       		.byte	0x1
 4408 0bfe AD0A     		.2byte	0xaad
 4409 0c00 83000000 		.4byte	0x83
 4410 0c04 00000000 		.4byte	.LFB69
 4411 0c08 1C000000 		.4byte	.LFE69-.LFB69
 4412 0c0c 01       		.uleb128 0x1
 4413 0c0d 9C       		.byte	0x9c
 4414 0c0e 220C0000 		.4byte	0xc22
 4415 0c12 13       		.uleb128 0x13
 4416 0c13 E1040000 		.4byte	.LASF51
 4417 0c17 01       		.byte	0x1
 4418 0c18 AD0A     		.2byte	0xaad
 4419 0c1a 83000000 		.4byte	0x83
 4420 0c1e 02       		.uleb128 0x2
 4421 0c1f 91       		.byte	0x91
 4422 0c20 74       		.sleb128 -12
 4423 0c21 00       		.byte	0
 4424 0c22 14       		.uleb128 0x14
 4425 0c23 39070000 		.4byte	.LASF119
 4426 0c27 01       		.byte	0x1
 4427 0c28 C70A     		.2byte	0xac7
 4428 0c2a 6B000000 		.4byte	0x6b
 4429 0c2e 00000000 		.4byte	.LFB70
 4430 0c32 1C000000 		.4byte	.LFE70-.LFB70
 4431 0c36 01       		.uleb128 0x1
 4432 0c37 9C       		.byte	0x9c
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 129


 4433 0c38 4C0C0000 		.4byte	0xc4c
 4434 0c3c 13       		.uleb128 0x13
 4435 0c3d E1040000 		.4byte	.LASF51
 4436 0c41 01       		.byte	0x1
 4437 0c42 C70A     		.2byte	0xac7
 4438 0c44 83000000 		.4byte	0x83
 4439 0c48 02       		.uleb128 0x2
 4440 0c49 91       		.byte	0x91
 4441 0c4a 74       		.sleb128 -12
 4442 0c4b 00       		.byte	0
 4443 0c4c 14       		.uleb128 0x14
 4444 0c4d 9A0A0000 		.4byte	.LASF120
 4445 0c51 01       		.byte	0x1
 4446 0c52 E10A     		.2byte	0xae1
 4447 0c54 6B000000 		.4byte	0x6b
 4448 0c58 00000000 		.4byte	.LFB71
 4449 0c5c 1C000000 		.4byte	.LFE71-.LFB71
 4450 0c60 01       		.uleb128 0x1
 4451 0c61 9C       		.byte	0x9c
 4452 0c62 760C0000 		.4byte	0xc76
 4453 0c66 13       		.uleb128 0x13
 4454 0c67 51030000 		.4byte	.LASF60
 4455 0c6b 01       		.byte	0x1
 4456 0c6c E10A     		.2byte	0xae1
 4457 0c6e 83000000 		.4byte	0x83
 4458 0c72 02       		.uleb128 0x2
 4459 0c73 91       		.byte	0x91
 4460 0c74 74       		.sleb128 -12
 4461 0c75 00       		.byte	0
 4462 0c76 1A       		.uleb128 0x1a
 4463 0c77 72080000 		.4byte	.LASF121
 4464 0c7b 01       		.byte	0x1
 4465 0c7c FB0A     		.2byte	0xafb
 4466 0c7e 00000000 		.4byte	.LFB72
 4467 0c82 14000000 		.4byte	.LFE72-.LFB72
 4468 0c86 01       		.uleb128 0x1
 4469 0c87 9C       		.byte	0x9c
 4470 0c88 1A       		.uleb128 0x1a
 4471 0c89 BB030000 		.4byte	.LASF122
 4472 0c8d 01       		.byte	0x1
 4473 0c8e 140B     		.2byte	0xb14
 4474 0c90 00000000 		.4byte	.LFB73
 4475 0c94 14000000 		.4byte	.LFE73-.LFB73
 4476 0c98 01       		.uleb128 0x1
 4477 0c99 9C       		.byte	0x9c
 4478 0c9a 17       		.uleb128 0x17
 4479 0c9b 77000000 		.4byte	0x77
 4480 0c9f AA0C0000 		.4byte	0xcaa
 4481 0ca3 18       		.uleb128 0x18
 4482 0ca4 BC000000 		.4byte	0xbc
 4483 0ca8 00       		.byte	0
 4484 0ca9 00       		.byte	0
 4485 0caa 1B       		.uleb128 0x1b
 4486 0cab F0090000 		.4byte	.LASF123
 4487 0caf 01       		.byte	0x1
 4488 0cb0 5D       		.byte	0x5d
 4489 0cb1 BB0C0000 		.4byte	0xcbb
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 130


 4490 0cb5 05       		.uleb128 0x5
 4491 0cb6 03       		.byte	0x3
 4492 0cb7 08000000 		.4byte	CapSense_centroidMult
 4493 0cbb 08       		.uleb128 0x8
 4494 0cbc 9A0C0000 		.4byte	0xc9a
 4495 0cc0 1B       		.uleb128 0x1b
 4496 0cc1 58030000 		.4byte	.LASF124
 4497 0cc5 01       		.byte	0x1
 4498 0cc6 61       		.byte	0x61
 4499 0cc7 DB070000 		.4byte	0x7db
 4500 0ccb 05       		.uleb128 0x5
 4501 0ccc 03       		.byte	0x3
 4502 0ccd 0C000000 		.4byte	CapSense_posFiltersMask
 4503 0cd1 1B       		.uleb128 0x1b
 4504 0cd2 7D010000 		.4byte	.LASF125
 4505 0cd6 01       		.byte	0x1
 4506 0cd7 65       		.byte	0x65
 4507 0cd8 550A0000 		.4byte	0xa55
 4508 0cdc 05       		.uleb128 0x5
 4509 0cdd 03       		.byte	0x3
 4510 0cde 10000000 		.4byte	CapSense_posFiltersData
 4511 0ce2 17       		.uleb128 0x17
 4512 0ce3 77000000 		.4byte	0x77
 4513 0ce7 F20C0000 		.4byte	0xcf2
 4514 0ceb 18       		.uleb128 0x18
 4515 0cec BC000000 		.4byte	0xbc
 4516 0cf0 04       		.byte	0x4
 4517 0cf1 00       		.byte	0
 4518 0cf2 1C       		.uleb128 0x1c
 4519 0cf3 26070000 		.4byte	.LASF126
 4520 0cf7 01       		.byte	0x1
 4521 0cf8 2C       		.byte	0x2c
 4522 0cf9 E20C0000 		.4byte	0xce2
 4523 0cfd 1C       		.uleb128 0x1c
 4524 0cfe 37030000 		.4byte	.LASF127
 4525 0d02 01       		.byte	0x1
 4526 0d03 2D       		.byte	0x2d
 4527 0d04 DB070000 		.4byte	0x7db
 4528 0d08 17       		.uleb128 0x17
 4529 0d09 6B000000 		.4byte	0x6b
 4530 0d0d 180D0000 		.4byte	0xd18
 4531 0d11 18       		.uleb128 0x18
 4532 0d12 BC000000 		.4byte	0xbc
 4533 0d16 04       		.byte	0x4
 4534 0d17 00       		.byte	0
 4535 0d18 1C       		.uleb128 0x1c
 4536 0d19 89030000 		.4byte	.LASF128
 4537 0d1d 01       		.byte	0x1
 4538 0d1e 2E       		.byte	0x2e
 4539 0d1f 230D0000 		.4byte	0xd23
 4540 0d23 08       		.uleb128 0x8
 4541 0d24 080D0000 		.4byte	0xd08
 4542 0d28 1D       		.uleb128 0x1d
 4543 0d29 C0080000 		.4byte	.LASF129
 4544 0d2d 01       		.byte	0x1
 4545 0d2e 34       		.byte	0x34
 4546 0d2f E20C0000 		.4byte	0xce2
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 131


 4547 0d33 05       		.uleb128 0x5
 4548 0d34 03       		.byte	0x3
 4549 0d35 00000000 		.4byte	CapSense_sensorBaseline
 4550 0d39 1D       		.uleb128 0x1d
 4551 0d3a 00000000 		.4byte	.LASF130
 4552 0d3e 01       		.byte	0x1
 4553 0d3f 35       		.byte	0x35
 4554 0d40 080D0000 		.4byte	0xd08
 4555 0d44 05       		.uleb128 0x5
 4556 0d45 03       		.byte	0x3
 4557 0d46 00000000 		.4byte	CapSense_sensorBaselineLow
 4558 0d4a 1D       		.uleb128 0x1d
 4559 0d4b 47020000 		.4byte	.LASF131
 4560 0d4f 01       		.byte	0x1
 4561 0d50 36       		.byte	0x36
 4562 0d51 080D0000 		.4byte	0xd08
 4563 0d55 05       		.uleb128 0x5
 4564 0d56 03       		.byte	0x3
 4565 0d57 00000000 		.4byte	CapSense_sensorSignal
 4566 0d5b 1D       		.uleb128 0x1d
 4567 0d5c 210B0000 		.4byte	.LASF132
 4568 0d60 01       		.byte	0x1
 4569 0d61 37       		.byte	0x37
 4570 0d62 DB070000 		.4byte	0x7db
 4571 0d66 05       		.uleb128 0x5
 4572 0d67 03       		.byte	0x3
 4573 0d68 00000000 		.4byte	CapSense_sensorOnMask
 4574 0d6c 1D       		.uleb128 0x1d
 4575 0d6d 55000000 		.4byte	.LASF133
 4576 0d71 01       		.byte	0x1
 4577 0d72 39       		.byte	0x39
 4578 0d73 080D0000 		.4byte	0xd08
 4579 0d77 05       		.uleb128 0x5
 4580 0d78 03       		.byte	0x3
 4581 0d79 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4582 0d7d 1D       		.uleb128 0x1d
 4583 0d7e 90080000 		.4byte	.LASF134
 4584 0d82 01       		.byte	0x1
 4585 0d83 3A       		.byte	0x3a
 4586 0d84 080D0000 		.4byte	0xd08
 4587 0d88 05       		.uleb128 0x5
 4588 0d89 03       		.byte	0x3
 4589 0d8a 00000000 		.4byte	CapSense_lowBaselineReset
 4590 0d8e 1D       		.uleb128 0x1d
 4591 0d8f 70030000 		.4byte	.LASF135
 4592 0d93 01       		.byte	0x1
 4593 0d94 49       		.byte	0x49
 4594 0d95 DB070000 		.4byte	0x7db
 4595 0d99 05       		.uleb128 0x5
 4596 0d9a 03       		.byte	0x3
 4597 0d9b 00000000 		.4byte	CapSense_fingerThreshold
 4598 0d9f 1D       		.uleb128 0x1d
 4599 0da0 65090000 		.4byte	.LASF136
 4600 0da4 01       		.byte	0x1
 4601 0da5 4B       		.byte	0x4b
 4602 0da6 DB070000 		.4byte	0x7db
 4603 0daa 05       		.uleb128 0x5
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 132


 4604 0dab 03       		.byte	0x3
 4605 0dac 00000000 		.4byte	CapSense_noiseThreshold
 4606 0db0 1D       		.uleb128 0x1d
 4607 0db1 AF040000 		.4byte	.LASF137
 4608 0db5 01       		.byte	0x1
 4609 0db6 4D       		.byte	0x4d
 4610 0db7 DB070000 		.4byte	0x7db
 4611 0dbb 05       		.uleb128 0x5
 4612 0dbc 03       		.byte	0x3
 4613 0dbd 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4614 0dc1 1D       		.uleb128 0x1d
 4615 0dc2 AC020000 		.4byte	.LASF138
 4616 0dc6 01       		.byte	0x1
 4617 0dc7 4F       		.byte	0x4f
 4618 0dc8 DB070000 		.4byte	0x7db
 4619 0dcc 05       		.uleb128 0x5
 4620 0dcd 03       		.byte	0x3
 4621 0dce 00000000 		.4byte	CapSense_hysteresis
 4622 0dd2 1D       		.uleb128 0x1d
 4623 0dd3 A5010000 		.4byte	.LASF139
 4624 0dd7 01       		.byte	0x1
 4625 0dd8 51       		.byte	0x51
 4626 0dd9 DB070000 		.4byte	0x7db
 4627 0ddd 05       		.uleb128 0x5
 4628 0dde 03       		.byte	0x3
 4629 0ddf 00000000 		.4byte	CapSense_debounce
 4630 0de3 1D       		.uleb128 0x1d
 4631 0de4 5D020000 		.4byte	.LASF140
 4632 0de8 01       		.byte	0x1
 4633 0de9 55       		.byte	0x55
 4634 0dea F40D0000 		.4byte	0xdf4
 4635 0dee 05       		.uleb128 0x5
 4636 0def 03       		.byte	0x3
 4637 0df0 00000000 		.4byte	CapSense_rawDataIndex
 4638 0df4 08       		.uleb128 0x8
 4639 0df5 DB070000 		.4byte	0x7db
 4640 0df9 1D       		.uleb128 0x1d
 4641 0dfa 96040000 		.4byte	.LASF141
 4642 0dfe 01       		.byte	0x1
 4643 0dff 59       		.byte	0x59
 4644 0e00 0A0E0000 		.4byte	0xe0a
 4645 0e04 05       		.uleb128 0x5
 4646 0e05 03       		.byte	0x3
 4647 0e06 00000000 		.4byte	CapSense_numberOfSensors
 4648 0e0a 08       		.uleb128 0x8
 4649 0e0b DB070000 		.4byte	0x7db
 4650 0e0f 1D       		.uleb128 0x1d
 4651 0e10 000B0000 		.4byte	.LASF142
 4652 0e14 01       		.byte	0x1
 4653 0e15 27       		.byte	0x27
 4654 0e16 E20C0000 		.4byte	0xce2
 4655 0e1a 05       		.uleb128 0x5
 4656 0e1b 03       		.byte	0x3
 4657 0e1c 00000000 		.4byte	CapSense_rawFilterData1
 4658 0e20 1C       		.uleb128 0x1c
 4659 0e21 F4000000 		.4byte	.LASF143
 4660 0e25 01       		.byte	0x1
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 133


 4661 0e26 41       		.byte	0x41
 4662 0e27 BF020000 		.4byte	0x2bf
 4663 0e2b 1D       		.uleb128 0x1d
 4664 0e2c 0C0A0000 		.4byte	.LASF144
 4665 0e30 01       		.byte	0x1
 4666 0e31 45       		.byte	0x45
 4667 0e32 6B000000 		.4byte	0x6b
 4668 0e36 05       		.uleb128 0x5
 4669 0e37 03       		.byte	0x3
 4670 0e38 00000000 		.4byte	CapSense_enableRawFilters
 4671 0e3c 00       		.byte	0
 4672              		.section	.debug_abbrev,"",%progbits
 4673              	.Ldebug_abbrev0:
 4674 0000 01       		.uleb128 0x1
 4675 0001 11       		.uleb128 0x11
 4676 0002 01       		.byte	0x1
 4677 0003 25       		.uleb128 0x25
 4678 0004 0E       		.uleb128 0xe
 4679 0005 13       		.uleb128 0x13
 4680 0006 0B       		.uleb128 0xb
 4681 0007 03       		.uleb128 0x3
 4682 0008 0E       		.uleb128 0xe
 4683 0009 1B       		.uleb128 0x1b
 4684 000a 0E       		.uleb128 0xe
 4685 000b 55       		.uleb128 0x55
 4686 000c 17       		.uleb128 0x17
 4687 000d 11       		.uleb128 0x11
 4688 000e 01       		.uleb128 0x1
 4689 000f 10       		.uleb128 0x10
 4690 0010 17       		.uleb128 0x17
 4691 0011 00       		.byte	0
 4692 0012 00       		.byte	0
 4693 0013 02       		.uleb128 0x2
 4694 0014 24       		.uleb128 0x24
 4695 0015 00       		.byte	0
 4696 0016 0B       		.uleb128 0xb
 4697 0017 0B       		.uleb128 0xb
 4698 0018 3E       		.uleb128 0x3e
 4699 0019 0B       		.uleb128 0xb
 4700 001a 03       		.uleb128 0x3
 4701 001b 0E       		.uleb128 0xe
 4702 001c 00       		.byte	0
 4703 001d 00       		.byte	0
 4704 001e 03       		.uleb128 0x3
 4705 001f 24       		.uleb128 0x24
 4706 0020 00       		.byte	0
 4707 0021 0B       		.uleb128 0xb
 4708 0022 0B       		.uleb128 0xb
 4709 0023 3E       		.uleb128 0x3e
 4710 0024 0B       		.uleb128 0xb
 4711 0025 03       		.uleb128 0x3
 4712 0026 08       		.uleb128 0x8
 4713 0027 00       		.byte	0
 4714 0028 00       		.byte	0
 4715 0029 04       		.uleb128 0x4
 4716 002a 16       		.uleb128 0x16
 4717 002b 00       		.byte	0
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 134


 4718 002c 03       		.uleb128 0x3
 4719 002d 0E       		.uleb128 0xe
 4720 002e 3A       		.uleb128 0x3a
 4721 002f 0B       		.uleb128 0xb
 4722 0030 3B       		.uleb128 0x3b
 4723 0031 05       		.uleb128 0x5
 4724 0032 49       		.uleb128 0x49
 4725 0033 13       		.uleb128 0x13
 4726 0034 00       		.byte	0
 4727 0035 00       		.byte	0
 4728 0036 05       		.uleb128 0x5
 4729 0037 13       		.uleb128 0x13
 4730 0038 01       		.byte	0x1
 4731 0039 0B       		.uleb128 0xb
 4732 003a 0B       		.uleb128 0xb
 4733 003b 3A       		.uleb128 0x3a
 4734 003c 0B       		.uleb128 0xb
 4735 003d 3B       		.uleb128 0x3b
 4736 003e 0B       		.uleb128 0xb
 4737 003f 01       		.uleb128 0x1
 4738 0040 13       		.uleb128 0x13
 4739 0041 00       		.byte	0
 4740 0042 00       		.byte	0
 4741 0043 06       		.uleb128 0x6
 4742 0044 0D       		.uleb128 0xd
 4743 0045 00       		.byte	0
 4744 0046 03       		.uleb128 0x3
 4745 0047 0E       		.uleb128 0xe
 4746 0048 3A       		.uleb128 0x3a
 4747 0049 0B       		.uleb128 0xb
 4748 004a 3B       		.uleb128 0x3b
 4749 004b 0B       		.uleb128 0xb
 4750 004c 49       		.uleb128 0x49
 4751 004d 13       		.uleb128 0x13
 4752 004e 38       		.uleb128 0x38
 4753 004f 0B       		.uleb128 0xb
 4754 0050 00       		.byte	0
 4755 0051 00       		.byte	0
 4756 0052 07       		.uleb128 0x7
 4757 0053 0F       		.uleb128 0xf
 4758 0054 00       		.byte	0
 4759 0055 0B       		.uleb128 0xb
 4760 0056 0B       		.uleb128 0xb
 4761 0057 49       		.uleb128 0x49
 4762 0058 13       		.uleb128 0x13
 4763 0059 00       		.byte	0
 4764 005a 00       		.byte	0
 4765 005b 08       		.uleb128 0x8
 4766 005c 26       		.uleb128 0x26
 4767 005d 00       		.byte	0
 4768 005e 49       		.uleb128 0x49
 4769 005f 13       		.uleb128 0x13
 4770 0060 00       		.byte	0
 4771 0061 00       		.byte	0
 4772 0062 09       		.uleb128 0x9
 4773 0063 15       		.uleb128 0x15
 4774 0064 01       		.byte	0x1
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 135


 4775 0065 27       		.uleb128 0x27
 4776 0066 19       		.uleb128 0x19
 4777 0067 49       		.uleb128 0x49
 4778 0068 13       		.uleb128 0x13
 4779 0069 01       		.uleb128 0x1
 4780 006a 13       		.uleb128 0x13
 4781 006b 00       		.byte	0
 4782 006c 00       		.byte	0
 4783 006d 0A       		.uleb128 0xa
 4784 006e 05       		.uleb128 0x5
 4785 006f 00       		.byte	0
 4786 0070 49       		.uleb128 0x49
 4787 0071 13       		.uleb128 0x13
 4788 0072 00       		.byte	0
 4789 0073 00       		.byte	0
 4790 0074 0B       		.uleb128 0xb
 4791 0075 15       		.uleb128 0x15
 4792 0076 01       		.byte	0x1
 4793 0077 27       		.uleb128 0x27
 4794 0078 19       		.uleb128 0x19
 4795 0079 01       		.uleb128 0x1
 4796 007a 13       		.uleb128 0x13
 4797 007b 00       		.byte	0
 4798 007c 00       		.byte	0
 4799 007d 0C       		.uleb128 0xc
 4800 007e 16       		.uleb128 0x16
 4801 007f 00       		.byte	0
 4802 0080 03       		.uleb128 0x3
 4803 0081 0E       		.uleb128 0xe
 4804 0082 3A       		.uleb128 0x3a
 4805 0083 0B       		.uleb128 0xb
 4806 0084 3B       		.uleb128 0x3b
 4807 0085 0B       		.uleb128 0xb
 4808 0086 49       		.uleb128 0x49
 4809 0087 13       		.uleb128 0x13
 4810 0088 00       		.byte	0
 4811 0089 00       		.byte	0
 4812 008a 0D       		.uleb128 0xd
 4813 008b 2E       		.uleb128 0x2e
 4814 008c 01       		.byte	0x1
 4815 008d 3F       		.uleb128 0x3f
 4816 008e 19       		.uleb128 0x19
 4817 008f 03       		.uleb128 0x3
 4818 0090 0E       		.uleb128 0xe
 4819 0091 3A       		.uleb128 0x3a
 4820 0092 0B       		.uleb128 0xb
 4821 0093 3B       		.uleb128 0x3b
 4822 0094 0B       		.uleb128 0xb
 4823 0095 27       		.uleb128 0x27
 4824 0096 19       		.uleb128 0x19
 4825 0097 11       		.uleb128 0x11
 4826 0098 01       		.uleb128 0x1
 4827 0099 12       		.uleb128 0x12
 4828 009a 06       		.uleb128 0x6
 4829 009b 40       		.uleb128 0x40
 4830 009c 18       		.uleb128 0x18
 4831 009d 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 136


 4832 009f 19       		.uleb128 0x19
 4833 00a0 01       		.uleb128 0x1
 4834 00a1 13       		.uleb128 0x13
 4835 00a2 00       		.byte	0
 4836 00a3 00       		.byte	0
 4837 00a4 0E       		.uleb128 0xe
 4838 00a5 05       		.uleb128 0x5
 4839 00a6 00       		.byte	0
 4840 00a7 03       		.uleb128 0x3
 4841 00a8 0E       		.uleb128 0xe
 4842 00a9 3A       		.uleb128 0x3a
 4843 00aa 0B       		.uleb128 0xb
 4844 00ab 3B       		.uleb128 0x3b
 4845 00ac 0B       		.uleb128 0xb
 4846 00ad 49       		.uleb128 0x49
 4847 00ae 13       		.uleb128 0x13
 4848 00af 02       		.uleb128 0x2
 4849 00b0 18       		.uleb128 0x18
 4850 00b1 00       		.byte	0
 4851 00b2 00       		.byte	0
 4852 00b3 0F       		.uleb128 0xf
 4853 00b4 2E       		.uleb128 0x2e
 4854 00b5 01       		.byte	0x1
 4855 00b6 3F       		.uleb128 0x3f
 4856 00b7 19       		.uleb128 0x19
 4857 00b8 03       		.uleb128 0x3
 4858 00b9 0E       		.uleb128 0xe
 4859 00ba 3A       		.uleb128 0x3a
 4860 00bb 0B       		.uleb128 0xb
 4861 00bc 3B       		.uleb128 0x3b
 4862 00bd 0B       		.uleb128 0xb
 4863 00be 27       		.uleb128 0x27
 4864 00bf 19       		.uleb128 0x19
 4865 00c0 11       		.uleb128 0x11
 4866 00c1 01       		.uleb128 0x1
 4867 00c2 12       		.uleb128 0x12
 4868 00c3 06       		.uleb128 0x6
 4869 00c4 40       		.uleb128 0x40
 4870 00c5 18       		.uleb128 0x18
 4871 00c6 9642     		.uleb128 0x2116
 4872 00c8 19       		.uleb128 0x19
 4873 00c9 01       		.uleb128 0x1
 4874 00ca 13       		.uleb128 0x13
 4875 00cb 00       		.byte	0
 4876 00cc 00       		.byte	0
 4877 00cd 10       		.uleb128 0x10
 4878 00ce 34       		.uleb128 0x34
 4879 00cf 00       		.byte	0
 4880 00d0 03       		.uleb128 0x3
 4881 00d1 08       		.uleb128 0x8
 4882 00d2 3A       		.uleb128 0x3a
 4883 00d3 0B       		.uleb128 0xb
 4884 00d4 3B       		.uleb128 0x3b
 4885 00d5 05       		.uleb128 0x5
 4886 00d6 49       		.uleb128 0x49
 4887 00d7 13       		.uleb128 0x13
 4888 00d8 02       		.uleb128 0x2
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 137


 4889 00d9 18       		.uleb128 0x18
 4890 00da 00       		.byte	0
 4891 00db 00       		.byte	0
 4892 00dc 11       		.uleb128 0x11
 4893 00dd 2E       		.uleb128 0x2e
 4894 00de 01       		.byte	0x1
 4895 00df 3F       		.uleb128 0x3f
 4896 00e0 19       		.uleb128 0x19
 4897 00e1 03       		.uleb128 0x3
 4898 00e2 0E       		.uleb128 0xe
 4899 00e3 3A       		.uleb128 0x3a
 4900 00e4 0B       		.uleb128 0xb
 4901 00e5 3B       		.uleb128 0x3b
 4902 00e6 05       		.uleb128 0x5
 4903 00e7 27       		.uleb128 0x27
 4904 00e8 19       		.uleb128 0x19
 4905 00e9 11       		.uleb128 0x11
 4906 00ea 01       		.uleb128 0x1
 4907 00eb 12       		.uleb128 0x12
 4908 00ec 06       		.uleb128 0x6
 4909 00ed 40       		.uleb128 0x40
 4910 00ee 18       		.uleb128 0x18
 4911 00ef 9642     		.uleb128 0x2116
 4912 00f1 19       		.uleb128 0x19
 4913 00f2 01       		.uleb128 0x1
 4914 00f3 13       		.uleb128 0x13
 4915 00f4 00       		.byte	0
 4916 00f5 00       		.byte	0
 4917 00f6 12       		.uleb128 0x12
 4918 00f7 34       		.uleb128 0x34
 4919 00f8 00       		.byte	0
 4920 00f9 03       		.uleb128 0x3
 4921 00fa 0E       		.uleb128 0xe
 4922 00fb 3A       		.uleb128 0x3a
 4923 00fc 0B       		.uleb128 0xb
 4924 00fd 3B       		.uleb128 0x3b
 4925 00fe 05       		.uleb128 0x5
 4926 00ff 49       		.uleb128 0x49
 4927 0100 13       		.uleb128 0x13
 4928 0101 02       		.uleb128 0x2
 4929 0102 18       		.uleb128 0x18
 4930 0103 00       		.byte	0
 4931 0104 00       		.byte	0
 4932 0105 13       		.uleb128 0x13
 4933 0106 05       		.uleb128 0x5
 4934 0107 00       		.byte	0
 4935 0108 03       		.uleb128 0x3
 4936 0109 0E       		.uleb128 0xe
 4937 010a 3A       		.uleb128 0x3a
 4938 010b 0B       		.uleb128 0xb
 4939 010c 3B       		.uleb128 0x3b
 4940 010d 05       		.uleb128 0x5
 4941 010e 49       		.uleb128 0x49
 4942 010f 13       		.uleb128 0x13
 4943 0110 02       		.uleb128 0x2
 4944 0111 18       		.uleb128 0x18
 4945 0112 00       		.byte	0
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 138


 4946 0113 00       		.byte	0
 4947 0114 14       		.uleb128 0x14
 4948 0115 2E       		.uleb128 0x2e
 4949 0116 01       		.byte	0x1
 4950 0117 3F       		.uleb128 0x3f
 4951 0118 19       		.uleb128 0x19
 4952 0119 03       		.uleb128 0x3
 4953 011a 0E       		.uleb128 0xe
 4954 011b 3A       		.uleb128 0x3a
 4955 011c 0B       		.uleb128 0xb
 4956 011d 3B       		.uleb128 0x3b
 4957 011e 05       		.uleb128 0x5
 4958 011f 27       		.uleb128 0x27
 4959 0120 19       		.uleb128 0x19
 4960 0121 49       		.uleb128 0x49
 4961 0122 13       		.uleb128 0x13
 4962 0123 11       		.uleb128 0x11
 4963 0124 01       		.uleb128 0x1
 4964 0125 12       		.uleb128 0x12
 4965 0126 06       		.uleb128 0x6
 4966 0127 40       		.uleb128 0x40
 4967 0128 18       		.uleb128 0x18
 4968 0129 9742     		.uleb128 0x2117
 4969 012b 19       		.uleb128 0x19
 4970 012c 01       		.uleb128 0x1
 4971 012d 13       		.uleb128 0x13
 4972 012e 00       		.byte	0
 4973 012f 00       		.byte	0
 4974 0130 15       		.uleb128 0x15
 4975 0131 2E       		.uleb128 0x2e
 4976 0132 01       		.byte	0x1
 4977 0133 3F       		.uleb128 0x3f
 4978 0134 19       		.uleb128 0x19
 4979 0135 03       		.uleb128 0x3
 4980 0136 0E       		.uleb128 0xe
 4981 0137 3A       		.uleb128 0x3a
 4982 0138 0B       		.uleb128 0xb
 4983 0139 3B       		.uleb128 0x3b
 4984 013a 05       		.uleb128 0x5
 4985 013b 27       		.uleb128 0x27
 4986 013c 19       		.uleb128 0x19
 4987 013d 11       		.uleb128 0x11
 4988 013e 01       		.uleb128 0x1
 4989 013f 12       		.uleb128 0x12
 4990 0140 06       		.uleb128 0x6
 4991 0141 40       		.uleb128 0x40
 4992 0142 18       		.uleb128 0x18
 4993 0143 9742     		.uleb128 0x2117
 4994 0145 19       		.uleb128 0x19
 4995 0146 01       		.uleb128 0x1
 4996 0147 13       		.uleb128 0x13
 4997 0148 00       		.byte	0
 4998 0149 00       		.byte	0
 4999 014a 16       		.uleb128 0x16
 5000 014b 2E       		.uleb128 0x2e
 5001 014c 01       		.byte	0x1
 5002 014d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 139


 5003 014e 19       		.uleb128 0x19
 5004 014f 03       		.uleb128 0x3
 5005 0150 0E       		.uleb128 0xe
 5006 0151 3A       		.uleb128 0x3a
 5007 0152 0B       		.uleb128 0xb
 5008 0153 3B       		.uleb128 0x3b
 5009 0154 05       		.uleb128 0x5
 5010 0155 27       		.uleb128 0x27
 5011 0156 19       		.uleb128 0x19
 5012 0157 49       		.uleb128 0x49
 5013 0158 13       		.uleb128 0x13
 5014 0159 11       		.uleb128 0x11
 5015 015a 01       		.uleb128 0x1
 5016 015b 12       		.uleb128 0x12
 5017 015c 06       		.uleb128 0x6
 5018 015d 40       		.uleb128 0x40
 5019 015e 18       		.uleb128 0x18
 5020 015f 9642     		.uleb128 0x2116
 5021 0161 19       		.uleb128 0x19
 5022 0162 01       		.uleb128 0x1
 5023 0163 13       		.uleb128 0x13
 5024 0164 00       		.byte	0
 5025 0165 00       		.byte	0
 5026 0166 17       		.uleb128 0x17
 5027 0167 01       		.uleb128 0x1
 5028 0168 01       		.byte	0x1
 5029 0169 49       		.uleb128 0x49
 5030 016a 13       		.uleb128 0x13
 5031 016b 01       		.uleb128 0x1
 5032 016c 13       		.uleb128 0x13
 5033 016d 00       		.byte	0
 5034 016e 00       		.byte	0
 5035 016f 18       		.uleb128 0x18
 5036 0170 21       		.uleb128 0x21
 5037 0171 00       		.byte	0
 5038 0172 49       		.uleb128 0x49
 5039 0173 13       		.uleb128 0x13
 5040 0174 2F       		.uleb128 0x2f
 5041 0175 0B       		.uleb128 0xb
 5042 0176 00       		.byte	0
 5043 0177 00       		.byte	0
 5044 0178 19       		.uleb128 0x19
 5045 0179 05       		.uleb128 0x5
 5046 017a 00       		.byte	0
 5047 017b 03       		.uleb128 0x3
 5048 017c 08       		.uleb128 0x8
 5049 017d 3A       		.uleb128 0x3a
 5050 017e 0B       		.uleb128 0xb
 5051 017f 3B       		.uleb128 0x3b
 5052 0180 05       		.uleb128 0x5
 5053 0181 49       		.uleb128 0x49
 5054 0182 13       		.uleb128 0x13
 5055 0183 02       		.uleb128 0x2
 5056 0184 18       		.uleb128 0x18
 5057 0185 00       		.byte	0
 5058 0186 00       		.byte	0
 5059 0187 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 140


 5060 0188 2E       		.uleb128 0x2e
 5061 0189 00       		.byte	0
 5062 018a 3F       		.uleb128 0x3f
 5063 018b 19       		.uleb128 0x19
 5064 018c 03       		.uleb128 0x3
 5065 018d 0E       		.uleb128 0xe
 5066 018e 3A       		.uleb128 0x3a
 5067 018f 0B       		.uleb128 0xb
 5068 0190 3B       		.uleb128 0x3b
 5069 0191 05       		.uleb128 0x5
 5070 0192 27       		.uleb128 0x27
 5071 0193 19       		.uleb128 0x19
 5072 0194 11       		.uleb128 0x11
 5073 0195 01       		.uleb128 0x1
 5074 0196 12       		.uleb128 0x12
 5075 0197 06       		.uleb128 0x6
 5076 0198 40       		.uleb128 0x40
 5077 0199 18       		.uleb128 0x18
 5078 019a 9742     		.uleb128 0x2117
 5079 019c 19       		.uleb128 0x19
 5080 019d 00       		.byte	0
 5081 019e 00       		.byte	0
 5082 019f 1B       		.uleb128 0x1b
 5083 01a0 34       		.uleb128 0x34
 5084 01a1 00       		.byte	0
 5085 01a2 03       		.uleb128 0x3
 5086 01a3 0E       		.uleb128 0xe
 5087 01a4 3A       		.uleb128 0x3a
 5088 01a5 0B       		.uleb128 0xb
 5089 01a6 3B       		.uleb128 0x3b
 5090 01a7 0B       		.uleb128 0xb
 5091 01a8 49       		.uleb128 0x49
 5092 01a9 13       		.uleb128 0x13
 5093 01aa 02       		.uleb128 0x2
 5094 01ab 18       		.uleb128 0x18
 5095 01ac 00       		.byte	0
 5096 01ad 00       		.byte	0
 5097 01ae 1C       		.uleb128 0x1c
 5098 01af 34       		.uleb128 0x34
 5099 01b0 00       		.byte	0
 5100 01b1 03       		.uleb128 0x3
 5101 01b2 0E       		.uleb128 0xe
 5102 01b3 3A       		.uleb128 0x3a
 5103 01b4 0B       		.uleb128 0xb
 5104 01b5 3B       		.uleb128 0x3b
 5105 01b6 0B       		.uleb128 0xb
 5106 01b7 49       		.uleb128 0x49
 5107 01b8 13       		.uleb128 0x13
 5108 01b9 3F       		.uleb128 0x3f
 5109 01ba 19       		.uleb128 0x19
 5110 01bb 3C       		.uleb128 0x3c
 5111 01bc 19       		.uleb128 0x19
 5112 01bd 00       		.byte	0
 5113 01be 00       		.byte	0
 5114 01bf 1D       		.uleb128 0x1d
 5115 01c0 34       		.uleb128 0x34
 5116 01c1 00       		.byte	0
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 141


 5117 01c2 03       		.uleb128 0x3
 5118 01c3 0E       		.uleb128 0xe
 5119 01c4 3A       		.uleb128 0x3a
 5120 01c5 0B       		.uleb128 0xb
 5121 01c6 3B       		.uleb128 0x3b
 5122 01c7 0B       		.uleb128 0xb
 5123 01c8 49       		.uleb128 0x49
 5124 01c9 13       		.uleb128 0x13
 5125 01ca 3F       		.uleb128 0x3f
 5126 01cb 19       		.uleb128 0x19
 5127 01cc 02       		.uleb128 0x2
 5128 01cd 18       		.uleb128 0x18
 5129 01ce 00       		.byte	0
 5130 01cf 00       		.byte	0
 5131 01d0 00       		.byte	0
 5132              		.section	.debug_aranges,"",%progbits
 5133 0000 44010000 		.4byte	0x144
 5134 0004 0200     		.2byte	0x2
 5135 0006 00000000 		.4byte	.Ldebug_info0
 5136 000a 04       		.byte	0x4
 5137 000b 00       		.byte	0
 5138 000c 0000     		.2byte	0
 5139 000e 0000     		.2byte	0
 5140 0010 00000000 		.4byte	.LFB36
 5141 0014 58000000 		.4byte	.LFE36-.LFB36
 5142 0018 00000000 		.4byte	.LFB37
 5143 001c 28000000 		.4byte	.LFE37-.LFB37
 5144 0020 00000000 		.4byte	.LFB38
 5145 0024 26000000 		.4byte	.LFE38-.LFB38
 5146 0028 00000000 		.4byte	.LFB39
 5147 002c 50000000 		.4byte	.LFE39-.LFB39
 5148 0030 00000000 		.4byte	.LFB40
 5149 0034 38020000 		.4byte	.LFE40-.LFB40
 5150 0038 00000000 		.4byte	.LFB41
 5151 003c 1E000000 		.4byte	.LFE41-.LFB41
 5152 0040 00000000 		.4byte	.LFB42
 5153 0044 40000000 		.4byte	.LFE42-.LFB42
 5154 0048 00000000 		.4byte	.LFB43
 5155 004c 58000000 		.4byte	.LFE43-.LFB43
 5156 0050 00000000 		.4byte	.LFB44
 5157 0054 1C000000 		.4byte	.LFE44-.LFB44
 5158 0058 00000000 		.4byte	.LFB45
 5159 005c 24000000 		.4byte	.LFE45-.LFB45
 5160 0060 00000000 		.4byte	.LFB46
 5161 0064 1C000000 		.4byte	.LFE46-.LFB46
 5162 0068 00000000 		.4byte	.LFB47
 5163 006c 24000000 		.4byte	.LFE47-.LFB47
 5164 0070 00000000 		.4byte	.LFB48
 5165 0074 1C000000 		.4byte	.LFE48-.LFB48
 5166 0078 00000000 		.4byte	.LFB49
 5167 007c 1C000000 		.4byte	.LFE49-.LFB49
 5168 0080 00000000 		.4byte	.LFB50
 5169 0084 1C000000 		.4byte	.LFE50-.LFB50
 5170 0088 00000000 		.4byte	.LFB51
 5171 008c 1C000000 		.4byte	.LFE51-.LFB51
 5172 0090 00000000 		.4byte	.LFB52
 5173 0094 24000000 		.4byte	.LFE52-.LFB52
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 142


 5174 0098 00000000 		.4byte	.LFB53
 5175 009c 24000000 		.4byte	.LFE53-.LFB53
 5176 00a0 00000000 		.4byte	.LFB54
 5177 00a4 24000000 		.4byte	.LFE54-.LFB54
 5178 00a8 00000000 		.4byte	.LFB55
 5179 00ac 24000000 		.4byte	.LFE55-.LFB55
 5180 00b0 00000000 		.4byte	.LFB56
 5181 00b4 24000000 		.4byte	.LFE56-.LFB56
 5182 00b8 00000000 		.4byte	.LFB57
 5183 00bc 24000000 		.4byte	.LFE57-.LFB57
 5184 00c0 00000000 		.4byte	.LFB58
 5185 00c4 3C010000 		.4byte	.LFE58-.LFB58
 5186 00c8 00000000 		.4byte	.LFB59
 5187 00cc 42000000 		.4byte	.LFE59-.LFB59
 5188 00d0 00000000 		.4byte	.LFB60
 5189 00d4 36000000 		.4byte	.LFE60-.LFB60
 5190 00d8 00000000 		.4byte	.LFB61
 5191 00dc 5C000000 		.4byte	.LFE61-.LFB61
 5192 00e0 00000000 		.4byte	.LFB62
 5193 00e4 5C000000 		.4byte	.LFE62-.LFB62
 5194 00e8 00000000 		.4byte	.LFB63
 5195 00ec B8000000 		.4byte	.LFE63-.LFB63
 5196 00f0 00000000 		.4byte	.LFB64
 5197 00f4 A0010000 		.4byte	.LFE64-.LFB64
 5198 00f8 00000000 		.4byte	.LFB65
 5199 00fc 5C010000 		.4byte	.LFE65-.LFB65
 5200 0100 00000000 		.4byte	.LFB66
 5201 0104 98000000 		.4byte	.LFE66-.LFB66
 5202 0108 00000000 		.4byte	.LFB67
 5203 010c 76000000 		.4byte	.LFE67-.LFB67
 5204 0110 00000000 		.4byte	.LFB68
 5205 0114 3C000000 		.4byte	.LFE68-.LFB68
 5206 0118 00000000 		.4byte	.LFB69
 5207 011c 1C000000 		.4byte	.LFE69-.LFB69
 5208 0120 00000000 		.4byte	.LFB70
 5209 0124 1C000000 		.4byte	.LFE70-.LFB70
 5210 0128 00000000 		.4byte	.LFB71
 5211 012c 1C000000 		.4byte	.LFE71-.LFB71
 5212 0130 00000000 		.4byte	.LFB72
 5213 0134 14000000 		.4byte	.LFE72-.LFB72
 5214 0138 00000000 		.4byte	.LFB73
 5215 013c 14000000 		.4byte	.LFE73-.LFB73
 5216 0140 00000000 		.4byte	0
 5217 0144 00000000 		.4byte	0
 5218              		.section	.debug_ranges,"",%progbits
 5219              	.Ldebug_ranges0:
 5220 0000 00000000 		.4byte	.LFB36
 5221 0004 58000000 		.4byte	.LFE36
 5222 0008 00000000 		.4byte	.LFB37
 5223 000c 28000000 		.4byte	.LFE37
 5224 0010 00000000 		.4byte	.LFB38
 5225 0014 26000000 		.4byte	.LFE38
 5226 0018 00000000 		.4byte	.LFB39
 5227 001c 50000000 		.4byte	.LFE39
 5228 0020 00000000 		.4byte	.LFB40
 5229 0024 38020000 		.4byte	.LFE40
 5230 0028 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 143


 5231 002c 1E000000 		.4byte	.LFE41
 5232 0030 00000000 		.4byte	.LFB42
 5233 0034 40000000 		.4byte	.LFE42
 5234 0038 00000000 		.4byte	.LFB43
 5235 003c 58000000 		.4byte	.LFE43
 5236 0040 00000000 		.4byte	.LFB44
 5237 0044 1C000000 		.4byte	.LFE44
 5238 0048 00000000 		.4byte	.LFB45
 5239 004c 24000000 		.4byte	.LFE45
 5240 0050 00000000 		.4byte	.LFB46
 5241 0054 1C000000 		.4byte	.LFE46
 5242 0058 00000000 		.4byte	.LFB47
 5243 005c 24000000 		.4byte	.LFE47
 5244 0060 00000000 		.4byte	.LFB48
 5245 0064 1C000000 		.4byte	.LFE48
 5246 0068 00000000 		.4byte	.LFB49
 5247 006c 1C000000 		.4byte	.LFE49
 5248 0070 00000000 		.4byte	.LFB50
 5249 0074 1C000000 		.4byte	.LFE50
 5250 0078 00000000 		.4byte	.LFB51
 5251 007c 1C000000 		.4byte	.LFE51
 5252 0080 00000000 		.4byte	.LFB52
 5253 0084 24000000 		.4byte	.LFE52
 5254 0088 00000000 		.4byte	.LFB53
 5255 008c 24000000 		.4byte	.LFE53
 5256 0090 00000000 		.4byte	.LFB54
 5257 0094 24000000 		.4byte	.LFE54
 5258 0098 00000000 		.4byte	.LFB55
 5259 009c 24000000 		.4byte	.LFE55
 5260 00a0 00000000 		.4byte	.LFB56
 5261 00a4 24000000 		.4byte	.LFE56
 5262 00a8 00000000 		.4byte	.LFB57
 5263 00ac 24000000 		.4byte	.LFE57
 5264 00b0 00000000 		.4byte	.LFB58
 5265 00b4 3C010000 		.4byte	.LFE58
 5266 00b8 00000000 		.4byte	.LFB59
 5267 00bc 42000000 		.4byte	.LFE59
 5268 00c0 00000000 		.4byte	.LFB60
 5269 00c4 36000000 		.4byte	.LFE60
 5270 00c8 00000000 		.4byte	.LFB61
 5271 00cc 5C000000 		.4byte	.LFE61
 5272 00d0 00000000 		.4byte	.LFB62
 5273 00d4 5C000000 		.4byte	.LFE62
 5274 00d8 00000000 		.4byte	.LFB63
 5275 00dc B8000000 		.4byte	.LFE63
 5276 00e0 00000000 		.4byte	.LFB64
 5277 00e4 A0010000 		.4byte	.LFE64
 5278 00e8 00000000 		.4byte	.LFB65
 5279 00ec 5C010000 		.4byte	.LFE65
 5280 00f0 00000000 		.4byte	.LFB66
 5281 00f4 98000000 		.4byte	.LFE66
 5282 00f8 00000000 		.4byte	.LFB67
 5283 00fc 76000000 		.4byte	.LFE67
 5284 0100 00000000 		.4byte	.LFB68
 5285 0104 3C000000 		.4byte	.LFE68
 5286 0108 00000000 		.4byte	.LFB69
 5287 010c 1C000000 		.4byte	.LFE69
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 144


 5288 0110 00000000 		.4byte	.LFB70
 5289 0114 1C000000 		.4byte	.LFE70
 5290 0118 00000000 		.4byte	.LFB71
 5291 011c 1C000000 		.4byte	.LFE71
 5292 0120 00000000 		.4byte	.LFB72
 5293 0124 14000000 		.4byte	.LFE72
 5294 0128 00000000 		.4byte	.LFB73
 5295 012c 14000000 		.4byte	.LFE73
 5296 0130 00000000 		.4byte	0
 5297 0134 00000000 		.4byte	0
 5298              		.section	.debug_line,"",%progbits
 5299              	.Ldebug_line0:
 5300 0000 9D040000 		.section	.debug_str,"MS",%progbits,1
 5300      02005E00 
 5300      00000201 
 5300      FB0E0D00 
 5300      01010101 
 5301              	.LASF130:
 5302 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5302      656E7365 
 5302      5F73656E 
 5302      736F7242 
 5302      6173656C 
 5303              	.LASF117:
 5304 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5304      656E7365 
 5304      5F494952 
 5304      3446696C 
 5304      74657200 
 5305              	.LASF89:
 5306 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5306      656E7365 
 5306      5F646562 
 5306      6F756E63 
 5306      65436F75 
 5307              	.LASF32:
 5308 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 5308      53706565 
 5308      6454626C 
 5308      00
 5309              	.LASF133:
 5310 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5310      656E7365 
 5310      5F6C6F77 
 5310      42617365 
 5310      6C696E65 
 5311              	.LASF55:
 5312 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5312      656E7365 
 5312      5F557064 
 5312      61746542 
 5312      6173656C 
 5313              	.LASF35:
 5314 0095 6E756D62 		.ascii	"numberOfSensors\000"
 5314      65724F66 
 5314      53656E73 
 5314      6F727300 
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 145


 5315              	.LASF39:
 5316 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 5316      65744269 
 5316      7456616C 
 5316      756500
 5317              	.LASF96:
 5318 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 5318      656E7365 
 5318      5F446973 
 5318      61626C65 
 5318      57696467 
 5319              	.LASF63:
 5320 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5320      656E7365 
 5320      5F557064 
 5320      61746545 
 5320      6E61626C 
 5321              	.LASF112:
 5322 00eb 706F7349 		.ascii	"posIndex\000"
 5322      6E646578 
 5322      00
 5323              	.LASF143:
 5324 00f4 43617053 		.ascii	"CapSense_config\000"
 5324      656E7365 
 5324      5F636F6E 
 5324      66696700 
 5325              	.LASF54:
 5326 0104 69735365 		.ascii	"isSensorEnabled\000"
 5326      6E736F72 
 5326      456E6162 
 5326      6C656400 
 5327              	.LASF92:
 5328 0114 6E756D4F 		.ascii	"numOfSensors\000"
 5328      6653656E 
 5328      736F7273 
 5328      00
 5329              	.LASF8:
 5330 0121 756E7369 		.ascii	"unsigned int\000"
 5330      676E6564 
 5330      20696E74 
 5330      00
 5331              	.LASF44:
 5332 012e 746F7461 		.ascii	"totalSensorsNum\000"
 5332      6C53656E 
 5332      736F7273 
 5332      4E756D00 
 5333              	.LASF106:
 5334 013e 706F734E 		.ascii	"posNext\000"
 5334      65787400 
 5335              	.LASF12:
 5336 0146 696E7431 		.ascii	"int16\000"
 5336      3600
 5337              	.LASF29:
 5338 014c 73616D70 		.ascii	"sampleMaxTbl\000"
 5338      6C654D61 
 5338      7854626C 
 5338      00
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 146


 5339              	.LASF53:
 5340 0159 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5340      656E7365 
 5340      5F496E69 
 5340      7469616C 
 5340      697A6545 
 5341              	.LASF125:
 5342 017d 43617053 		.ascii	"CapSense_posFiltersData\000"
 5342      656E7365 
 5342      5F706F73 
 5342      46696C74 
 5342      65727344 
 5343              	.LASF27:
 5344 0195 7369676E 		.ascii	"signRegisterTbl\000"
 5344      52656769 
 5344      73746572 
 5344      54626C00 
 5345              	.LASF139:
 5346 01a5 43617053 		.ascii	"CapSense_debounce\000"
 5346      656E7365 
 5346      5F646562 
 5346      6F756E63 
 5346      6500
 5347              	.LASF50:
 5348 01b7 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5348      656E7365 
 5348      5F496E69 
 5348      7469616C 
 5348      697A6553 
 5349              	.LASF48:
 5350 01d9 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 5350      656E7365 
 5350      5F434F4E 
 5350      4649475F 
 5350      54595045 
 5351              	.LASF68:
 5352 01f7 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5352      656E7365 
 5352      5F536574 
 5352      42617365 
 5352      6C696E65 
 5353              	.LASF34:
 5354 0210 72617744 		.ascii	"rawDataIndex\000"
 5354      61746149 
 5354      6E646578 
 5354      00
 5355              	.LASF43:
 5356 021d 746F7461 		.ascii	"totalWidgetsNum\000"
 5356      6C576964 
 5356      67657473 
 5356      4E756D00 
 5357              	.LASF72:
 5358 022d 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5358      656E7365 
 5358      5F536574 
 5358      44696666 
 5358      436F756E 
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 147


 5359              	.LASF131:
 5360 0247 43617053 		.ascii	"CapSense_sensorSignal\000"
 5360      656E7365 
 5360      5F73656E 
 5360      736F7253 
 5360      69676E61 
 5361              	.LASF140:
 5362 025d 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5362      656E7365 
 5362      5F726177 
 5362      44617461 
 5362      496E6465 
 5363              	.LASF79:
 5364 0273 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5364      656E7365 
 5364      5F536574 
 5364      4E6F6973 
 5364      65546872 
 5365              	.LASF64:
 5366 028e 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5366      656E7365 
 5366      5F557064 
 5366      61746557 
 5366      69646765 
 5367              	.LASF138:
 5368 02ac 43617053 		.ascii	"CapSense_hysteresis\000"
 5368      656E7365 
 5368      5F687973 
 5368      74657265 
 5368      73697300 
 5369              	.LASF14:
 5370 02c0 666C6F61 		.ascii	"float\000"
 5370      7400
 5371              	.LASF13:
 5372 02c6 696E7433 		.ascii	"int32\000"
 5372      3200
 5373              	.LASF99:
 5374 02cc 636F756E 		.ascii	"count\000"
 5374      7400
 5375              	.LASF24:
 5376 02d2 7265736F 		.ascii	"resolutionsTbl\000"
 5376      6C757469 
 5376      6F6E7354 
 5376      626C00
 5377              	.LASF114:
 5378 02e1 706F7346 		.ascii	"posFiltersMask\000"
 5378      696C7465 
 5378      72734D61 
 5378      736B00
 5379              	.LASF75:
 5380 02f0 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5380      656E7365 
 5380      5F476574 
 5380      4E6F6973 
 5380      65546872 
 5381              	.LASF26:
 5382 030b 72756E6E 		.ascii	"runningDifferenceTbl\000"
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 148


 5382      696E6744 
 5382      69666665 
 5382      72656E63 
 5382      6554626C 
 5383              	.LASF7:
 5384 0320 6C6F6E67 		.ascii	"long long unsigned int\000"
 5384      206C6F6E 
 5384      6720756E 
 5384      7369676E 
 5384      65642069 
 5385              	.LASF127:
 5386 0337 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5386      656E7365 
 5386      5F73656E 
 5386      736F7245 
 5386      6E61626C 
 5387              	.LASF60:
 5388 0351 77696467 		.ascii	"widget\000"
 5388      657400
 5389              	.LASF124:
 5390 0358 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5390      656E7365 
 5390      5F706F73 
 5390      46696C74 
 5390      6572734D 
 5391              	.LASF135:
 5392 0370 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5392      656E7365 
 5392      5F66696E 
 5392      67657254 
 5392      68726573 
 5393              	.LASF128:
 5394 0389 43617053 		.ascii	"CapSense_widgetNumber\000"
 5394      656E7365 
 5394      5F776964 
 5394      6765744E 
 5394      756D6265 
 5395              	.LASF78:
 5396 039f 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5396      656E7365 
 5396      5F536574 
 5396      46696E67 
 5396      65725468 
 5397              	.LASF122:
 5398 03bb 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5398      656E7365 
 5398      5F446973 
 5398      61626C65 
 5398      52617744 
 5399              	.LASF73:
 5400 03da 76616C75 		.ascii	"value\000"
 5400      6500
 5401              	.LASF76:
 5402 03e0 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5402      656E7365 
 5402      5F476574 
 5402      46696E67 
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 149


 5402      65724879 
 5403              	.LASF71:
 5404 03fd 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5404      656E7365 
 5404      5F476574 
 5404      44696666 
 5404      436F756E 
 5405              	.LASF57:
 5406 0417 7369676E 		.ascii	"sign\000"
 5406      00
 5407              	.LASF98:
 5408 041c 6F666673 		.ascii	"offset\000"
 5408      657400
 5409              	.LASF25:
 5410 0423 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5410      65456E76 
 5410      656C6F70 
 5410      6554626C 
 5410      00
 5411              	.LASF56:
 5412 0434 63616C63 		.ascii	"calc\000"
 5412      00
 5413              	.LASF38:
 5414 0439 70747252 		.ascii	"ptrReadSensorRaw\000"
 5414      65616453 
 5414      656E736F 
 5414      72526177 
 5414      00
 5415              	.LASF88:
 5416 044a 68797374 		.ascii	"hysteresis\000"
 5416      65726573 
 5416      697300
 5417              	.LASF59:
 5418 0455 66696C74 		.ascii	"filteredRawData\000"
 5418      65726564 
 5418      52617744 
 5418      61746100 
 5419              	.LASF65:
 5420 0465 73656E73 		.ascii	"sensorsPerWidget\000"
 5420      6F727350 
 5420      65725769 
 5420      64676574 
 5420      00
 5421              	.LASF94:
 5422 0476 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5422      656E7365 
 5422      5F436865 
 5422      636B4973 
 5422      416E7957 
 5423              	.LASF141:
 5424 0496 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5424      656E7365 
 5424      5F6E756D 
 5424      6265724F 
 5424      6653656E 
 5425              	.LASF137:
 5426 04af 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 150


 5426      656E7365 
 5426      5F6E6567 
 5426      61746976 
 5426      654E6F69 
 5427              	.LASF42:
 5428 04cf 746F7461 		.ascii	"totalScanslotsNum\000"
 5428      6C536361 
 5428      6E736C6F 
 5428      74734E75 
 5428      6D00
 5429              	.LASF51:
 5430 04e1 73656E73 		.ascii	"sensor\000"
 5430      6F7200
 5431              	.LASF45:
 5432 04e8 73656E73 		.ascii	"sensetivitySeed\000"
 5432      65746976 
 5432      69747953 
 5432      65656400 
 5433              	.LASF95:
 5434 04f8 43617053 		.ascii	"CapSense_EnableWidget\000"
 5434      656E7365 
 5434      5F456E61 
 5434      626C6557 
 5434      69646765 
 5435              	.LASF16:
 5436 050e 63686172 		.ascii	"char\000"
 5436      00
 5437              	.LASF77:
 5438 0513 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5438      656E7365 
 5438      5F476574 
 5438      4E656761 
 5438      74697665 
 5439              	.LASF33:
 5440 0536 70726573 		.ascii	"prescalerTable\000"
 5440      63616C65 
 5440      72546162 
 5440      6C6500
 5441              	.LASF10:
 5442 0545 75696E74 		.ascii	"uint16\000"
 5442      313600
 5443              	.LASF69:
 5444 054c 64617461 		.ascii	"data\000"
 5444      00
 5445              	.LASF18:
 5446 0551 69646163 		.ascii	"idac1LevelsTbl\000"
 5446      314C6576 
 5446      656C7354 
 5446      626C00
 5447              	.LASF104:
 5448 0560 7265736F 		.ascii	"resolution\000"
 5448      6C757469 
 5448      6F6E00
 5449              	.LASF91:
 5450 056b 72617749 		.ascii	"rawIndex\000"
 5450      6E646578 
 5450      00
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 151


 5451              	.LASF107:
 5452 0574 43617053 		.ascii	"CapSense_centroid\000"
 5452      656E7365 
 5452      5F63656E 
 5452      74726F69 
 5452      6400
 5453              	.LASF147:
 5454 0586 433A5C55 		.ascii	"C:\\Users\\Ecapable\\Desktop\\BLE Lab 4\\BLE Lab 4."
 5454      73657273 
 5454      5C456361 
 5454      7061626C 
 5454      655C4465 
 5455 05b4 63796473 		.ascii	"cydsn\000"
 5455      6E00
 5456              	.LASF146:
 5457 05ba 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5457      6E657261 
 5457      7465645F 
 5457      536F7572 
 5457      63655C50 
 5458              	.LASF6:
 5459 05e3 6C6F6E67 		.ascii	"long long int\000"
 5459      206C6F6E 
 5459      6720696E 
 5459      7400
 5460              	.LASF118:
 5461 05f1 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5461      656E7365 
 5461      5F476574 
 5461      57696467 
 5461      65744E75 
 5462              	.LASF85:
 5463 060a 6465626F 		.ascii	"debounce\000"
 5463      756E6365 
 5463      00
 5464              	.LASF37:
 5465 0613 70747250 		.ascii	"ptrPreScan\000"
 5465      72655363 
 5465      616E00
 5466              	.LASF84:
 5467 061e 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5467      656E7365 
 5467      5F436865 
 5467      636B4973 
 5467      53656E73 
 5468              	.LASF36:
 5469 063b 70747247 		.ascii	"ptrGetRaw\000"
 5469      65745261 
 5469      7700
 5470              	.LASF62:
 5471 0645 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5471      656E7365 
 5471      5F557064 
 5471      61746553 
 5471      656E736F 
 5472              	.LASF145:
 5473 0663 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 152


 5473      4320342E 
 5473      392E3320 
 5473      32303135 
 5473      30333033 
 5474 0696 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5474      20726576 
 5474      6973696F 
 5474      6E203232 
 5474      31323230 
 5475 06c9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5475      66756E63 
 5475      74696F6E 
 5475      2D736563 
 5475      74696F6E 
 5476              	.LASF49:
 5477 06f1 43617053 		.ascii	"CapSense_BaseInit\000"
 5477      656E7365 
 5477      5F426173 
 5477      65496E69 
 5477      7400
 5478              	.LASF103:
 5479 0703 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5479      656E7365 
 5479      5F43616C 
 5479      6343656E 
 5479      74726F69 
 5480              	.LASF28:
 5481 0719 73616D70 		.ascii	"sampleMinTbl\000"
 5481      6C654D69 
 5481      6E54626C 
 5481      00
 5482              	.LASF126:
 5483 0726 43617053 		.ascii	"CapSense_sensorRaw\000"
 5483      656E7365 
 5483      5F73656E 
 5483      736F7252 
 5483      617700
 5484              	.LASF119:
 5485 0739 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5485      656E7365 
 5485      5F476574 
 5485      4C6F7742 
 5485      6173656C 
 5486              	.LASF81:
 5487 0756 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5487      656E7365 
 5487      5F536574 
 5487      4E656761 
 5487      74697665 
 5488              	.LASF11:
 5489 0779 75696E74 		.ascii	"uint32\000"
 5489      333200
 5490              	.LASF113:
 5491 0780 66697273 		.ascii	"firstTimeIndex\000"
 5491      7454696D 
 5491      65496E64 
 5491      657800
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 153


 5492              	.LASF102:
 5493 078f 73746172 		.ascii	"startOfSlider\000"
 5493      744F6653 
 5493      6C696465 
 5493      7200
 5494              	.LASF80:
 5495 079d 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5495      656E7365 
 5495      5F536574 
 5495      46696E67 
 5495      65724879 
 5496              	.LASF74:
 5497 07ba 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5497      656E7365 
 5497      5F476574 
 5497      46696E67 
 5497      65725468 
 5498              	.LASF109:
 5499 07d6 6E756D65 		.ascii	"numerator\000"
 5499      7261746F 
 5499      7200
 5500              	.LASF67:
 5501 07e0 6C617374 		.ascii	"lastSensor\000"
 5501      53656E73 
 5501      6F7200
 5502              	.LASF46:
 5503 07eb 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5503      6B467265 
 5503      715F4D48 
 5503      7A00
 5504              	.LASF105:
 5505 07f9 706F7350 		.ascii	"posPrev\000"
 5505      72657600 
 5506              	.LASF111:
 5507 0801 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5507      656E7365 
 5507      5F476574 
 5507      43656E74 
 5507      726F6964 
 5508              	.LASF19:
 5509 0819 69646163 		.ascii	"idac2LevelsTbl\000"
 5509      324C6576 
 5509      656C7354 
 5509      626C00
 5510              	.LASF2:
 5511 0828 73686F72 		.ascii	"short int\000"
 5511      7420696E 
 5511      7400
 5512              	.LASF4:
 5513 0832 6C6F6E67 		.ascii	"long int\000"
 5513      20696E74 
 5513      00
 5514              	.LASF66:
 5515 083b 66697273 		.ascii	"firstSensor\000"
 5515      7453656E 
 5515      736F7200 
 5516              	.LASF101:
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 154


 5517 0847 74656D70 		.ascii	"temp\000"
 5517      00
 5518              	.LASF97:
 5519 084c 43617053 		.ascii	"CapSense_FindMaximum\000"
 5519      656E7365 
 5519      5F46696E 
 5519      644D6178 
 5519      696D756D 
 5520              	.LASF23:
 5521 0861 77696467 		.ascii	"widgetNubmersTbl\000"
 5521      65744E75 
 5521      626D6572 
 5521      7354626C 
 5521      00
 5522              	.LASF121:
 5523 0872 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5523      656E7365 
 5523      5F456E61 
 5523      626C6552 
 5523      61774461 
 5524              	.LASF134:
 5525 0890 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5525      656E7365 
 5525      5F6C6F77 
 5525      42617365 
 5525      6C696E65 
 5526              	.LASF110:
 5527 08aa 64656E6F 		.ascii	"denominator\000"
 5527      6D696E61 
 5527      746F7200 
 5528              	.LASF31:
 5529 08b6 6B56616C 		.ascii	"kValueTbl\000"
 5529      75655462 
 5529      6C00
 5530              	.LASF129:
 5531 08c0 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5531      656E7365 
 5531      5F73656E 
 5531      736F7242 
 5531      6173656C 
 5532              	.LASF100:
 5533 08d8 6D617869 		.ascii	"maximum\000"
 5533      6D756D00 
 5534              	.LASF17:
 5535 08e0 73697A65 		.ascii	"sizetype\000"
 5535      74797065 
 5535      00
 5536              	.LASF5:
 5537 08e9 6C6F6E67 		.ascii	"long unsigned int\000"
 5537      20756E73 
 5537      69676E65 
 5537      6420696E 
 5537      7400
 5538              	.LASF47:
 5539 08fb 706F696E 		.ascii	"pointers\000"
 5539      74657273 
 5539      00
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 155


 5540              	.LASF61:
 5541 0904 6E6F6973 		.ascii	"noiseThreshold\000"
 5541      65546872 
 5541      6573686F 
 5541      6C6400
 5542              	.LASF30:
 5543 0913 70726576 		.ascii	"previousSampleTbl\000"
 5543      696F7573 
 5543      53616D70 
 5543      6C655462 
 5543      6C00
 5544              	.LASF82:
 5545 0925 43617053 		.ascii	"CapSense_SetDebounce\000"
 5545      656E7365 
 5545      5F536574 
 5545      4465626F 
 5545      756E6365 
 5546              	.LASF87:
 5547 093a 66696E67 		.ascii	"fingerThreshold\000"
 5547      65725468 
 5547      72657368 
 5547      6F6C6400 
 5548              	.LASF21:
 5549 094a 63686172 		.ascii	"chargeDivTbl\000"
 5549      67654469 
 5549      7654626C 
 5549      00
 5550              	.LASF1:
 5551 0957 756E7369 		.ascii	"unsigned char\000"
 5551      676E6564 
 5551      20636861 
 5551      7200
 5552              	.LASF136:
 5553 0965 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5553      656E7365 
 5553      5F6E6F69 
 5553      73655468 
 5553      72657368 
 5554              	.LASF86:
 5555 097d 6465626F 		.ascii	"debounceIndex\000"
 5555      756E6365 
 5555      496E6465 
 5555      7800
 5556              	.LASF52:
 5557 098b 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5557      656E7365 
 5557      5F496E69 
 5557      7469616C 
 5557      697A6541 
 5558              	.LASF70:
 5559 09ab 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5559      656E7365 
 5559      5F476574 
 5559      42617365 
 5559      6C696E65 
 5560              	.LASF83:
 5561 09c4 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 156


 5561      656E7365 
 5561      5F536574 
 5561      4C6F7742 
 5561      6173656C 
 5562              	.LASF20:
 5563 09e1 73656E73 		.ascii	"sensetivityTbl\000"
 5563      65746976 
 5563      69747954 
 5563      626C00
 5564              	.LASF123:
 5565 09f0 43617053 		.ascii	"CapSense_centroidMult\000"
 5565      656E7365 
 5565      5F63656E 
 5565      74726F69 
 5565      644D756C 
 5566              	.LASF93:
 5567 0a06 73746174 		.ascii	"state\000"
 5567      6500
 5568              	.LASF144:
 5569 0a0c 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5569      656E7365 
 5569      5F656E61 
 5569      626C6552 
 5569      61774669 
 5570              	.LASF22:
 5571 0a26 6D6F6444 		.ascii	"modDivTbl\000"
 5571      69765462 
 5571      6C00
 5572              	.LASF0:
 5573 0a30 7369676E 		.ascii	"signed char\000"
 5573      65642063 
 5573      68617200 
 5574              	.LASF3:
 5575 0a3c 73686F72 		.ascii	"short unsigned int\000"
 5575      7420756E 
 5575      7369676E 
 5575      65642069 
 5575      6E7400
 5576              	.LASF115:
 5577 0a4f 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5577      656E7365 
 5577      5F476574 
 5577      52616469 
 5577      616C4365 
 5578              	.LASF40:
 5579 0a6d 70747253 		.ascii	"ptrSetBitValue\000"
 5579      65744269 
 5579      7456616C 
 5579      756500
 5580              	.LASF116:
 5581 0a7c 43617053 		.ascii	"CapSense_MedianFilter\000"
 5581      656E7365 
 5581      5F4D6564 
 5581      69616E46 
 5581      696C7465 
 5582              	.LASF58:
 5583 0a92 74656D70 		.ascii	"tempRaw\000"
ARM GAS  C:\Users\Ecapable\AppData\Local\Temp\ccBfFIq6.s 			page 157


 5583      52617700 
 5584              	.LASF120:
 5585 0a9a 43617053 		.ascii	"CapSense_GetDebounce\000"
 5585      656E7365 
 5585      5F476574 
 5585      4465626F 
 5585      756E6365 
 5586              	.LASF90:
 5587 0aaf 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5587      656E7365 
 5587      5F436865 
 5587      636B4973 
 5587      57696467 
 5588              	.LASF9:
 5589 0acc 75696E74 		.ascii	"uint8\000"
 5589      3800
 5590              	.LASF15:
 5591 0ad2 646F7562 		.ascii	"double\000"
 5591      6C6500
 5592              	.LASF41:
 5593 0ad9 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5593      656E7365 
 5593      5F434F4E 
 5593      4649475F 
 5593      54595045 
 5594              	.LASF142:
 5595 0b00 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5595      656E7365 
 5595      5F726177 
 5595      46696C74 
 5595      65724461 
 5596              	.LASF108:
 5597 0b18 706F7369 		.ascii	"position\000"
 5597      74696F6E 
 5597      00
 5598              	.LASF132:
 5599 0b21 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5599      656E7365 
 5599      5F73656E 
 5599      736F724F 
 5599      6E4D6173 
 5600              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
